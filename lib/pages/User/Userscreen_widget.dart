// ignore_for_file: must_be_immutable, avoid_print, unused_label, prefer_interpolation_to_compose_strings, library_private_types_in_public_api, unused_local_variable

import 'dart:async';
import 'dart:convert';
import 'dart:math' as math;
import 'dart:math';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:external_app_launcher/external_app_launcher.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter_share/flutter_share.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:googleapis_auth/auth.dart';
import 'package:googleapis_auth/auth_io.dart';
import 'package:lottie/lottie.dart';
import 'package:maaakanmoney/components/ReusableWidget/ReusableBottomNavigationBar.dart';
import 'package:maaakanmoney/components/ReusableWidget/ReusableCard.dart';
import 'package:maaakanmoney/components/ReusableWidget/Reusable_Toggle.dart';
import 'package:maaakanmoney/components/ReusableWidget/infoCard.dart';
import 'package:maaakanmoney/components/constants.dart';
import 'package:maaakanmoney/pages/Auth/mpin.dart';
import 'package:maaakanmoney/pages/Auth/phone_auth_widget.dart';
import 'package:maaakanmoney/pages/MeatBasket/usermeat_order.dart';

import 'package:maaakanmoney/pages/User/TransactionHist/TransactionHistory.dart';
import 'package:maaakanmoney/pages/User/UserScreen_Notifer.dart';
import 'package:maaakanmoney/pages/User/navigation_drawer/order_meat/create_order.dart';
import 'package:maaakanmoney/pages/User/navigation_drawer/order_meat/meat_type_selection.dart';
import 'package:maaakanmoney/pages/User/navigation_drawer/ordered_meatlist/orderedmeat.dart';
import 'package:maaakanmoney/pages/User/user_shopping_commision/user_shopping_commision.dart';

import 'package:maaakanmoney/pages/budget_copy/navigation_drawer/assistance_screen.dart';
import 'package:maaakanmoney/pages/budget_copy/navigation_drawer/meat_basket_areas/area_list.dart';
import 'package:maaakanmoney/pages/budget_copy/navigation_drawer/my_orders/orders_screen.dart';
import 'package:maaakanmoney/pages/budget_copy/navigation_drawer/post_product_screen.dart';
import 'package:maaakanmoney/pages/showUser/showUserController.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'package:sizer/sizer.dart';
import 'package:tuple/tuple.dart';
import 'package:url_launcher/url_launcher.dart';

import '../../components/NotificationService.dart';
import '../../components/ReusableWidget/ReusableAppBar.dart';
import '../../components/custom_dialog_box.dart';
import '../../components/reusable_code.dart';
import '../../components/search_box.dart';
import '../../phoneController.dart';
import '../budget_copy/BudgetCopyController.dart';
import '../budget_copy/budget_copy_widget.dart';
import '../budget_copy/ecommerce/ecommerce.dart';
import '../budget_copy/navigation_drawer/meat_basket_areas/add_new_area.dart';
import '../chatScreen.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import 'package:flutter/material.dart';
import 'Cashback/CashbackDetails.dart';
import 'Goals/AddGoals.dart';
import 'Goals/GoalHistoryNotifier1.dart';
import 'Goals/GoalsHistory1.dart';
import 'Profile/Profile.dart';
import 'Request Money/RequestMoney.dart';
import 'SaveMoney/SaveMoney.dart';
import 'ShopNow/shop_now.dart';
import 'budget_model.dart';
export 'budget_model.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

import 'navigation_drawer/food_category/food_category.dart';
import 'navigation_drawer/order_food/create_foodOrder.dart';
import 'navigation_drawer/ordered_foodlist/orderedFood.dart';

class ImageClipper extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    final path = Path();
    path.lineTo(0, size.height - 50); // Start at the bottom-left corner
    path.quadraticBezierTo(
      // Add a quadratic bezier curve
      size.width / 2, size.height, // Control point and end point
      size.width, size.height - 50, // Control point and end point
    );
    path.lineTo(size.width, 0); // Draw a straight line to the top-right corner
    path.close(); // Close the path to form a closed shape
    return path;
  }

  @override
  bool shouldReclip(covariant CustomClipper<Path> oldClipper) {
    return false;
  }
}

class _SliverAppBarDelegate extends SliverPersistentHeaderDelegate {
  _SliverAppBarDelegate({
    @required this.minHeight,
    @required this.maxHeight,
    @required this.child,
  });

  final double? minHeight;
  final double? maxHeight;
  final Widget? child;

  @override
  double get minExtent => minHeight!;

  @override
  double get maxExtent => math.max(maxHeight!, minHeight!);

  @override
  Widget build(
      BuildContext context, double shrinkOffset, bool overlapsContent) {
    return SizedBox.expand(child: child);
  }

  @override
  bool shouldRebuild(_SliverAppBarDelegate oldDelegate) {
    return maxHeight != oldDelegate.maxHeight ||
        minHeight != oldDelegate.minHeight ||
        child != oldDelegate.child;
  }
}

//todo:- 16.11.23 - new dashboard implementation
class BudgetWidget1 extends ConsumerStatefulWidget {
  BudgetWidget1({
    Key? key,
    @required this.getMobile,
    @required this.getDocId,
  }) : super(key: key);
  String? getMobile;
  String? getDocId;

  @override
  _BudgetWidget1State createState() => _BudgetWidget1State();
}

class _BudgetWidget1State extends ConsumerState<BudgetWidget1>
    with TickerProviderStateMixin {
  final scaffoldKey = GlobalKey<ScaffoldState>();
  final txtReqAmount = TextEditingController();
  String? loginKey;
  List<Transactionss>? dataList = [];
  List<Goal>? goalList = [];
  double? getGoalTotalAmount = 0.0;
  final List<TransactionData>? creditedData = [
    // TransactionData(date: DateTime(2024, 1, 1), amount: 1),
  ];

  final List<TransactionData>? debitedData = [
    // TransactionData(date: DateTime(2024, 1, 1), amount: 1),
  ];
  final List<Map<String, String>> items = [
    {'title': 'Chicken', 'image': 'images/chickn1.png'},
    {'title': 'Mutton', 'image': 'images/muttn1.png'},
  ];

  // final List<Map<String, String>> chickenMeatTypes = [
  //   {'title': 'Chicken', 'image': 'images/chickn1.png'},
  //   {'title': 'Chicken Boneless', 'image': 'images/chickn1.png'},
  //   {'title': 'Chicken Leg Piece', 'image': 'images/chickn1.png'},
  //   {'title': 'Chicken Chest Piece', 'image': 'images/chickn1.png'},
  //
  //
  // ];
  //
  // final List<Map<String, String>> muttonMeatTypes = [
  //
  //   {'title': 'Mutton', 'image': 'images/muttn1.png'},
  //   {'title': 'Mutton Liver', 'image': 'images/muttn1.png'},
  //   {'title': 'Mutton Bone less', 'image': 'images/muttn1.png'},
  // ];

  // final List<Map<String, String>> chickenMeatTypes = [
  //   {'title': 'Chicken', 'image': 'images/chickn1.png'},
  //   {'title': 'ChickenBoneless', 'image': 'images/chickn1.png'},
  //   {'title': 'ChickenLegPiece', 'image': 'images/chickn1.png'},
  //   {'title': 'ChickenChestPiece', 'image': 'images/chickn1.png'},
  //
  //
  // ];
  //
  //
  //
  // final List<Map<String, String>> muttonMeatTypes = [
  //
  //   {'title': 'Mutton', 'image': 'images/muttn1.png'},
  //   {'title': 'MuttonLiver', 'image': 'images/muttn1.png'},
  //   {'title': 'MuttonBoneless', 'image': 'images/muttn1.png'},
  // ];

  final List<Tuple3<String, String, String>> chickenMeatTypes = [
    Tuple3("Chicken", "images/chickn1.png", "Chicken"),
    Tuple3("Chicken Boneless", "images/chickn1.png", "ChickenBoneless"),
    Tuple3("Chicken Leg Piece", "images/chickn1.png", "ChickenLegPiece"),
    Tuple3("Chicken Chest Piece", "images/chickn1.png", "ChickenChestPiece"),
  ];

  final List<Tuple3<String, String, String>> muttonMeatTypes = [
    Tuple3("Mutton", "images/muttn1.png", "Mutton"),
    Tuple3("Mutton Livers", "images/muttn1.png", "MuttonLiver"),
    Tuple3("Mutton Bone less", "images/muttn1.png", "MuttonBoneless"),
  ];

  //todo:- 3.5.23
  final FirebaseFirestore firestore = FirebaseFirestore.instance;
  AnimationController? lottieController;
  String? lastProcessedMessageId;
  Timer? _timer;
  bool _isNavigationBarVisible = false;
  bool? isSavAmntReq = false;
  double? goalTarget = 0.0;
  bool? isProductCountExceeds = false;
  String? getUserName = "";

  // bool? isAdminWorker = false;
  String? getUserType = "";

  // UserType? getUserType = UserType.normalUser;

  ///new design implementation 15.7.24
  List<double> heightValues = [
    30.h,
    50.h,
    80.h
  ]; // Array of height values for Portion B
  double portionBHeight = 30.h; //// Initial height of Portion B
  final ValueNotifier<double> portionBHeightNotifier =
      ValueNotifier<double>(25.h); // Initial height of Portion B
  static double minPortionBHeight = 30.h; // Minimum height of Portion B
  late AnimationController _controller;
  late Animation<double> _animation;
  final SingletonReusableCode _singleton = SingletonReusableCode();
  final ValueNotifier<bool> _isTappingAffiliateApp = ValueNotifier<bool>(false);
  final ValueNotifier<bool> _isDeleting = ValueNotifier<bool>(false);
  final FirebaseFirestore fireStore = FirebaseFirestore.instance;

  // List<FoodList>? categoryProducts = [];

  final List<String> _categories = [
    'Main Course',
    'Gravy',
    'Starters',
    'Desserts',
  ];
  final Map<String, String> _categoryMapping = {
    '0': 'All',
    '1': 'Main Course',
    '2': 'Gravy',
    '3': 'Starters',
    '4': 'Desserts',
    '5': 'Juices',
    '6': 'Ice Creams',
    '7': 'Tiffin',
    '8': 'Lunch',
  };

  final Map<String, String> _groceryCategoryMapping = {
    '0': 'All',
    '4': 'Milk',
    '5': 'Maavu',
    '6': 'Water Can',
    '1': 'Daily Needs',
    '2': 'Weekly Needs',
    '3': 'Monthly Needs',

  };




  final Map<String, String> _categoryMeatMapping = {
    '0': 'Chicken',
    '1': 'Mutton',
  };

  //todo:- meat shop related
  bool? isReffererPricingPresent = false;
  bool? isShowMeatSection = true;
  bool? isShowFoodSection = true;
  bool? isShowGrocerySection = true;
  //todo:- food section related
  //------
  final double itemWidth = 160.0;
  final Map<int, ScrollController> _scrollControllers = {};
  final Map<int, ValueNotifier<int>> _selectedIndexNotifiers = {};
  final ValueNotifier<String> _searchQuery = ValueNotifier<String>("");

  //menu selection list
  final ValueNotifier<int> _selectedCategoryIndex = ValueNotifier<int>(0);
  final ValueNotifier<int> _selectedMeatCategoryIndex = ValueNotifier<int>(0);

  //grocery model
  final Map<int, ScrollController> _scrollgroceryControllers = {};
  final Map<int, ValueNotifier<int>> _selectedgroceryIndexNotifiers = {};
  final ValueNotifier<int> _selectedGroceryCategoryIndex = ValueNotifier<int>(0);

  //todo:- common toggle for meat user and food user
  final ValueNotifier<int> _selectedOptionCategory = ValueNotifier<int>(0);
  final Map<String, String> _ToggleOptionCategory = {
    '0': 'Meat',
    '2': 'Grocery',
    '1': 'Food',

  };

  int _selectedIndex = 0;
  int _selectedFoodCustNavIndex = 0;

  int _selectedMeatCustNavIndex = 0;

  List<FoodDetailsList>? orderedFood = [];

  void _onScroll(int sectionIndex) {
    _updateSelectedIndex(sectionIndex);
  }

  void _updateSelectedIndex(int sectionIndex) {
    double offset = _scrollControllers[sectionIndex]!.offset;
    int centerIndex = (offset / itemWidth).round();
    var categoryKeys = _categoryMapping.keys.toList();
    String prodCode = categoryKeys[sectionIndex];
    int? itemCount = _getFoodItemsByProdCode(prodCode)?.length;

    if (_scrollControllers[sectionIndex]!.position.pixels >=
        _scrollControllers[sectionIndex]!.position.maxScrollExtent) {
      centerIndex = (itemCount ?? 0) - 1;
    }

    if (centerIndex != _selectedIndexNotifiers[sectionIndex]!.value) {
      _selectedIndexNotifiers[sectionIndex]!.value =
          max(0, min(centerIndex, (itemCount ?? 0) - 1));
    }
  }

  void _scrollToIndex(int sectionIndex, int index, {bool animate = true}) {
    double targetOffset = index * itemWidth;

    if (animate) {
      _scrollControllers[sectionIndex]!.animateTo(
        targetOffset,
        duration: const Duration(milliseconds: 500),
        curve: Curves.easeInOut,
      );
    } else {
      _scrollControllers[sectionIndex]!.jumpTo(targetOffset);
    }
  }

  //todo:- grocery section
  void _onGroceryScroll(int sectionIndex) {
    _updateGrocerySelectedIndex(sectionIndex);
  }


  void _updateGrocerySelectedIndex(int sectionIndex) {
    double offset = _scrollgroceryControllers[sectionIndex]!.offset;
    int centerIndex = (offset / itemWidth).round();
    var categoryKeys = _groceryCategoryMapping.keys.toList();
    String prodCode = categoryKeys[sectionIndex];
    int? itemCount = _getGroceryItemsByProdCode(prodCode)?.length;

    if (_scrollgroceryControllers[sectionIndex]!.position.pixels >=
        _scrollgroceryControllers[sectionIndex]!.position.maxScrollExtent) {
      centerIndex = (itemCount ?? 0) - 1;
    }

    if (centerIndex != _selectedgroceryIndexNotifiers[sectionIndex]!.value) {
      _selectedgroceryIndexNotifiers[sectionIndex]!.value =
          max(0, min(centerIndex, (itemCount ?? 0) - 1));
    }
  }

  void _scrollgroceryToIndex(int sectionIndex, int index, {bool animate = true}) {
    double targetOffset = index * itemWidth;

    if (animate) {
      _scrollgroceryControllers[sectionIndex]!.animateTo(
        targetOffset,
        duration: const Duration(milliseconds: 500),
        curve: Curves.easeInOut,
      );
    } else {
      _scrollgroceryControllers[sectionIndex]!.jumpTo(targetOffset);
    }
  }



//--------

  List<FoodList>? _getFoodItemsByProdCode(String prodCode) {
    print(prodCode);
    if (prodCode == '0') {
      return ref.read(UserDashListProvider.notifier).categoryProducts;
    }
    return ref
        .read(UserDashListProvider.notifier)
        .categoryProducts
        ?.where((item) => item.productCategory == prodCode)
        .toList();
  }

  List<GroceryList>? _getGroceryItemsByProdCode(String prodCode) {
    print(prodCode);
    if (prodCode == '0') {
      return ref.read(UserDashListProvider.notifier).categoryGroceryProducts;
    }
    return ref
        .read(UserDashListProvider.notifier)
        .categoryGroceryProducts
        ?.where((item) => item.productCategory == prodCode)
        .toList();
  }

  Future<bool> _onWillPop() async {
    return (await showDialog(
          context: context,
          builder: (alertcontext) => AlertDialog(
            title: new Text('Are you sure?'),
            content: new Text('Do you want to Exit'),
            actions: <Widget>[
              TextButton(
                // onPressed: () =>
                //     Navigator.of(context).pop(false), //<-- SEE HERE
                onPressed: () {
                  Navigator.pop(alertcontext);
                },
                child: new Text('No'),
              ),
              TextButton(
                // onPressed: () =>
                //     Navigator.of(context).pop(true), // <-- SEE HERE
                onPressed: () async {
                  // Navigator.of(context).pop(true);
                  SharedPreferences prefs =
                      await SharedPreferences.getInstance();
                  loginKey = prefs.getString("LoginSuccessuser1");

                  if (loginKey == null || loginKey == "" || loginKey!.isEmpty) {
                    Navigator.pushAndRemoveUntil(
                      context,
                      MaterialPageRoute(builder: (context) => MyPhone()),
                      (route) => false, // Remove all routes from the stack
                    );
                  } else {
                    SharedPreferences prefs =
                        await SharedPreferences.getInstance();
                    String? mPin = prefs.getString("Mpin");
                    Navigator.pushAndRemoveUntil(
                      context,
                      MaterialPageRoute(
                          builder: (context) => MpinPageWidget(
                              getMobileNo: loginKey ?? "", getMpin: mPin)),
                      (route) => false, // Remove all routes from the stack
                    );
                  }
                },
                child: new Text('Yes'),
              ),
            ],
          ),
        )) ??
        false;
  }

// todo:- category options for maaka user
  final ValueNotifier<int> _userSelectedToggleOptionCategory =
      ValueNotifier<int>(0);
  final Map<String, String> _userToggleOptionCategory = {
    '0': 'Food & Meat',
    '1': 'E-Commerce & Shopping',
    '2': 'Finance & Savings',
    '3': 'Information & Updates',
  };



  //todo:- 29.4.25 - call support for grocery model and meat

  final double maxSlideWidth = 280;

  final ValueNotifier<double> sliderPosition = ValueNotifier(0.0);
  final ValueNotifier<bool> called = ValueNotifier(false);

  void _launchDialer() async {
    String? token = await NotificationService
        .getDocumentIDsAndData();
    if (token != null) {
      Response? response = await NotificationService
          .postNotificationRequest(
          token,
          "Hi Super Admin,\n${getUserName ?? "N/A"!}  Needs Shop Assistant",
          "Mobile - ${widget.getMobile ?? "N/A"!}\nArrange Assistant to Buy Items!");
      // Handle the response as needed
    } else {
      print("Problem in getting Token");
    }
    final Uri launchUri = Uri(
      scheme: 'tel',
      path: Constants.adminNo2,
    );
    await launchUrl(launchUri);

  }

  void _resetSlider() {
    sliderPosition.value = 0.0;
    called.value = false;
  }

  @override
  void initState() {
    super.initState();

    ///new design implementation 15.7.24
    _controller = AnimationController(
      vsync: this,
      duration: Duration(milliseconds: 100),
    );
    _animation = Tween<double>(
      begin: portionBHeight,
      end: portionBHeight,
    ).animate(_controller);

    ///

    //todo:- 25.9.23 stoped advertice banner in dashboard header
    // _startTimer();
    // remainingBalance = ref.read(UserDashListProvider.notifier).getNetbalance;
    lottieController = AnimationController(vsync: this);

    lottieController!.addStatusListener((status) async {
      if (status == AnimationStatus.completed) {
        lottieController!.repeat();
      }
    });

    SchedulerBinding.instance.addPostFrameCallback((timeStamp) {
      ref.read(isUserRefreshIndicator.notifier).state = false;
      ref.read(txtPaidStatus.notifier).state = false;
      ref.read(txtCashbckPaidStatus.notifier).state = false;
      ref.read(UserDashListProvider.notifier).getUserDetails(
          widget.getMobile,
          (ref.read(UserDashListProvider.notifier).getReffererType ?? "") == "2"
              ? ref.read(UserDashListProvider.notifier).getReffererMobileNo
              : "9941445471",
          (ref.read(UserDashListProvider.notifier).getReffererType ?? "") == "2"
              ? true
              : false);
      ref
          .read(UserDashListProvider.notifier)
          .getUserTransactionsStream2(widget.getMobile);

      getUserType = ref.read(UserDashListProvider.notifier).getUserType ?? "";

      // ref.read(UserDashListProvider.notifier).updateGoalDetails(goalDocuments,iconOptions);
      // _startListeningForNewMessages();
      // scaffoldKey.currentState?.openDrawer();

      // fetchReffererType();
    });

    getDocumentIDsAndData();
    getNotificationAccessToken();

    //todo:- for food section card highlight animation
    for (int i = 0; i < _categoryMapping.length; i++) {
      _scrollControllers[i] = ScrollController();
      _selectedIndexNotifiers[i] = ValueNotifier<int>(0);
      _scrollControllers[i]!.addListener(() => _onScroll(i));
    }

    //todo:- for grocery section card highlight animation
    for (int i = 0; i < _groceryCategoryMapping.length; i++) {
      _scrollgroceryControllers[i] = ScrollController();
      _selectedgroceryIndexNotifiers[i] = ValueNotifier<int>(0);
      _scrollgroceryControllers[i]!.addListener(() => _onGroceryScroll(i));
    }
  }

  Future<void> getNotificationAccessToken() async {
    final String token =
        await getAccessToken(); // Assume this is your async method to fetch the token
    // setState(() {
    Constants.accessTokenFrNotificn = token; // Store the token in the state
    // });

    // Now the accessToken can be used throughout this class
  }

  Future<String> getAccessToken() async {
    final credentials = await loadServiceAccountCredentials();

    // Extract private key and client details from service account
    final accountCredentials = ServiceAccountCredentials.fromJson(credentials);

    final authClient = await clientViaServiceAccount(
      accountCredentials,
      ['https://www.googleapis.com/auth/firebase.messaging'], // FCM scope
    );

    // Get Access Token
    final token = await authClient.credentials.accessToken;

    print("Access Token: ${token.data}");

    return token.data;
  }

  Future<Map<String, dynamic>> loadServiceAccountCredentials() async {
    String jsonData = await rootBundle
        .loadString('images/maakanmoney-a6874-9f449586b9b5.json');
    return json.decode(jsonData);
  }

  void _onFoodCustNavTapped(int index) {
    setState(() {
      _selectedFoodCustNavIndex = index;

      // if(index == 1){
      //   Navigator.push(
      //     context,
      //     MaterialPageRoute(
      //       builder: (context) => OrderedFoodList(),
      //     ),
      //   ).then((value) {
      //     //todo:- below code refresh firebase records automatically when come back to same screen
      //     // ref.read(adminDashListProvider.notifier).getDashboardDetails();
      //   });
      // }
    });
  }

  void _onMeatCustNavTapped(int index) {
    setState(() {
      _selectedMeatCustNavIndex = index;
      if (index == 1) {
        //todo:- when navigation bottom tapped in index 1 , then check for selected category - meat or food , then navigate occordingly to corresponding order list screen
        if (_selectedOptionCategory.value == 0) {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => OrderedMeatList(
                getReffererType:
                    ref.read(UserDashListProvider.notifier).getReffererType ??
                        "0",
              ),
            ),
          ).then((value) {
            //todo:- below code refresh firebase records automatically when come back to same screen
            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          });
        } else {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => OrderedFoodList(),
            ),
          ).then((value) {
            //todo:- below code refresh firebase records automatically when come back to same screen
            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          });
        }
      }
    });
  }

  @override
  void dispose() {
    _timer?.cancel();

    lottieController?.dispose();

    ///new design implementation 15.7.24
    _controller.dispose();
    portionBHeightNotifier.dispose();

    ///
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // int randomIndex = math.Random().nextInt(imagePaths.length);
    // String randomImagePath = imagePaths[randomIndex];

    //todo:- 16.6.23
    final currentTime = DateTime.now();
    final currentHour = currentTime.hour;

    String? greetingText = '';

    if (currentHour >= 6 && currentHour < 12) {
      greetingText = 'Good Morning';
    } else if (currentHour >= 12 && currentHour < 18) {
      greetingText = 'Good Afternoon';
    } else if (currentHour >= 18 || currentHour == 0 || currentHour < 6) {
      greetingText = 'Good Evening';
    } else if (currentHour == 14) {
      greetingText = 'Good Afternoon'; // Custom message for 14 hours
    }

    return WillPopScope(
      onWillPop: () => _onWillPop(),
      child: Consumer(builder: (context, ref, child) {
        ref.read(UserDashListProvider.notifier).data =
            ref.watch(connectivityProvider);
        bool? isRefresh = ref.watch(isUserRefreshIndicator);
        UserDashListState getUserTransList = ref.watch(UserDashListProvider);
        getUserName = ref.read(UserDashListProvider.notifier).getUser ?? "";

        //todo:- 9.1.24 - listening when adding new goals
        // UserGoalListState getUserGoalList = ref.watch(UserGoalListProvider);

        bool isLoading = false;
        isLoading = (getUserTransList.status == ResStatus.loading);

        // return _userScreen(context,ref.read(UserDashListProvider.notifier).getUserType ?? "0",isRefresh,isLoading);

        //new try

        return Scaffold(
          key: scaffoldKey,
          backgroundColor: FlutterFlowTheme.of(context).secondary,
          appBar: ref.read(UserDashListProvider.notifier).getReffererType == "2"
              ? PreferredSize(
                  preferredSize: Size.fromHeight(kToolbarHeight),
                  child: GlobalAppBar(
                    title:
                        "${Constants.getUserArea}, ${Constants.getUserPincode}",
                    type: AppBarType.withLocation,
                    actions: [
                      IconButton(icon: Icon(Icons.search), onPressed: () {})
                    ],
                  ),
                )
              : ref.read(UserDashListProvider.notifier).getReffererType == "1"
                  ? PreferredSize(
                      preferredSize: Size.fromHeight(kToolbarHeight),
                      child: GlobalAppBar(
                        title:
                            "${Constants.getUserArea}, ${Constants.getUserPincode}",
                        type: AppBarType.withLocation,
                        actions: [
                          IconButton(icon: Icon(Icons.search), onPressed: () {})
                        ],
                      ),
                    )
                  : AppBar(
                      backgroundColor: Constants.secondary,
                      automaticallyImplyLeading: ((ref
                                      .read(UserDashListProvider.notifier)
                                      .getReffererType ==
                                  "2") ||
                              (ref
                                      .read(UserDashListProvider.notifier)
                                      .getReffererType ==
                                  ""))
                          ? false
                          : true,
                      iconTheme: IconThemeData(
                        color: Constants
                            .secondary3, // Change the color of the drawer icon here
                      ),
                      centerTitle: true,
                      elevation: 0.0,
                      title: ((ref
                                          .read(UserDashListProvider.notifier)
                                          .getUserType ??
                                      "0") !=
                                  "0" &&
                              (ref
                                          .read(UserDashListProvider.notifier)
                                          .getUserType ??
                                      "0") !=
                                  "")
                          ? ToggleSwitch(
                              options: ["My Account", "My Buisness"],
                              onChanged: (index) {
                                setState(() {
                                  _selectedIndex = index;
                                });
                              },
                            )
                          : null,
                    ),
          body: SafeArea(
              //todo:- important in below line entire user ui changed to split into sub admin ui and normal user ui
              child: FutureBuilder<Widget>(
            future: _userScreen(
                context,
                (ref.read(UserDashListProvider.notifier).getUserType ?? "0") !=
                        "0"
                    ? _selectedIndex.toString()
                    : ref.read(UserDashListProvider.notifier).getUserType ??
                        "0",
                isRefresh,
                isLoading),
            builder: (context, snapshot) {
              if (snapshot.connectionState == ConnectionState.waiting) {
                return Center(
                    child:
                        CircularProgressIndicator()); // Show loading indicator
              } else if (snapshot.hasError) {
                return Center(
                    child: Text("Error: ${snapshot.error}")); // Handle errors
              }
              return snapshot.data ?? Center(child: Text("No data available"));
            },
          )),
          drawer: ref.read(UserDashListProvider.notifier).getReffererType == "2"
              ? null
              : FutureBuilder<Widget>(
                  future: _DrawerScreen(
                      context,
                      (ref.read(UserDashListProvider.notifier).getUserType ??
                                  "0") !=
                              "0"
                          ? _selectedIndex.toString()
                          : ref
                                  .read(UserDashListProvider.notifier)
                                  .getUserType ??
                              "0",
                      isRefresh,
                      isLoading),
                  builder: (context, snapshot) {
                    if (snapshot.connectionState == ConnectionState.waiting) {
                      return Center(
                          child:
                              CircularProgressIndicator()); // Show loading indicator
                    } else if (snapshot.hasError) {
                      return Center(
                          child: Text(
                              "Error: ${snapshot.error}")); // Handle errors
                    }
                    return snapshot.data ??
                        Center(child: Text("No data available"));
                  },
                ),
          bottomNavigationBar: (ref
                      .read(UserDashListProvider.notifier)
                      .getReffererType ==
                  "2")
              ? GlobalBottomNav(
                  type: BottomNavType.standard,
                  currentIndex: _selectedFoodCustNavIndex,
                  onTap: (index) => _onFoodCustNavTapped(index),
                )
              : (ref.read(UserDashListProvider.notifier).getReffererType == "1")
                  ? GlobalBottomNav(
                      type: BottomNavType.standard,
                      currentIndex: _selectedMeatCustNavIndex,
                      onTap: (index) => _onMeatCustNavTapped(index),
                    )
                  :  ValueListenableBuilder(
            valueListenable: _userSelectedToggleOptionCategory,
              builder: (context, selectedIndex, child) {
                       return selectedIndex == 0 ? GlobalBottomNav(
                        type: BottomNavType.standard,
                        currentIndex: _selectedMeatCustNavIndex,
                        onTap: (index) => _onMeatCustNavTapped(index),
                      )  : Text("");
      }
                  ) ,
        );

        // return FutureBuilder<Widget>(
        //   future: _userScreen(
        //       context,
        //       ref.read(UserDashListProvider.notifier).getUserType ?? "0",
        //       isRefresh,
        //       isLoading),
        //
        //   builder: (context, snapshot) {
        //     if (snapshot.connectionState == ConnectionState.waiting) {
        //       return Center(
        //           child: CircularProgressIndicator()); // Show loading indicator
        //     } else if (snapshot.hasError) {
        //       return Center(
        //           child: Text("Error: ${snapshot.error}")); // Handle errors
        //     }
        //     return snapshot.data ?? Center(child: Text("No data available"));
        //   },
        // );
      }),
    );
  }

  void _toggleNavigationBarVisibility(bool isVisible) {
    setState(() {
      _isNavigationBarVisible = isVisible;
    });
  }

  void _onBottomItemTapped(int index) {
    setState(() {
      if (index == 0) {
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => BudgetCopyWidget(
              getUserType:
                  ref.read(UserDashListProvider.notifier).getUserType ?? "0",
              getAdminMobileNo:
                  ref.read(UserDashListProvider.notifier).getReffererMobileNo ??
                      "",
            ),
          ),
        );
      } else if (index == 1) {
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => OrdersScreen(
              getUserType:
                  ref.read(UserDashListProvider.notifier).getUserType ?? "0",
              getAdminMobileNo:
                  ref.read(UserDashListProvider.notifier).getReffererMobileNo ??
                      "",
            ),
          ),
        ).then((value) {
          //todo:- below code refresh firebase records automatically when come back to same screen
          // ref.read(adminDashListProvider.notifier).getDashboardDetails();
        });
      }

      // setState(() {
      //   _selectedIndex = index;
      // });
    });
  }

  void shareApp(BuildContext context) async {
    final String appLink =
        "https://play.google.com/store/apps/details?id=com.maaakanmoney.mm";
    final String message =
        "Check out One Solution for Saving your Money! Maaka app is there to help you out.";

    try {
      await FlutterShare.share(
        title: "Share My App",
        text: message,
        linkUrl: appLink,
        chooserTitle: "Share My App with",
      );
    } catch (e) {
      showDialog(
        context: context,
        builder: (context) => AlertDialog(
          title: Text("Error"),
          content: Text("Could not share the app link."),
          actions: [
            TextButton(
              onPressed: () => Navigator.pop(context),
              child: Text("OK"),
            ),
          ],
        ),
      );
    }
  }

  //todo:- 30.11.23 get current token value in collection
  Future<void> getDocumentIDsAndData() async {
    final CollectionReference collectionRef =
        FirebaseFirestore.instance.collection('AdminToken');

    // Get the documents in the collection
    QuerySnapshot querySnapshot = await collectionRef.get();

    // Iterate through the documents in the snapshot
    for (QueryDocumentSnapshot documentSnapshot in querySnapshot.docs) {
      // Access the document ID
      String documentID = documentSnapshot.id;

      // Access the document data as a Map
      Map<String, dynamic> documentData =
          documentSnapshot.data() as Map<String, dynamic>;

      // Access the value of the field (assuming there's only one field)
      dynamic fieldValue = documentData['token'];

      // Print the document ID and field value
      print('Document ID: $documentID, Token Value: $fieldValue');

      //todo:- saving admin token from firestore, so that, user trigger notification to that token
      Constants.adminDeviceToken = fieldValue ?? "";
    }
  }

  Widget _buildBottomSheetContent(BuildContext context, int getIndex) {
    return SingleChildScrollView(
      padding: EdgeInsets.only(
        bottom: MediaQuery.of(context).viewInsets.bottom,
      ),
      child: getIndex == 0
          ? Container(
              // Add your desired height to the container
              height: 200,
              child: Consumer(builder: (context, ref, child) {
                bool? getPaidStatus = ref.watch(txtPaidStatus);
                bool? getCashbckPaidStatus = ref.watch(txtCashbckPaidStatus);

                return Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          color: Colors.transparent,
                          height: 10.h,
                          width: 20.w,
                          child: Card(
                            elevation: 5,
                            child: ClipOval(
                              child: Material(
                                color: Constants.secondary, // Button color
                                child: InkWell(
                                  splashColor: Colors.red, // Splash color
                                  onTap: () async {
                                    //todo:- 29.9.23 allowing user to get account details to search in gpay

                                    showDialog(
                                        barrierDismissible: false,
                                        context: context,
                                        builder: (BuildContext context) {
                                          return CustomDialogBox(
                                            title: "Do Paste in Search Bar!",
                                            descriptions:
                                                "We've securely copied account details for you. To make a payment and save more money, simply open Google Pay and paste the details there.",
                                            text: "Ok",
                                            isNo: false,
                                            isCancel: true,
                                            onTap: () async {
                                              final String defaultValue = ref
                                                          .read(
                                                              UserDashListProvider
                                                                  .notifier)
                                                          .getAdminType ==
                                                      "1"
                                                  ? Constants.admin1Gpay
                                                  : Constants.admin2Gpay;
                                              Clipboard.setData(ClipboardData(
                                                  text: defaultValue));

                                              var openAppResult =
                                                  await LaunchApp.openApp(
                                                openStore: true,
                                                androidPackageName:
                                                    'com.google.android.apps.nbu.paisa.user',
                                                // iosUrlScheme: 'pulsesecure://',
                                                // appStoreLink:
                                                //     'itms-apps://itunes.apple.com/us/app/pulse-secure/id945832041',
                                                iosUrlScheme: 'hjfg',
                                                appStoreLink:
                                                    'https://apps.apple.com/in/app/google-pay-save-pay-manage/id1193357041',
                                              );

                                              Navigator.pop(context);
                                            },
                                          );
                                        });
                                  },
                                  child: Image.asset(
                                    'images/gpay2.png',
                                    fit: BoxFit.contain,
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        SizedBox(
                          height: 10,
                        ),
                        Text(
                          "GPay",
                          style: TextStyle(fontSize: 16),
                        )
                      ],
                    ),
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          color: Colors.transparent,
                          height: 10.h,
                          width: 20.w,
                          child: Card(
                            elevation: 5,
                            child: ClipOval(
                              child: Material(
                                color: Constants.secondary, // Button color
                                child: InkWell(
                                  splashColor: Colors.red, // Splash color
                                  onTap: () async {
                                    //todo:-  showing message to user

                                    showDialog(
                                        barrierDismissible: false,
                                        context: context,
                                        builder: (BuildContext context) {
                                          return CustomDialogBox(
                                            title: "Do Paste in Search Bar!",
                                            descriptions:
                                                "We've securely copied account details for you. To make a payment and save more money, simply open PhonePe and paste the details there.",
                                            text: "Ok",
                                            isNo: false,
                                            isCancel: true,
                                            onTap: () async {
                                              final String defaultValue = ref
                                                          .read(
                                                              UserDashListProvider
                                                                  .notifier)
                                                          .getAdminType ==
                                                      "1"
                                                  ? Constants.admin1Gpay
                                                  : Constants.admin2Gpay;
                                              Clipboard.setData(ClipboardData(
                                                  text: defaultValue));

                                              var openAppResult =
                                                  await LaunchApp.openApp(
                                                openStore: true,
                                                androidPackageName:
                                                    'com.phonepe.app',
                                                iosUrlScheme: 'sf',
                                                appStoreLink:
                                                    'https://apps.apple.com/in/app/phonepe-secure-payments-app/id1170055821',
                                              );

                                              Navigator.pop(context);
                                            },
                                          );
                                        });
                                  },
                                  child: Image.asset(
                                    'images/phonepe1.png',
                                    fit: BoxFit.contain,
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        SizedBox(
                          height: 10,
                        ),
                        Text(
                          "PhonePe",
                          style: TextStyle(fontSize: 16),
                        )
                      ],
                    ),
                  ],
                );
              }),
            )
          : getIndex == 1
              ? isSavAmntReq == true
                  ? Container(
                      // Add your desired height to the container
                      height: 250,
                      child: Consumer(builder: (context, ref, child) {
                        bool? getPaidStatus = ref.watch(txtPaidStatus);
                        bool? getCashbckPaidStatus =
                            ref.watch(txtCashbckPaidStatus);

                        return Column(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Text(
                              "Savings Amount Request",
                              style: TextStyle(
                                  color: FlutterFlowTheme.of(context).primary,
                                  fontWeight: FontWeight.bold,
                                  fontSize: 18.0,
                                  letterSpacing: 1),
                            ),
                            Visibility(
                              visible: ref
                                          .read(UserDashListProvider.notifier)
                                          .getLastReqAmount! !=
                                      0
                                  ? true
                                  : false,
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Text(
                                    "Your last Request ₹${ref.read(UserDashListProvider.notifier).getLastReqAmount!.toStringAsFixed(2)} is",
                                    style: TextStyle(
                                        color: FlutterFlowTheme.of(context)
                                            .primary,
                                        fontWeight: FontWeight.bold,
                                        fontSize: 18.0,
                                        letterSpacing: 1),
                                  ),
                                  Text(
                                      // ref.read(UserDashListProvider.notifier).getIsMoneyReq!
                                      ref
                                                  .read(txtMoneyReqCanStatus
                                                      .notifier)
                                                  .state ==
                                              true
                                          ? "Cancelled"
                                          : getPaidStatus!
                                              ? "UnPaid"
                                              : "Paid",
                                      style: TextStyle(
                                          color: FlutterFlowTheme.of(context)
                                              .secondary,
                                          fontWeight: FontWeight.bold,
                                          fontSize: 22.0,
                                          letterSpacing: 1)),
                                ],
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: TextFormField(
                                controller: txtReqAmount,
                                keyboardType: TextInputType.numberWithOptions(
                                    decimal: true),
                                decoration: InputDecoration(
                                  labelText: 'Enter amount',
                                  border: OutlineInputBorder(),
                                ),
                              ),
                            ),
                            Row(
                              crossAxisAlignment: CrossAxisAlignment.center,
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                ElevatedButton(
                                  onPressed: () async {},
                                  child: Text('Request'),
                                ),
                                Visibility(
                                  visible: ref
                                              .read(
                                                  UserDashListProvider.notifier)
                                              .getLastReqAmount! !=
                                          0
                                      ? true
                                      : false,
                                  child: ElevatedButton(
                                    onPressed: () async {
                                      showDialog(
                                          barrierDismissible: false,
                                          context: context,
                                          builder: (BuildContext context) {
                                            return CustomDialogBox(
                                              title: "Alert!",
                                              descriptions:
                                                  "Are you sure, Do you want to Cancel Money Request",
                                              text: "Ok",
                                              isNo: false,
                                              isCancel: true,
                                              onTap: () async {
                                                await ref
                                                    .read(UserDashListProvider
                                                        .notifier)
                                                    .canclRequest(
                                                        ref
                                                            .read(
                                                                UserDashListProvider
                                                                    .notifier)
                                                            .getDocId,
                                                        true,
                                                        widget.getMobile);

                                                Navigator.pop(context);

                                                //todo:- pops bottom sheet
                                                Navigator.pop(context);
                                              },
                                            );
                                          });
                                    },
                                    child: Text('Cancel Request'),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        );
                      }),
                    )
                  : Container(
                      // Add your desired height to the container
                      height: 250,
                      child: Consumer(builder: (context, ref, child) {
                        bool? getPaidStatus = ref.watch(txtPaidStatus);
                        bool? getCashbckPaidStatus =
                            ref.watch(txtCashbckPaidStatus);

                        return Column(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Text(
                              "Cashback Amount Request",
                              style: TextStyle(
                                  color: FlutterFlowTheme.of(context).primary,
                                  fontWeight: FontWeight.bold,
                                  fontSize: 18.0,
                                  letterSpacing: 1),
                            ),
                            Visibility(
                              visible: ref
                                          .read(UserDashListProvider.notifier)
                                          .getLastCashbckReqAmount! !=
                                      0
                                  ? true
                                  : false,
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  Text(
                                    "Your last Request ₹${ref.read(UserDashListProvider.notifier).getLastCashbckReqAmount!.toStringAsFixed(2)} is",
                                    style: TextStyle(
                                        color: FlutterFlowTheme.of(context)
                                            .primary,
                                        fontWeight: FontWeight.bold,
                                        fontSize: 18.0,
                                        letterSpacing: 1),
                                  ),
                                  Text(
                                      // ref.read(UserDashListProvider.notifier).getIsMoneyReq!
                                      ref
                                                  .read(txtCashbckReqCanStatus
                                                      .notifier)
                                                  .state ==
                                              true
                                          ? "Cancelled"
                                          : getCashbckPaidStatus!
                                              ? "UnPaid"
                                              : "Paid",
                                      style:
                                          TextStyle(
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              fontWeight: FontWeight.bold,
                                              fontSize: 22.0,
                                              letterSpacing: 1)),
                                ],
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: TextFormField(
                                controller: txtReqAmount,
                                keyboardType: TextInputType.numberWithOptions(
                                    decimal: true),
                                decoration: InputDecoration(
                                  labelText: 'Enter amount',
                                  border: OutlineInputBorder(),
                                ),
                              ),
                            ),
                            Row(
                              crossAxisAlignment: CrossAxisAlignment.center,
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                ElevatedButton(
                                  onPressed: () async {
                                    double amount = txtReqAmount.text.isEmpty
                                        ? 0
                                        : double.parse(txtReqAmount.text);
                                    if (amount != 0) {
                                      if (amount >
                                          ref
                                              .read(
                                                  UserDashListProvider.notifier)
                                              .getNetIntbalance) {
                                        Constants.showToast(
                                            "Requested amount greater than Cashback Netbalance",
                                            ToastGravity.CENTER);
                                        return;
                                      } else {
                                        if (getCashbckPaidStatus ?? false) {
                                          showDialog(
                                              barrierDismissible: false,
                                              context: context,
                                              builder: (BuildContext context) {
                                                return CustomDialogBox(
                                                  title: "Alert!",
                                                  descriptions:
                                                      "Your last Request ₹${ref.read(UserDashListProvider.notifier).getLastCashbckReqAmount!.toStringAsFixed(2)} is Not Paid, Do you want add More Request",
                                                  text: "Ok",
                                                  isNo: true,
                                                  isCancel: true,
                                                  onTap: () async {},
                                                  onNoTap: () async {},
                                                );
                                              });
                                        } else {
                                          showDialog(
                                              barrierDismissible: false,
                                              context: context,
                                              builder: (BuildContext context) {
                                                return CustomDialogBox(
                                                  title: "Alert!",
                                                  descriptions:
                                                      "Are you sure, Do you want to Request Money",
                                                  text: "Ok",
                                                  isCancel: true,
                                                  onTap: () async {},
                                                );
                                              });
                                        }
                                      }
                                    } else {
                                      Constants.showToast(
                                          txtReqAmount.text.isEmpty
                                              ? "Please Enter Amount"
                                              : "Please Enter Valid Amount",
                                          ToastGravity.CENTER);
                                      return;
                                    }
                                  },
                                  child: Text('Request'),
                                ),
                                Visibility(
                                  visible: ref
                                              .read(
                                                  UserDashListProvider.notifier)
                                              .getLastReqAmount! !=
                                          0
                                      ? true
                                      : false,
                                  child: ElevatedButton(
                                    onPressed: () async {
                                      showDialog(
                                          barrierDismissible: false,
                                          context: context,
                                          builder: (BuildContext context) {
                                            return CustomDialogBox(
                                              title: "Alert!",
                                              descriptions:
                                                  "Are you sure, Do you want to Cancel Cashback Request",
                                              text: "Ok",
                                              isNo: false,
                                              isCancel: true,
                                              onTap: () async {
                                                await ref
                                                    .read(UserDashListProvider
                                                        .notifier)
                                                    .canclRequest(
                                                        ref
                                                            .read(
                                                                UserDashListProvider
                                                                    .notifier)
                                                            .getDocId,
                                                        false,
                                                        widget.getMobile);

                                                Navigator.pop(context);

                                                //todo:- pops bottom sheet
                                                Navigator.pop(context);
                                              },
                                            );
                                          });
                                    },
                                    child: Text('Cancel Request'),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        );
                      }),
                    )
              : Container(),
    );
  }

  //todo:- based on user type return user screen

  // Asynchronous function to fetch Firestore data if getUserType == "1"
  Future<Widget> _userScreen(BuildContext context, String getToggleUserType,
      bool? isRefresh, bool? isLoading) async {
    isShowMeatSection =
        (ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "1"
            ? false
            : true;
    isShowFoodSection =
        (ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "2"
            ? false
            : true;
    isShowGrocerySection =
    (ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "6"
        ? false
        : true;

    //todo:- when loading user screen , try to get end user's refferer user type and show ui to end user accordingly

    String? getUserType =
        ref.read(UserDashListProvider.notifier).getUserType ?? "0";

    //todo:- toggle option for users with buisness type
    //todo:- getToggleUserType == 0 / consider to show normal user screen for user with buisness type
    //todo:- getToggleUserType == 1 / consider to show buisness UI Screen
    if (getToggleUserType == "0") {
//todo: below code check if user's refferer is present or not if not present consider user refferer as normal per
      if ((ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
          "1") {
        isReffererPricingPresent = true;
      } else {
        isReffererPricingPresent = false;
      }

      //todo:- getrefferer type == 2 - cloud kitchen user type
      if ((ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
          "0") {
        // isReffererPricingPresent = false;
        return Container(
          height: 100.h,
          child:

              //todo:- changing entire user screen
              Padding(
            padding: const EdgeInsets.only(left: 10, right: 10),
            child: RefreshIndicator(
              onRefresh: _handleRefresh,
              child: SingleChildScrollView(
                child: Container(
                  height: 100.h,
                  child: ValueListenableBuilder<int>(
                    valueListenable: _userSelectedToggleOptionCategory,
                    builder: (context, selectedIndex, child) {
                      return Column(
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              Container(
                                padding: const EdgeInsets.all(8.0),
                                decoration: BoxDecoration(
                                  color: Constants.colorFoodCSecondaryGrey2,
                                  shape: BoxShape.circle,
                                ),
                                child: Icon(Icons.location_on,
                                    color: Constants.colorFoodCPrimary),
                              ),
                              Text(
                                " ${Constants.getUserArea}, ${Constants.getUserPincode}",
                                style: GlobalTextStyles.secondaryText2(
                                    textColor: Constants.secondary3,
                                    txtWeight: FontWeight.bold),
                              ),
                            ],
                          ),
                          Container(
                              alignment: Alignment.centerLeft,
                              color: Constants.secondary,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    top: 20, left: 8.0, right: 8.0),
                                child: Row(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceBetween,
                                  children: [
                                    Expanded(
                                      child: Text(
                                        "Start By Category",

                                        // style: Theme.of(context).textTheme.titleLarge,
                                        style: TextStyle(
                                            fontFamily: 'Encode Sans Condensed',
                                            // Apply Open Sans only for this Text widget
                                            fontSize: 18,
                                            fontWeight: FontWeight.bold,
                                            letterSpacing: 2.5),
                                        maxLines: 2,
                                      ),
                                    ),
                                  ],
                                ),
                              )),
                          Padding(
                            padding: const EdgeInsets.only(left: 0.0, top: 20),
                            child: Container(
                              height: 8.h,
                              child: Padding(
                                padding: const EdgeInsets.only(bottom: 8.0),
                                child: ListView.builder(
                                  scrollDirection: Axis.horizontal,
                                  itemCount: _userToggleOptionCategory.length,
                                  itemBuilder: (context, index) {
                                    String category = _userToggleOptionCategory
                                        .values
                                        .toList()[index];
                                    return GestureDetector(
                                      onTap: () {
                                        _userSelectedToggleOptionCategory
                                            .value = index;
                                      },
                                      child: Container(
                                        width: index == selectedIndex
                                            ? 40.w
                                            : 30.w,
                                        padding: const EdgeInsets.symmetric(
                                            horizontal: 16, vertical: 8),
                                        margin: const EdgeInsets.symmetric(
                                            horizontal: 5),
                                        decoration: BoxDecoration(
                                          // color: index == selectedIndex
                                          //     ? Constants.colorFoodCPrimary
                                          //     : Colors.grey[200],
                                          border: Border.all(
                                            color: (index == selectedIndex &&
                                                    index == 0)
                                                ? Constants.colorMeatCPrimary
                                                : (index == selectedIndex &&
                                                        index == 1)
                                                    ? Colors.green
                                                    : (index == selectedIndex &&
                                                            index == 2)
                                                        ? Constants.primary
                                                        : (index == selectedIndex &&
                                                                index == 2)
                                                            ? Constants.primary
                                                            : (index == selectedIndex &&
                                                                    index == 3)
                                                                ? Colors.orange
                                                                : Colors.grey[
                                                                        200] ??
                                                                    Colors.grey,
                                            // Change border color here
                                            width: 2, // Border width
                                          ),
                                          borderRadius:
                                              BorderRadius.circular(15),
                                        ),
                                        child: Center(
                                          child: Text(
                                            textAlign: TextAlign.center,
                                            category,
                                            style: TextStyle(
                                                fontFamily:
                                                    'Encode Sans Condensed',
                                                color: (index ==
                                                            selectedIndex &&
                                                        index == 0)
                                                    ? Constants
                                                        .colorMeatCPrimary
                                                    : (index == selectedIndex &&
                                                            index == 1)
                                                        ? Colors.green
                                                        : (index == selectedIndex &&
                                                                index == 2)
                                                            ? Constants.primary
                                                            : (index == selectedIndex &&
                                                                    index == 3)
                                                                ? Colors.orange
                                                                : Colors.black,
                                                fontWeight: FontWeight.bold,
                                                fontSize: index == selectedIndex
                                                    ? 15
                                                    : 10),
                                          ),
                                        ),
                                      ),
                                    );
                                  },
                                  physics: BouncingScrollPhysics(),
                                ),
                              ),
                            ),
                          ),
                          Expanded(
                            child: Container(
                              child: selectedIndex ==
                                      0 //user service (food / shopping / saving etc) category selection type
                                  ? Column(
                                      children: [
                                        Container(
                                            alignment: Alignment.centerLeft,
                                            color: Constants.secondary,
                                            child: Padding(
                                              padding: const EdgeInsets.only(
                                                  top: 20,
                                                  left: 8.0,
                                                  right: 8.0),
                                              child: Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  Expanded(
                                                    child: Text(
                                                     "We'll buy Groceries for you.", //"Choose Your Favourite!",

                                                      // style: Theme.of(context).textTheme.titleLarge,
                                                      style: TextStyle(
                                                          fontFamily:
                                                              'Encode Sans Condensed',
                                                          // Apply Open Sans only for this Text widget
                                                          fontSize: 18,
                                                          fontWeight:
                                                              FontWeight.bold,
                                                          letterSpacing: 2.5),
                                                      maxLines: 2,
                                                    ),
                                                  ),

                                                ],
                                              ),
                                            )),
                                        Container(
                                            alignment: Alignment.centerLeft,
                                            color: Constants.secondary,
                                            child: Padding(
                                              padding: const EdgeInsets.only(
                                                  top: 0,
                                                  left: 8.0,
                                                  right: 8.0),
                                              child: Row(
                                                mainAxisAlignment:
                                                MainAxisAlignment
                                                    .spaceBetween,
                                                children: [
                                                  Expanded(
                                                    child: Text(
                                                      "Call us To Share your list to buy.", //"Choose Your Favourite!",

                                                      // style: Theme.of(context).textTheme.titleLarge,
                                                      style: TextStyle(
                                                          fontFamily:
                                                          'Encode Sans Condensed',
                                                          // Apply Open Sans only for this Text widget
                                                          fontSize: 11,
                                                          fontWeight:
                                                          FontWeight.bold,
                                                          letterSpacing: 2.5),
                                                      maxLines: 2,
                                                    ),
                                                  ),

                                                ],
                                              ),
                                            )),
                                       SizedBox(height: 15,),
                                        Padding(
                                          padding: const EdgeInsets.only(left: 8.0,right: 8.0),
                                          child: Stack(
                                            children: [
                                              Container(
                                                height: 60,
                                                // width: 340,
                                                decoration: BoxDecoration(
                                                  color: Constants
                                                      .colorFoodCSecondaryWhite,
                                                  borderRadius: BorderRadius.circular(40),

                                                  boxShadow: [
                                                    BoxShadow(
                                                      color:
                                                      Constants.colorFoodCSecondaryGrey2,
                                                      // Light shadow effect
                                                      blurRadius:
                                                      10,
                                                      spreadRadius:
                                                      2,
                                                      offset: Offset(
                                                          0,
                                                          4), // Slight downward shadow
                                                    ),
                                                  ],
                                                  border:
                                                  Border.all(
                                                    color: Constants
                                                        .colorFoodCPrimary
                                                    ,
                                                    // Change border color here
                                                    width:
                                                    0.2, // Border width
                                                  ),

                                                ),
                                                alignment: Alignment.center,
                                                child: Padding(

                                                  padding: const EdgeInsets.only(left:40.0),
                                                  child: const Text(
                                                    '>>> Swipe to Call. Pay Only for Delivery. >>>',
                                                    style: TextStyle(color: Colors.black, fontSize: 11,fontFamily:
                                                    'Encode Sans Condensed',letterSpacing: 2),
                                                  ),
                                                ),
                                              ),
                                              ValueListenableBuilder<double>(
                                                valueListenable: sliderPosition,
                                                builder: (context, value, _) {
                                                  return Positioned(
                                                    left: value,
                                                    child: GestureDetector(
                                                      onHorizontalDragUpdate: (details) {
                                                        final newValue = sliderPosition.value + details.delta.dx;
                                                        if (newValue >= 0 && newValue <= maxSlideWidth) {
                                                          sliderPosition.value = newValue;

                                                          // Trigger call at halfway point
                                                          if (newValue >= maxSlideWidth / 2 && !called.value) {
                                                            called.value = true;
                                                            _launchDialer();
                                                            Future.delayed(const Duration(seconds: 1), _resetSlider);
                                                          }
                                                        }
                                                      },
                                                      onHorizontalDragEnd: (details) {
                                                        if (sliderPosition.value >= maxSlideWidth && !called.value) {
                                                          called.value = true;
                                                          _launchDialer();
                                                          Future.delayed(const Duration(seconds: 1), _resetSlider);
                                                        } else {
                                                          _resetSlider();
                                                        }
                                                      },
                                                      child: Container(
                                                        width: 60,
                                                        height: 60,
                                                        decoration: BoxDecoration(
                                                          color: Constants.colorMeatCPrimary,
                                                          shape: BoxShape.circle,
                                                        ),
                                                        child: const Icon(Icons.phone_in_talk_rounded, color: Colors.white),
                                                      ),
                                                    ),
                                                  );
                                                },
                                              ),
                                            ],
                                          ),
                                        ),
                                        SizedBox(height: 10,),
                                        Padding(
                                          padding: const EdgeInsets.only(
                                              left: 0, right: 10),
                                          child: Container(
                                            height: 10.h,
                                            child: Center(
                                              child: Container(
                                                height: 5.h,
                                                child:
                                                    ValueListenableBuilder<int>(
                                                  valueListenable:
                                                      _selectedOptionCategory,
                                                  builder: (context,
                                                      selectedIndex, child) {
                                                    return ListView.builder(
                                                      scrollDirection:
                                                          Axis.horizontal,
                                                      itemCount:
                                                          _ToggleOptionCategory
                                                              .length,
                                                      itemBuilder:
                                                          (context, index) {
                                                        String category =
                                                            _ToggleOptionCategory
                                                                    .values
                                                                    .toList()[
                                                                index];
                                                        return GestureDetector(
                                                          onTap: () {
                                                            _selectedOptionCategory
                                                                .value = index;
                                                          },
                                                          child: Container(
                                                            width: 23.w,
                                                            padding:
                                                                const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        16,
                                                                    vertical:
                                                                        8),
                                                            margin:
                                                                const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        5),
                                                            decoration:
                                                                BoxDecoration(
                                                              // color: index == selectedIndex
                                                              //     ? Constants.colorFoodCPrimary
                                                              //     : Colors.grey[200],
                                                              border:
                                                                  Border.all(
                                                                color: index ==
                                                                        selectedIndex
                                                                    ? Constants
                                                                        .colorFoodCPrimary
                                                                    : Colors.grey[
                                                                            200] ??
                                                                        Colors
                                                                            .grey,
                                                                // Change border color here
                                                                width:
                                                                    2, // Border width
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          15),
                                                            ),
                                                            child: Center(
                                                              child: Container(
                                                                width: 40.w,
                                                                child: Text(
                                                                  textAlign:
                                                                      TextAlign
                                                                          .center,
                                                                  category,
                                                                  style:
                                                                      TextStyle(
                                                                    color: index ==
                                                                            selectedIndex
                                                                        ? Constants
                                                                            .colorMeatCPrimary
                                                                        : Colors
                                                                            .black,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                        Expanded(
                                          child: ValueListenableBuilder<int>(
                                            valueListenable:
                                                _selectedOptionCategory,
                                            builder: (context, selectedIndex,
                                                child) {
                                              if (selectedIndex == 0) {
                                                //meat screen
                                                return Container(
                                                  height: 100.h,
                                                  // Replace with your overlay color
                                                  child: SingleChildScrollView(
                                                    child: Column(
                                                      children: [
                                                        Container(
                                                          height: 10.h,
                                                          child: Center(
                                                            child: Container(
                                                              height: 5.h,
                                                              child:
                                                                  ValueListenableBuilder<
                                                                      int>(
                                                                valueListenable:
                                                                    _selectedMeatCategoryIndex,
                                                                builder: (context,
                                                                    selectedIndex,
                                                                    child) {
                                                                  return ListView
                                                                      .builder(
                                                                    scrollDirection:
                                                                        Axis.horizontal,
                                                                    itemCount:
                                                                        _categoryMeatMapping
                                                                            .length,
                                                                    itemBuilder:
                                                                        (context,
                                                                            index) {
                                                                      String
                                                                          category =
                                                                          _categoryMeatMapping
                                                                              .values
                                                                              .toList()[index];
                                                                      return GestureDetector(
                                                                        onTap:
                                                                            () {
                                                                          _selectedMeatCategoryIndex.value =
                                                                              index;
                                                                          // _searchQuery
                                                                          //     .value = "";
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          padding: const EdgeInsets
                                                                              .symmetric(
                                                                              horizontal:
                                                                                  16,
                                                                              vertical:
                                                                                  8),
                                                                          margin: const EdgeInsets
                                                                              .symmetric(
                                                                              horizontal:
                                                                                  5),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            // color: index == selectedIndex
                                                                            //     ? Constants.colorFoodCPrimary
                                                                            //     : Colors.grey[200],
                                                                            border:
                                                                                Border.all(
                                                                              color: index == selectedIndex
                                                                                  ? Colors.transparent
                                                                                  : Colors.grey[200] ?? Colors.grey,
                                                                              // Change border color here
                                                                              width:
                                                                                  2, // Border width
                                                                            ),

                                                                            gradient:
                                                                                LinearGradient(
                                                                              colors: index == selectedIndex
                                                                                  ? [
                                                                                      Constants.colorMeatCPrimary,
                                                                                      Constants.secondary4
                                                                                    ]
                                                                                  : [
                                                                                      Colors.transparent ?? Colors.grey,
                                                                                      Colors.transparent ?? Colors.grey
                                                                                    ],
                                                                              begin:
                                                                                  Alignment.topLeft,
                                                                              end:
                                                                                  Alignment.bottomRight,
                                                                            ),
                                                                            borderRadius:
                                                                                BorderRadius.circular(15),
                                                                            // border: Border.all(
                                                                            //     color: Colors.grey),
                                                                            // Light gray background
                                                                            // Smooth corners
                                                                            // boxShadow: [
                                                                            //   BoxShadow(
                                                                            //     color: Colors.black.withOpacity(
                                                                            //         0.1), // Light shadow effect
                                                                            //     blurRadius: 10,
                                                                            //     spreadRadius: 2,
                                                                            //     offset: Offset(0,
                                                                            //         4), // Slight downward shadow
                                                                            //   ),
                                                                            // ],
                                                                          ),
                                                                          child:
                                                                              Center(
                                                                            child:
                                                                                Container(
                                                                              width:
                                                                                  35.w,
                                                                              child:
                                                                                  Text(
                                                                                textAlign: TextAlign.center,
                                                                                category,
                                                                                style: TextStyle(
                                                                                  color: index == selectedIndex ? Colors.white : Colors.black,
                                                                                  fontWeight: FontWeight.bold,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      );
                                                                    },
                                                                    physics:
                                                                        BouncingScrollPhysics(),
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                        Container(
                                                          alignment:
                                                              Alignment.center,
                                                          height: 100.h,
                                                          width: 100.w,
                                                          decoration:
                                                              BoxDecoration(
                                                            borderRadius:
                                                                BorderRadius.only(
                                                              bottomLeft:
                                                                  Radius.circular(
                                                                      0),
                                                              bottomRight:
                                                                  Radius.circular(
                                                                      0),
                                                            ),
                                                          ),
                                                          child: Padding(
                                                            padding:
                                                                const EdgeInsets
                                                                    .only(
                                                                    top: 10.0),
                                                            child:
                                                                ValueListenableBuilder<
                                                                    int>(
                                                              valueListenable:
                                                                  _selectedMeatCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                // return ListView
                                                                //     .builder(
                                                                //   scrollDirection:
                                                                //       Axis.horizontal,
                                                                //   itemCount: selectedIndex ==
                                                                //           0
                                                                //       ? chickenMeatTypes
                                                                //           .length
                                                                //       : muttonMeatTypes
                                                                //           .length,
                                                                //   padding: const EdgeInsets
                                                                //       .symmetric(
                                                                //       horizontal:
                                                                //           10),
                                                                //   itemBuilder:
                                                                //       (context,
                                                                //           index) {
                                                                //     return Center(
                                                                //       child:
                                                                //           Padding(
                                                                //         padding: const EdgeInsets
                                                                //             .all(
                                                                //             10.0),
                                                                //         child: GestureDetector(
                                                                //             onTap: () {
                                                                //               if (selectedIndex ==
                                                                //                   0) {
                                                                //                 Navigator.push(
                                                                //                   context,
                                                                //                   MaterialPageRoute(
                                                                //                     builder: (context) => DetailScreen(title: chickenMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                                //                   ),
                                                                //                 );
                                                                //               } else {
                                                                //                 Navigator.push(
                                                                //                   context,
                                                                //                   MaterialPageRoute(
                                                                //                     builder: (context) => DetailScreen(title: muttonMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                                //                   ),
                                                                //                 );
                                                                //               }
                                                                //             },
                                                                //             child: Container(
                                                                //               width:
                                                                //                   100.w / 2.5,
                                                                //               height:
                                                                //                   220,
                                                                //               decoration:
                                                                //                   BoxDecoration(
                                                                //                 color: Colors.white,
                                                                //                 borderRadius: BorderRadius.circular(12),
                                                                //                 boxShadow: [
                                                                //                   BoxShadow(
                                                                //                     color: Colors.grey.withOpacity(0.4),
                                                                //                     blurRadius: 8,
                                                                //                     spreadRadius: 2,
                                                                //                     offset: Offset(2, 4),
                                                                //                   )
                                                                //                 ],
                                                                //               ),
                                                                //               child:
                                                                //                   Stack(
                                                                //                 children: [
                                                                //                   Padding(
                                                                //                     padding: const EdgeInsets.all(8.0),
                                                                //                     child: Column(
                                                                //                       mainAxisAlignment: MainAxisAlignment.end,
                                                                //                       children: [
                                                                //                         Expanded(
                                                                //                           child: Container(
                                                                //                             color: Colors.white,
                                                                //                             child: Center(
                                                                //                                 child: Hero(
                                                                //                               tag: 'imageHerodsfsad',
                                                                //                               child: Image.asset(
                                                                //                                 selectedIndex == 0 ? chickenMeatTypes[0].item2 : muttonMeatTypes[0].item2,
                                                                //                                 height: 80,
                                                                //                                 width: 80,
                                                                //                                 fit: BoxFit.cover,
                                                                //                               ),
                                                                //                             )),
                                                                //                           ),
                                                                //                         ),
                                                                //                         Text(
                                                                //                           selectedIndex == 0 ? chickenMeatTypes[index].item1 ?? "" : muttonMeatTypes[index].item1 ?? "",
                                                                //                           style: TextStyle(
                                                                //                             color: Colors.black,
                                                                //                             fontSize: 18,
                                                                //                             fontWeight: FontWeight.w900,
                                                                //                             fontFamily: 'Encode Sans Condensed',
                                                                //                           ),
                                                                //                         ),
                                                                //                       ],
                                                                //                     ),
                                                                //                   ),
                                                                //                   // Heart Icon in Top-Right
                                                                //                   Positioned(
                                                                //                     top: 8,
                                                                //                     right: 8,
                                                                //                     child: Container(
                                                                //                       decoration: BoxDecoration(
                                                                //                         shape: BoxShape.circle,
                                                                //                         border: Border.all(color: Colors.transparent, width: 2),
                                                                //                         color: Colors.white.withOpacity(0.1),
                                                                //                       ),
                                                                //                       padding: EdgeInsets.all(4),
                                                                //                       child: Icon(
                                                                //                         Icons.favorite,
                                                                //                         color: Colors.redAccent,
                                                                //                         size: 20,
                                                                //                       ),
                                                                //                     ),
                                                                //                   ),
                                                                //                 ],
                                                                //               ),
                                                                //             )),
                                                                //       ),
                                                                //     );
                                                                //   },
                                                                //   physics:
                                                                //       BouncingScrollPhysics(),
                                                                // );

                                                                return GridView.builder(
                                                                  gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                                                                    crossAxisCount: 2, // 2 items per row
                                                                    childAspectRatio: 0.9, // Adjust this to control width/height ratio
                                                                    crossAxisSpacing: 10,
                                                                    mainAxisSpacing: 10,
                                                                  ),
                                                                  itemCount: selectedIndex == 0 ? chickenMeatTypes.length : muttonMeatTypes.length,
                                                                  padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                                                                  physics: const BouncingScrollPhysics(),
                                                                  itemBuilder: (context, index) {
                                                                    return GestureDetector(
                                                                      onTap: () {
                                                                        if (selectedIndex == 0) {
                                                                          Navigator.push(
                                                                            context,
                                                                            MaterialPageRoute(
                                                                              builder: (context) => DetailScreen(
                                                                                title: chickenMeatTypes[index].item3 ?? "",
                                                                                isReffererPricingPresent: isReffererPricingPresent ?? false,
                                                                              ),
                                                                            ),
                                                                          );
                                                                        } else {
                                                                          Navigator.push(
                                                                            context,
                                                                            MaterialPageRoute(
                                                                              builder: (context) => DetailScreen(
                                                                                title: muttonMeatTypes[index].item3 ?? "",
                                                                                isReffererPricingPresent: isReffererPricingPresent ?? false,
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                      },
                                                                      child: Padding(
                                                                        padding: const EdgeInsets.all(8.0),
                                                                        child: Container(
                                                                          decoration: BoxDecoration(
                                                                            color: Colors.white,
                                                                            borderRadius: BorderRadius.circular(12),
                                                                            boxShadow: [
                                                                              BoxShadow(
                                                                                color: Colors.grey.withOpacity(0.4),
                                                                                blurRadius: 8,
                                                                                spreadRadius: 2,
                                                                                offset: Offset(2, 4),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          child: Stack(
                                                                            children: [
                                                                              Padding(
                                                                                padding: const EdgeInsets.all(8.0),
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.end,
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Container(
                                                                                        color: Colors.white,
                                                                                        child: Center(
                                                                                          child: Hero(
                                                                                            tag: 'imageHerodsfsad',
                                                                                            child: Image.asset(
                                                                                              selectedIndex == 0
                                                                                                  ? chickenMeatTypes[index].item2
                                                                                                  : muttonMeatTypes[index].item2,
                                                                                              height: 80,
                                                                                              width: 80,
                                                                                              fit: BoxFit.cover,
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                    Text(
                                                                                      selectedIndex == 0
                                                                                          ? chickenMeatTypes[index].item1 ?? ""
                                                                                          : muttonMeatTypes[index].item1 ?? "",
                                                                                      style: const TextStyle(
                                                                                        color: Colors.black,
                                                                                        fontSize: 18,
                                                                                        fontWeight: FontWeight.w900,
                                                                                        fontFamily: 'Encode Sans Condensed',
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              Positioned(
                                                                                top: 8,
                                                                                right: 8,
                                                                                child: Container(
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    border: Border.all(color: Colors.transparent, width: 2),
                                                                                    color: Colors.white.withOpacity(0.1),
                                                                                  ),
                                                                                  padding: const EdgeInsets.all(4),
                                                                                  child: const Icon(
                                                                                    Icons.favorite,
                                                                                    color: Colors.redAccent,
                                                                                    size: 20,
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    );
                                                                  },
                                                                );

                                                              },
                                                            ),
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                );
                                              } else if (selectedIndex == 1) {
                                                //grocerys screen
                                                return Container(
                                                    height: 100.h,
                                                    child: Stack(
                                                      children: [
                                                        Column(
                                                          children: [

                                                            Container(
                                                              color:
                                                              Colors.white,
                                                              height: 10.h,
                                                              child: Center(
                                                                child:
                                                                Container(
                                                                  height: 5.h,
                                                                  child:
                                                                  ValueListenableBuilder<
                                                                      int>(
                                                                    valueListenable:
                                                                    _selectedGroceryCategoryIndex,
                                                                    builder: (context,
                                                                        selectedIndex,
                                                                        child) {
                                                                      return ListView
                                                                          .builder(
                                                                        scrollDirection:
                                                                        Axis.horizontal,
                                                                        itemCount:
                                                                        _groceryCategoryMapping.length,
                                                                        itemBuilder:
                                                                            (context,
                                                                            index) {
                                                                          String
                                                                          category =
                                                                          _groceryCategoryMapping.values.toList()[index];
                                                                          return GestureDetector(
                                                                            onTap:
                                                                                () {
                                                                              _selectedGroceryCategoryIndex.value = index;

                                                                            },
                                                                            child:
                                                                            Container(
                                                                              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                                              margin: const EdgeInsets.symmetric(horizontal: 5),
                                                                              decoration: BoxDecoration(
                                                                                color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                                                borderRadius: BorderRadius.circular(15),
                                                                                // border: Border.all(
                                                                                //     color: Colors.grey),
                                                                                // Light gray background
                                                                                // Smooth corners
                                                                                // boxShadow: [
                                                                                //   BoxShadow(
                                                                                //     color: Colors.black.withOpacity(
                                                                                //         0.1), // Light shadow effect
                                                                                //     blurRadius: 10,
                                                                                //     spreadRadius: 2,
                                                                                //     offset: Offset(0,
                                                                                //         4), // Slight downward shadow
                                                                                //   ),
                                                                                // ],
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  category,
                                                                                  style: TextStyle(
                                                                                    color: index == selectedIndex ? Colors.white : Colors.black,
                                                                                    fontWeight: FontWeight.bold,
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        },
                                                                      );
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                            Expanded(
                                                              child: Container(
                                                                alignment:
                                                                Alignment
                                                                    .center,
                                                                height: 50.h,
                                                                width: 100.w,
                                                                decoration:
                                                                BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                      context)
                                                                      .secondary,
                                                                  borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                    bottomLeft:
                                                                    Radius.circular(
                                                                        0),
                                                                    bottomRight:
                                                                    Radius.circular(
                                                                        0),
                                                                  ),
                                                                ),
                                                                child: Padding(
                                                                  padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      top:
                                                                      10.0),
                                                                  child:
                                                                  ValueListenableBuilder<
                                                                      int>(
                                                                    valueListenable:
                                                                    _selectedGroceryCategoryIndex,
                                                                    builder: (context,
                                                                        selectedIndex,
                                                                        child) {
                                                                      // List<FoodList> filteredItems =
                                                                      //     _getFilteredItems();

                                                                      List<GroceryList>? filteredItems = _getGroceryItemsByProdCode(_groceryCategoryMapping.keys.toList()[selectedIndex]);

                                                                      return ListView
                                                                          .builder(
                                                                        itemCount:
                                                                        _groceryCategoryMapping.length,
                                                                        itemBuilder:
                                                                            (context, sectionIndex) {
                                                                          var categoryKeys = _groceryCategoryMapping.keys.toList();
                                                                          String prodCode = categoryKeys[sectionIndex];

                                                                          print(ref.read(UserDashListProvider.notifier).categoryGroceryProducts);

                                                                          // categoryProducts = ref
                                                                          //     .read(adminDashListProvider
                                                                          //     .notifier)
                                                                          //     .foodList;

                                                                          // List<FoodList>? sectionItems =
                                                                          // _getFoodItemsByProdCode(
                                                                          //     prodCode);
                                                                          // if ((sectionItems ?? []).isEmpty)
                                                                          //   return const SizedBox.shrink();

                                                                          List<GroceryList> sectionItems = (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                                          if (sectionItems.isEmpty)
                                                                            return const SizedBox.shrink();

                                                                          return Column(
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: const EdgeInsets.all(8.0),
                                                                                child: Text(
                                                                                  '${_groceryCategoryMapping[prodCode]} ',
                                                                                  style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: 300,
                                                                                child: ListView.builder(
                                                                                  controller: _scrollgroceryControllers[sectionIndex],
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  itemCount: sectionItems?.length,
                                                                                  padding: const EdgeInsets.symmetric(horizontal: 80),
                                                                                  itemBuilder: (context, index) {
                                                                                    return Center(
                                                                                      child: GestureDetector(
                                                                                        onTap: () {
                                                                                          _selectedgroceryIndexNotifiers[sectionIndex]!.value = index;
                                                                                          _scrollgroceryToIndex(sectionIndex, index);

                                                                                          GroceryList? product = sectionItems?[index];

                                                                                          String? getAmount = product?.amount ?? "";
                                                                                          String? getTitle = product?.title ?? "";
                                                                                          String? getDocId = product?.docID ?? "";
                                                                                          String? getDescription = product?.description ?? "";
                                                                                          final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                                          Navigator.push(
                                                                                            context,
                                                                                            MaterialPageRoute(
                                                                                              builder: (context) => FoodDetailScreen(
                                                                                                title: getTitle,
                                                                                                description: getDescription,
                                                                                                affiliateLink: "",
                                                                                                prodDetails: "getProdDetails",
                                                                                                prodSpec: "getProdSpec",
                                                                                                imageUrls: imageUrls,
                                                                                                amount: getAmount,
                                                                                                userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                                                getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                                                minBargainAmount: "",
                                                                                                getHeroTag: 'imageHero$index',
                                                                                              ),
                                                                                            ),
                                                                                          );
                                                                                        },
                                                                                        child: ValueListenableBuilder<int>(
                                                                                          valueListenable: _selectedgroceryIndexNotifiers[sectionIndex]!,
                                                                                          builder: (context, selectedIndex, child) {
                                                                                            bool isSelected = index == selectedIndex;
                                                                                            return AnimatedContainer(
                                                                                              duration: const Duration(milliseconds: 300),
                                                                                              curve: Curves.easeInOut,
                                                                                              child: Padding(
                                                                                                padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                                                child: Transform.scale(
                                                                                                  scale: isSelected ? 1.2 : 0.9,
                                                                                                  child: Opacity(
                                                                                                    opacity: isSelected ? 1.0 : 0.6,
                                                                                                    child: Container(
                                                                                                      width: 160,
                                                                                                      height: 220,
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: Colors.white,
                                                                                                        borderRadius: BorderRadius.circular(12),
                                                                                                        boxShadow: [
                                                                                                          BoxShadow(
                                                                                                            color: Colors.grey.withOpacity(0.4),
                                                                                                            blurRadius: 8,
                                                                                                            spreadRadius: 2,
                                                                                                            offset: Offset(2, 4),
                                                                                                          )
                                                                                                        ],
                                                                                                      ),
                                                                                                      child: Stack(
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                                            child: Column(
                                                                                                              mainAxisAlignment: MainAxisAlignment.end,
                                                                                                              children: [
                                                                                                                Expanded(
                                                                                                                  child: Container(
                                                                                                                    color: Colors.white,
                                                                                                                    child: Center(
                                                                                                                      child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                                          ? Hero(
                                                                                                                        tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                                        child: FutureBuilder(
                                                                                                                          future: precacheImage(
                                                                                                                            NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                                            context,
                                                                                                                          ),
                                                                                                                          builder: (context, snapshot) {
                                                                                                                            if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                                              return CircleAvatar(
                                                                                                                                radius: 80,
                                                                                                                                backgroundColor: Colors.white,
                                                                                                                                child: CircularProgressIndicator(),
                                                                                                                              );
                                                                                                                            } else {
                                                                                                                              return CircleAvatar(
                                                                                                                                radius: 80,
                                                                                                                                backgroundImage: NetworkImage(
                                                                                                                                  sectionItems?[index].fileUrls[0] ?? '',
                                                                                                                                ),
                                                                                                                                backgroundColor: Colors.white,
                                                                                                                              );
                                                                                                                            }
                                                                                                                          },
                                                                                                                        ),
                                                                                                                      )
                                                                                                                          : CircleAvatar(
                                                                                                                        radius: 80,
                                                                                                                        backgroundColor: Colors.grey,
                                                                                                                      ),
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                ),
                                                                                                                Text(
                                                                                                                  sectionItems?[index].title ?? "",
                                                                                                                  style: TextStyle(
                                                                                                                    color: isSelected ? Colors.black : Colors.grey,
                                                                                                                    fontSize: isSelected ? 18 : 14,
                                                                                                                    fontWeight: FontWeight.w900,
                                                                                                                    fontFamily: 'Encode Sans Condensed',
                                                                                                                  ),
                                                                                                                ),
                                                                                                                Text(
                                                                                                                  '₹${sectionItems?[index].amount}',
                                                                                                                  style: TextStyle(
                                                                                                                    fontSize: 16,
                                                                                                                    color: Constants.colorFoodCPrimary,
                                                                                                                    fontWeight: FontWeight.bold,
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ],
                                                                                                            ),
                                                                                                          ),
                                                                                                          // Heart Icon in Top-Right
                                                                                                          Positioned(
                                                                                                            top: 8,
                                                                                                            right: 8,
                                                                                                            child: Container(
                                                                                                              decoration: BoxDecoration(
                                                                                                                shape: BoxShape.circle,
                                                                                                                border: Border.all(color: Colors.transparent, width: 2),
                                                                                                                color: Colors.white.withOpacity(0.1),
                                                                                                              ),
                                                                                                              padding: EdgeInsets.all(4),
                                                                                                              child: Icon(
                                                                                                                isSelected ? Icons.favorite : null,
                                                                                                                color: isSelected ? Colors.redAccent : null,
                                                                                                                size: 20,
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                            );
                                                                                          },
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                  physics: BouncingScrollPhysics(),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          );
                                                                        },
                                                                        physics:
                                                                        BouncingScrollPhysics(),
                                                                      );
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        (isLoading ?? false)
                                                            ? isRefresh == true
                                                            ? Container()
                                                            : Container(
                                                          color: Colors
                                                              .transparent,
                                                          child: Center(
                                                              child: CircularProgressIndicator(
                                                                color: isRefresh ==
                                                                    true
                                                                    ? Colors
                                                                    .transparent
                                                                    : FlutterFlowTheme.of(context)
                                                                    .primary,
                                                              )),
                                                        )
                                                            : Container()
                                                      ],
                                                    ));

                                              }else{
                                                //food screen
                                                return Container(
                                                    height: 100.h,
                                                    child: Stack(
                                                      children: [
                                                        Column(
                                                          children: [
                                                            GestureDetector(
                                                              onTap: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                        FoodCategoryScreen(
                                                                          selectedCategoryIndex:
                                                                          _selectedCategoryIndex.value ??
                                                                              0,
                                                                        ),
                                                                  ),
                                                                ).then((_) {
                                                                  _selectedCategoryIndex
                                                                      .value = 0;
                                                                  _searchQuery
                                                                      .value = "";
                                                                });
                                                              },
                                                              child: Container(
                                                                alignment:
                                                                Alignment
                                                                    .center,
                                                                height: 10.h,
                                                                width: 100.w,
                                                                decoration:
                                                                BoxDecoration(
                                                                  borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                    bottomLeft:
                                                                    Radius.circular(
                                                                        0),
                                                                    bottomRight:
                                                                    Radius.circular(
                                                                        0),
                                                                  ),
                                                                ),
                                                                child: Padding(
                                                                  padding:
                                                                  const EdgeInsets
                                                                      .all(
                                                                      10.0),
                                                                  child:
                                                                  Container(
                                                                    height: 6.h,
                                                                    width:
                                                                    100.w,
                                                                    decoration:
                                                                    BoxDecoration(
                                                                      color: Constants
                                                                          .colorFoodCSecondaryWhite,
                                                                      // Light gray background
                                                                      borderRadius:
                                                                      BorderRadius.circular(
                                                                          30),
                                                                      // Smooth corners
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color:
                                                                          Constants.colorFoodCSecondaryGrey2,
                                                                          // Light shadow effect
                                                                          blurRadius:
                                                                          10,
                                                                          spreadRadius:
                                                                          2,
                                                                          offset: Offset(
                                                                              0,
                                                                              4), // Slight downward shadow
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                    Center(
                                                                      child:
                                                                      Row(
                                                                        children: [
                                                                          Expanded(
                                                                            flex:
                                                                            3,
                                                                            child:
                                                                            Icon(Icons.search, color: Constants.colorFoodCPrimary),
                                                                          ),
                                                                          Expanded(
                                                                            flex:
                                                                            7,
                                                                            child:
                                                                            Text(
                                                                              "Search More Food",
                                                                              style: TextStyle(
                                                                                fontFamily: 'Encode Sans Condensed',
                                                                                letterSpacing: 4.5,
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                            Container(
                                                              color:
                                                              Colors.white,
                                                              height: 10.h,
                                                              child: Center(
                                                                child:
                                                                Container(
                                                                  height: 5.h,
                                                                  child:
                                                                  ValueListenableBuilder<
                                                                      int>(
                                                                    valueListenable:
                                                                    _selectedCategoryIndex,
                                                                    builder: (context,
                                                                        selectedIndex,
                                                                        child) {
                                                                      return ListView
                                                                          .builder(
                                                                        scrollDirection:
                                                                        Axis.horizontal,
                                                                        itemCount:
                                                                        _categoryMapping.length,
                                                                        itemBuilder:
                                                                            (context,
                                                                            index) {
                                                                          String
                                                                          category =
                                                                          _categoryMapping.values.toList()[index];
                                                                          return GestureDetector(
                                                                            onTap:
                                                                                () {
                                                                              _selectedCategoryIndex.value = index;
                                                                              _searchQuery.value = "";
                                                                            },
                                                                            child:
                                                                            Container(
                                                                              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                                              margin: const EdgeInsets.symmetric(horizontal: 5),
                                                                              decoration: BoxDecoration(
                                                                                color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                                                borderRadius: BorderRadius.circular(15),
                                                                                // border: Border.all(
                                                                                //     color: Colors.grey),
                                                                                // Light gray background
                                                                                // Smooth corners
                                                                                // boxShadow: [
                                                                                //   BoxShadow(
                                                                                //     color: Colors.black.withOpacity(
                                                                                //         0.1), // Light shadow effect
                                                                                //     blurRadius: 10,
                                                                                //     spreadRadius: 2,
                                                                                //     offset: Offset(0,
                                                                                //         4), // Slight downward shadow
                                                                                //   ),
                                                                                // ],
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  category,
                                                                                  style: TextStyle(
                                                                                    color: index == selectedIndex ? Colors.white : Colors.black,
                                                                                    fontWeight: FontWeight.bold,
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        },
                                                                      );
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                            Expanded(
                                                              child: Container(
                                                                alignment:
                                                                Alignment
                                                                    .center,
                                                                height: 50.h,
                                                                width: 100.w,
                                                                decoration:
                                                                BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                      context)
                                                                      .secondary,
                                                                  borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                    bottomLeft:
                                                                    Radius.circular(
                                                                        0),
                                                                    bottomRight:
                                                                    Radius.circular(
                                                                        0),
                                                                  ),
                                                                ),
                                                                child: Padding(
                                                                  padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      top:
                                                                      10.0),
                                                                  child:
                                                                  ValueListenableBuilder<
                                                                      String>(
                                                                    valueListenable:
                                                                    _searchQuery,
                                                                    builder: (context,
                                                                        query,
                                                                        child) {
                                                                      return ValueListenableBuilder<
                                                                          int>(
                                                                        valueListenable:
                                                                        _selectedCategoryIndex,
                                                                        builder: (context,
                                                                            selectedIndex,
                                                                            child) {
                                                                          // List<FoodList> filteredItems =
                                                                          //     _getFilteredItems();

                                                                          List<FoodList>? filteredItems = query.isNotEmpty
                                                                              ? ref.read(UserDashListProvider.notifier).categoryProducts?.where((item) => (item.title ?? "").toLowerCase().contains(query.toLowerCase())).toList()
                                                                              : _getFoodItemsByProdCode(_categoryMapping.keys.toList()[selectedIndex]);

                                                                          return ListView
                                                                              .builder(
                                                                            itemCount:
                                                                            _categoryMapping.length,
                                                                            itemBuilder:
                                                                                (context, sectionIndex) {
                                                                              var categoryKeys = _categoryMapping.keys.toList();
                                                                              String prodCode = categoryKeys[sectionIndex];

                                                                              print(ref.read(UserDashListProvider.notifier).categoryProducts);

                                                                              // categoryProducts = ref
                                                                              //     .read(adminDashListProvider
                                                                              //     .notifier)
                                                                              //     .foodList;

                                                                              // List<FoodList>? sectionItems =
                                                                              // _getFoodItemsByProdCode(
                                                                              //     prodCode);
                                                                              // if ((sectionItems ?? []).isEmpty)
                                                                              //   return const SizedBox.shrink();

                                                                              List<FoodList> sectionItems = (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                                              if (sectionItems.isEmpty)
                                                                                return const SizedBox.shrink();

                                                                              return Column(
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                children: [
                                                                                  Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Text(
                                                                                      '${_categoryMapping[prodCode]} ',
                                                                                      style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                                                    ),
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: 300,
                                                                                    child: ListView.builder(
                                                                                      controller: _scrollControllers[sectionIndex],
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      itemCount: sectionItems?.length,
                                                                                      padding: const EdgeInsets.symmetric(horizontal: 80),
                                                                                      itemBuilder: (context, index) {
                                                                                        return Center(
                                                                                          child: GestureDetector(
                                                                                            onTap: () {
                                                                                              _selectedIndexNotifiers[sectionIndex]!.value = index;
                                                                                              _scrollToIndex(sectionIndex, index);

                                                                                              FoodList? product = sectionItems?[index];

                                                                                              String? getAmount = product?.amount ?? "";
                                                                                              String? getTitle = product?.title ?? "";
                                                                                              String? getDocId = product?.docID ?? "";
                                                                                              String? getDescription = product?.description ?? "";
                                                                                              final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                                              Navigator.push(
                                                                                                context,
                                                                                                MaterialPageRoute(
                                                                                                  builder: (context) => FoodDetailScreen(
                                                                                                    title: getTitle,
                                                                                                    description: getDescription,
                                                                                                    affiliateLink: "",
                                                                                                    prodDetails: "getProdDetails",
                                                                                                    prodSpec: "getProdSpec",
                                                                                                    imageUrls: imageUrls,
                                                                                                    amount: getAmount,
                                                                                                    userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                                                    getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                                                    minBargainAmount: "",
                                                                                                    getHeroTag: 'imageHero$index',
                                                                                                  ),
                                                                                                ),
                                                                                              );
                                                                                            },
                                                                                            child: ValueListenableBuilder<int>(
                                                                                              valueListenable: _selectedIndexNotifiers[sectionIndex]!,
                                                                                              builder: (context, selectedIndex, child) {
                                                                                                bool isSelected = index == selectedIndex;
                                                                                                return AnimatedContainer(
                                                                                                  duration: const Duration(milliseconds: 300),
                                                                                                  curve: Curves.easeInOut,
                                                                                                  child: Padding(
                                                                                                    padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                                                    child: Transform.scale(
                                                                                                      scale: isSelected ? 1.2 : 0.9,
                                                                                                      child: Opacity(
                                                                                                        opacity: isSelected ? 1.0 : 0.6,
                                                                                                        child: Container(
                                                                                                          width: 160,
                                                                                                          height: 220,
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: Colors.white,
                                                                                                            borderRadius: BorderRadius.circular(12),
                                                                                                            boxShadow: [
                                                                                                              BoxShadow(
                                                                                                                color: Colors.grey.withOpacity(0.4),
                                                                                                                blurRadius: 8,
                                                                                                                spreadRadius: 2,
                                                                                                                offset: Offset(2, 4),
                                                                                                              )
                                                                                                            ],
                                                                                                          ),
                                                                                                          child: Stack(
                                                                                                            children: [
                                                                                                              Padding(
                                                                                                                padding: const EdgeInsets.all(8.0),
                                                                                                                child: Column(
                                                                                                                  mainAxisAlignment: MainAxisAlignment.end,
                                                                                                                  children: [
                                                                                                                    Expanded(
                                                                                                                      child: Container(
                                                                                                                        color: Colors.white,
                                                                                                                        child: Center(
                                                                                                                          child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                                              ? Hero(
                                                                                                                            tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                                            child: FutureBuilder(
                                                                                                                              future: precacheImage(
                                                                                                                                NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                                                context,
                                                                                                                              ),
                                                                                                                              builder: (context, snapshot) {
                                                                                                                                if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                                                  return CircleAvatar(
                                                                                                                                    radius: 80,
                                                                                                                                    backgroundColor: Colors.white,
                                                                                                                                    child: CircularProgressIndicator(),
                                                                                                                                  );
                                                                                                                                } else {
                                                                                                                                  return CircleAvatar(
                                                                                                                                    radius: 80,
                                                                                                                                    backgroundImage: NetworkImage(
                                                                                                                                      sectionItems?[index].fileUrls[0] ?? '',
                                                                                                                                    ),
                                                                                                                                    backgroundColor: Colors.white,
                                                                                                                                  );
                                                                                                                                }
                                                                                                                              },
                                                                                                                            ),
                                                                                                                          )
                                                                                                                              : CircleAvatar(
                                                                                                                            radius: 80,
                                                                                                                            backgroundColor: Colors.grey,
                                                                                                                          ),
                                                                                                                        ),
                                                                                                                      ),
                                                                                                                    ),
                                                                                                                    Text(
                                                                                                                      sectionItems?[index].title ?? "",
                                                                                                                      style: TextStyle(
                                                                                                                        color: isSelected ? Colors.black : Colors.grey,
                                                                                                                        fontSize: isSelected ? 18 : 14,
                                                                                                                        fontWeight: FontWeight.w900,
                                                                                                                        fontFamily: 'Encode Sans Condensed',
                                                                                                                      ),
                                                                                                                    ),
                                                                                                                    Text(
                                                                                                                      '₹${sectionItems?[index].amount}',
                                                                                                                      style: TextStyle(
                                                                                                                        fontSize: 16,
                                                                                                                        color: Constants.colorFoodCPrimary,
                                                                                                                        fontWeight: FontWeight.bold,
                                                                                                                      ),
                                                                                                                    ),
                                                                                                                  ],
                                                                                                                ),
                                                                                                              ),
                                                                                                              // Heart Icon in Top-Right
                                                                                                              Positioned(
                                                                                                                top: 8,
                                                                                                                right: 8,
                                                                                                                child: Container(
                                                                                                                  decoration: BoxDecoration(
                                                                                                                    shape: BoxShape.circle,
                                                                                                                    border: Border.all(color: Colors.transparent, width: 2),
                                                                                                                    color: Colors.white.withOpacity(0.1),
                                                                                                                  ),
                                                                                                                  padding: EdgeInsets.all(4),
                                                                                                                  child: Icon(
                                                                                                                    isSelected ? Icons.favorite : null,
                                                                                                                    color: isSelected ? Colors.redAccent : null,
                                                                                                                    size: 20,
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ],
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                              },
                                                                                            ),
                                                                                          ),
                                                                                        );
                                                                                      },
                                                                                      physics: BouncingScrollPhysics(),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              );
                                                                            },
                                                                            physics:
                                                                            BouncingScrollPhysics(),
                                                                          );
                                                                        },
                                                                      );
                                                                    },
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        (isLoading ?? false)
                                                            ? isRefresh == true
                                                            ? Container()
                                                            : Container(
                                                          color: Colors
                                                              .transparent,
                                                          child: Center(
                                                              child: CircularProgressIndicator(
                                                                color: isRefresh ==
                                                                    true
                                                                    ? Colors
                                                                    .transparent
                                                                    : FlutterFlowTheme.of(context)
                                                                    .primary,
                                                              )),
                                                        )
                                                            : Container()
                                                      ],
                                                    ));
                                              }
                                            },
                                          ),
                                        ),
                                      ],
                                    )
                                  : selectedIndex == 1
                                      ? Container(
                                          height: 120.h,
                                          color: Constants.secondary,
                                          child: Column(
                                            children: [
                                              Container(
                                                  alignment:
                                                      Alignment.centerLeft,
                                                  color: Constants.secondary,
                                                  child: Padding(
                                                    padding:
                                                        const EdgeInsets.only(
                                                            top: 20,
                                                            left: 8.0,
                                                            right: 8.0),
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Expanded(
                                                          child: Text(
                                                            "Shopify",

                                                            // style: Theme.of(context).textTheme.titleLarge,
                                                            style: TextStyle(
                                                                fontFamily:
                                                                    'Encode Sans Condensed',
                                                                // Apply Open Sans only for this Text widget
                                                                fontSize: 18,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .bold,
                                                                letterSpacing:
                                                                    2.5),
                                                            maxLines: 2,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  )),
                                              SizedBox(
                                                height: 20,
                                              ),
                                              Container(
                                                alignment: Alignment.center,
                                                height: 17.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondary,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    bottomLeft:
                                                        Radius.circular(0),
                                                    bottomRight:
                                                        Radius.circular(0),
                                                  ),
                                                ),
                                                child: StreamBuilder(
                                                  stream: FirebaseFirestore
                                                      .instance
                                                      .collection('banners')
                                                      .snapshots(),
                                                  builder: (context,
                                                      AsyncSnapshot<
                                                              QuerySnapshot>
                                                          snapshot) {
                                                    if (!snapshot.hasData) {
                                                      return Center(
                                                          child:
                                                              CircularProgressIndicator());
                                                    }

                                                    if (snapshot.data!.docs ==
                                                            null ||
                                                        snapshot.data!.docs
                                                            .isEmpty) {
                                                      return Center(
                                                        child: Column(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .spaceEvenly,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .center,
                                                          children: [
                                                            InkWell(
                                                              child:
                                                                  Image.asset(
                                                                'images/final/SecurityCode/MPin.png',
                                                                width: 80,
                                                                height: 80,
                                                              ),
                                                              onTap: () {},
                                                            ),
                                                            Text(
                                                              "New Offers are About to Load!",
                                                              style: TextStyle(
                                                                  fontFamily:
                                                                      'Encode Sans Condensed',
                                                                  fontSize: 20,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                            ),
                                                            Text(
                                                              "Cheers to Smart Buying Plans.",
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                            ),
                                                          ],
                                                        ),
                                                      );
                                                    }

                                                    return GridView.builder(
                                                      physics:
                                                          NeverScrollableScrollPhysics(),
                                                      padding:
                                                          const EdgeInsets.all(
                                                              8.0),
                                                      gridDelegate:
                                                          SliverGridDelegateWithFixedCrossAxisCount(
                                                        crossAxisCount: 3,
                                                        crossAxisSpacing: 8.0,
                                                        mainAxisSpacing: 8.0,
                                                        childAspectRatio:
                                                            1.0, // Adjust this to change item size ratio
                                                      ),
                                                      itemCount: snapshot
                                                          .data!.docs.length,
                                                      itemBuilder:
                                                          (context, index) {
                                                        if (index > 2) {
                                                          isProductCountExceeds =
                                                              true;
                                                          return SizedBox
                                                              .shrink(); // Return an empty widget for transactions beyond the last three
                                                        } else {
                                                          isProductCountExceeds =
                                                              false;
                                                        }

                                                        var doc = snapshot
                                                            .data!.docs[index];
                                                        List<
                                                            dynamic> imageUrls = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'fileUrls') ??
                                                                false
                                                            ? doc['fileUrls']
                                                            : [];

                                                        String getTitle = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'title') ??
                                                                false
                                                            ? doc['title']
                                                            : "";

                                                        String getDescription = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'description') ??
                                                                false
                                                            ? doc['description']
                                                            : "";

                                                        String getAmount = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'amount') ??
                                                                false
                                                            ? doc['amount']
                                                            : "";

                                                        String getMinBargainAmount = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'minBargainAmount') ??
                                                                false
                                                            ? doc[
                                                                'minBargainAmount']
                                                            : "";

                                                        String getProdDetails = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'productDetails') ??
                                                                false
                                                            ? doc[
                                                                'productDetails']
                                                            : "";

                                                        String getProdSpec = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'productSpec') ??
                                                                false
                                                            ? doc['productSpec']
                                                            : "";

                                                        String getAffiliate = (doc
                                                                            .data()
                                                                        as Map<
                                                                            String,
                                                                            dynamic>?)
                                                                    ?.containsKey(
                                                                        'affiliateLink') ??
                                                                false
                                                            ? doc[
                                                                'affiliateLink']
                                                            : "";

                                                        return GridTile(
                                                          child:
                                                              GestureDetector(
                                                            onTap: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          ProductDetailScreen(
                                                                    title:
                                                                        getTitle,
                                                                    description:
                                                                        getDescription,
                                                                    affiliateLink:
                                                                        getAffiliate,
                                                                    prodDetails:
                                                                        getProdDetails,
                                                                    prodSpec:
                                                                        getProdSpec,
                                                                    imageUrls:
                                                                        imageUrls,
                                                                    amount:
                                                                        getAmount,
                                                                    userName: ref
                                                                            .read(UserDashListProvider.notifier)
                                                                            .getUser ??
                                                                        "",
                                                                    getAdminType:
                                                                        ref.read(UserDashListProvider.notifier).getAdminType ??
                                                                            "",
                                                                    minBargainAmount:
                                                                        getMinBargainAmount,
                                                                    getHeroTag:
                                                                        'imageHero$index',
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                            child: Container(
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondary
                                                                    .withOpacity(
                                                                        0.4),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            15.0),
                                                              ),
                                                              child: Column(
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceEvenly,
                                                                crossAxisAlignment:
                                                                    CrossAxisAlignment
                                                                        .start,
                                                                children: [
                                                                  Expanded(
                                                                    flex: 5,
                                                                    child:
                                                                        Container(
                                                                      // Adjust the height to make it smaller
                                                                      width:
                                                                          100.w,
                                                                      // Adjust the width to make it smaller
                                                                      child:
                                                                          ClipRRect(
                                                                        borderRadius: BorderRadius.only(
                                                                            topLeft:
                                                                                Radius.circular(15),
                                                                            topRight: Radius.circular(15),
                                                                            bottomLeft: Radius.circular(15),
                                                                            bottomRight: Radius.circular(15)),
                                                                        child: imageUrls.isNotEmpty
                                                                            ? Hero(
                                                                                tag: 'imageHero$index',
                                                                                child: Image.network(
                                                                                  imageUrls[0],
                                                                                  fit: BoxFit.fitWidth,
                                                                                  loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                                                                                    if (loadingProgress == null) {
                                                                                      return child;
                                                                                    } else {
                                                                                      return Center(
                                                                                        child: CircularProgressIndicator(
                                                                                          value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                                                        ),
                                                                                      );
                                                                                    }
                                                                                  },
                                                                                ),
                                                                              )
                                                                            : Container(color: Colors.grey),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  Expanded(
                                                                    flex: 3,
                                                                    child:
                                                                        Column(
                                                                      mainAxisAlignment:
                                                                          MainAxisAlignment
                                                                              .center,
                                                                      children: [
                                                                        Padding(
                                                                          padding: const EdgeInsets
                                                                              .only(
                                                                              left: 8.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.start,
                                                                            children: [
                                                                              Expanded(
                                                                                child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        Padding(
                                                                          padding: const EdgeInsets
                                                                              .only(
                                                                              left: 8.0),
                                                                          child:
                                                                              Row(
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.start,
                                                                            children: [
                                                                              Expanded(
                                                                                child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                              Container(
                                                height: 10.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondary,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    bottomLeft:
                                                        Radius.circular(0),
                                                    bottomRight:
                                                        Radius.circular(0),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.all(8.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors.green,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          ProductListScreen(
                                                                    userName: ref
                                                                            .read(UserDashListProvider.notifier)
                                                                            .getUser ??
                                                                        "",
                                                                  ),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text('More',
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 10,
                                                      ),
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors.green,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              // Navigator.push(
                                                              //   context,
                                                              //   MaterialPageRoute(
                                                              //     builder: (context) =>
                                                              //         ProductListScreen(
                                                              //       userName: ref
                                                              //               .read(
                                                              //                   UserDashListProvider
                                                              //                       .notifier)
                                                              //               .getUser ??
                                                              //           "",
                                                              //     ),
                                                              //   ),
                                                              // ).then((value) {
                                                              //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                              //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              // });

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder: (context) =>
                                                                      AffiliateListScreen(
                                                                          userName:
                                                                              ref.read(UserDashListProvider.notifier).getUser ?? ""),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                              'Shop Now',
                                                              style: Theme.of(
                                                                      context)
                                                                  .textTheme
                                                                  .bodyMedium
                                                                  ?.copyWith(
                                                                      color: Constants
                                                                          .secondary,
                                                                      overflow:
                                                                          TextOverflow
                                                                              .ellipsis,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .bold),
                                                            ),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                              SizedBox(
                                                height: 20,
                                              ),
                                              Container(
                                                  alignment:
                                                      Alignment.centerLeft,
                                                  color: Constants.secondary,
                                                  child: SizedBox(
                                                    width: 100.w,
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Text(
                                                          "Shop and Earn",

                                                          // style: Theme.of(context).textTheme.titleLarge,
                                                          style: TextStyle(
                                                              fontFamily:
                                                                  'Encode Sans Condensed',
                                                              // Apply Open Sans only for this Text widget
                                                              fontSize: 18,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .bold,
                                                              letterSpacing:
                                                                  2.5),
                                                          maxLines: 2,
                                                        ),
                                                        // GestureDetector(
                                                        //   onTap: () {
                                                        //     Navigator.push(
                                                        //       context,
                                                        //       PageRouteBuilder(
                                                        //         transitionDuration: Duration(milliseconds: 500),
                                                        //         pageBuilder: (_, __, ___) =>
                                                        //             UserShoppingCommision(
                                                        //               getDocId: widget.getDocId,
                                                        //               getMobile: widget.getMobile,
                                                        //             ),
                                                        //         transitionsBuilder: (_, animation, __, child) {
                                                        //           return ScaleTransition(
                                                        //             scale: Tween<double>(
                                                        //               begin: 0.0,
                                                        //               // You can adjust the start scale
                                                        //               end: 1.0, // You can adjust the end scale
                                                        //             ).animate(animation),
                                                        //             child: child,
                                                        //           );
                                                        //         },
                                                        //       ),
                                                        //     ).then((value) {
                                                        //       if (value != null) {
                                                        //         if (value == true) {
                                                        //           CustomAlertDialog
                                                        //               .showCommisionReqSuccessComDialog(
                                                        //               context, TextEditingController());
                                                        //         }
                                                        //       }
                                                        //     });
                                                        //   },
                                                        //   child: Text(
                                                        //     "Request Commision",
                                                        //
                                                        //     // style: Theme.of(context).textTheme.titleLarge,
                                                        //     style: TextStyle(
                                                        //         fontFamily: 'Encode Sans Condensed',
                                                        //         // Apply Open Sans only for this Text widget
                                                        //         fontSize: 18,
                                                        //         fontWeight: FontWeight.bold,
                                                        //         letterSpacing: 2.5),
                                                        //     maxLines: 2,
                                                        //   ),
                                                        // ),
                                                      ],
                                                    ),
                                                  )),
                                              LayoutBuilder(
                                                builder:
                                                    (context, constraints) {
                                                  return Stack(
                                                    alignment: Alignment.center,
                                                    children: [
                                                      Center(
                                                        child: Container(
                                                          width:
                                                              double.infinity,
                                                          // Take full width
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondary,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .only(
                                                              bottomLeft: Radius
                                                                  .circular(0),
                                                              bottomRight:
                                                                  Radius
                                                                      .circular(
                                                                          0),
                                                            ),
                                                          ),
                                                          child:
                                                              GridView.builder(
                                                            gridDelegate:
                                                                SliverGridDelegateWithFixedCrossAxisCount(
                                                              crossAxisCount: 2,
                                                              crossAxisSpacing:
                                                                  10,
                                                              mainAxisSpacing:
                                                                  10,
                                                              childAspectRatio:
                                                                  3 / 2,
                                                            ),
                                                            padding:
                                                                EdgeInsets.all(
                                                                    10),
                                                            itemCount: _singleton
                                                                .shopNowItems
                                                                .length,
                                                            itemBuilder:
                                                                (context,
                                                                    index) {
                                                              return GestureDetector(
                                                                child:
                                                                    GridItemWidget(
                                                                  item: _singleton
                                                                          .shopNowItems[
                                                                      index],
                                                                  showRandomColor:
                                                                      false,
                                                                ),
                                                                onTap:
                                                                    () async {
                                                                  _isTappingAffiliateApp
                                                                          .value =
                                                                      true;
                                                                  String?
                                                                      getApp =
                                                                      _singleton
                                                                          .shopNowItems[
                                                                              index]
                                                                          .title;
                                                                  String
                                                                      getUser =
                                                                      getUserName ??
                                                                          "";

                                                                  String?
                                                                      token =
                                                                      await NotificationService
                                                                          .getDocumentIDsAndData();

                                                                  if (await canLaunch(
                                                                      _singleton
                                                                              .shopNowItems[index]
                                                                              .affiliateLink ??
                                                                          "")) {
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                        "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                    _isTappingAffiliateApp
                                                                            .value =
                                                                        false;
                                                                    await launch(
                                                                        _singleton.shopNowItems[index].affiliateLink ??
                                                                            "");
                                                                  } else {
                                                                    Constants.showToast(
                                                                        "Try Again After SomeTimes",
                                                                        ToastGravity
                                                                            .BOTTOM);
                                                                    _isTappingAffiliateApp
                                                                            .value =
                                                                        false;
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                        "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                    throw 'Could not launch $getApp';
                                                                  }
                                                                },
                                                              );
                                                            },
                                                            physics:
                                                                NeverScrollableScrollPhysics(),
                                                            shrinkWrap:
                                                                true, // Important to wrap in a SingleChildScrollView
                                                          ),
                                                        ),
                                                      ),
                                                      ValueListenableBuilder<
                                                          bool>(
                                                        valueListenable:
                                                            _isTappingAffiliateApp,
                                                        builder: (context,
                                                            isCreating, child) {
                                                          if (isCreating) {
                                                            return Container(
                                                              // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                              child: Center(
                                                                child:
                                                                    CircularProgressIndicator(),
                                                              ),
                                                            );
                                                          }
                                                          return SizedBox
                                                              .shrink();
                                                        },
                                                      ),
                                                    ],
                                                  );
                                                },
                                              ),
                                            ],
                                          ),
                                        )
                                      : selectedIndex == 2
                                          ? SingleChildScrollView(
                                              child: Container(
                                                height: 200.h,
                                                color: Constants.secondary,
                                                child: Column(
                                                  children: [
                                                    Container(
                                                      height: 10.h,
                                                      width: 100.w,
                                                      decoration: BoxDecoration(
                                                        color:
                                                            Constants.secondary,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          bottomLeft:
                                                              Radius.circular(
                                                                  0),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  0),
                                                        ),
                                                      ),
                                                      child: Stack(children: [
                                                        Positioned.fill(
                                                          child: Padding(
                                                            padding:
                                                                const EdgeInsets
                                                                    .only(
                                                                    left: 0.0,
                                                                    right: 0),
                                                            child: Align(
                                                              alignment: Alignment
                                                                  .centerLeft,
                                                              child: Consumer(
                                                                  builder:
                                                                      (context,
                                                                          ref,
                                                                          child) {
                                                                double?
                                                                    getNetBals =
                                                                    ref.watch(
                                                                        getUserNetBal);

                                                                // getNetBals = 0;

                                                                return Container(
                                                                  width: 100.w,
                                                                  child:
                                                                      SingleChildScrollView(
                                                                    child:
                                                                        Column(
                                                                      mainAxisAlignment:
                                                                          MainAxisAlignment
                                                                              .spaceEvenly,
                                                                      crossAxisAlignment:
                                                                          CrossAxisAlignment
                                                                              .start,
                                                                      children: [
                                                                        // Consumer(builder:
                                                                        //     (context, ref,
                                                                        //         child) {
                                                                        //   double? getNetBals =
                                                                        //       ref.watch(
                                                                        //           getUserNetBal);
                                                                        //
                                                                        //   getNetBals = 0;

                                                                        // return
                                                                        Text(
                                                                            '₹' +
                                                                                getNetBals.toString(),
                                                                            textAlign: TextAlign.start,
                                                                            style: Theme.of(context).textTheme.headlineLarge),
                                                                        // }),
                                                                        Text(
                                                                          getNetBals.toString() == "0.0"
                                                                              ? "Lets Start Earning"
                                                                              : "Is your Saved Earnings",
                                                                          textAlign:
                                                                              TextAlign.start,
                                                                          style: TextStyle(
                                                                              fontFamily: 'Encode Sans Condensed',
                                                                              // Apply Open Sans only for this Text widget
                                                                              fontSize: 18,
                                                                              fontWeight: FontWeight.bold,
                                                                              letterSpacing: 2.5),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                );
                                                              }),
                                                            ),
                                                          ),

                                                          // Add more Positioned widgets for additional images
                                                        ),
                                                      ]),
                                                    ),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    Container(
                                                        alignment: Alignment
                                                            .centerLeft,
                                                        color:
                                                            Constants.secondary,
                                                        child: SizedBox(
                                                          width: 100.w,
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Text(
                                                                "Quick Access",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 18,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines: 2,
                                                              ),
                                                            ],
                                                          ),
                                                        )),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    Container(
                                                      color:
                                                          Constants.secondary,
                                                      height: 15.h,
                                                      width: 100.w,
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .all(0.0),
                                                        child: ListView(
                                                          scrollDirection:
                                                              Axis.horizontal,
                                                          children: [
                                                            ReusableCertificateSection(
                                                              getText: "Save ₹",
                                                              getImage:
                                                                  "cashback",
                                                              getTextColor:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                              getIconColor:
                                                                  Constants
                                                                      .secondary,
                                                              getBackgroundColor:
                                                                  Constants
                                                                      .primary,
                                                              onTap: () {
                                                                // Navigator.push(
                                                                //   context,
                                                                //   PageRouteBuilder(
                                                                //     transitionDuration:
                                                                //         Duration(milliseconds: 400),
                                                                //     pageBuilder: (_, __, ___) =>
                                                                //         SaveMoney(
                                                                //       getMobile: widget.getMobile,
                                                                //       getUserName: ref
                                                                //           .read(UserDashListProvider
                                                                //               .notifier)
                                                                //           .getUser,
                                                                //       getGoalDocId: "",
                                                                //       getTransData: dataList,
                                                                //     ),
                                                                //     transitionsBuilder:
                                                                //         (_, animation, __, child) {
                                                                //       return SlideTransition(
                                                                //         position: Tween<Offset>(
                                                                //           begin: Offset(0, 1),
                                                                //           // You can adjust the start position
                                                                //           end: Offset
                                                                //               .zero, // You can adjust the end position
                                                                //         ).animate(animation),
                                                                //         child: child,
                                                                //       );
                                                                //     },
                                                                //   ),
                                                                // );

                                                                Navigator.push(
                                                                  context,
                                                                  PageRouteBuilder(
                                                                    transitionDuration:
                                                                        Duration(
                                                                            milliseconds:
                                                                                400),
                                                                    pageBuilder: (_,
                                                                            __,
                                                                            ___) =>
                                                                        GoalsHistory1(
                                                                      getDocId: ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .getDocId,
                                                                      getMobile:
                                                                          widget
                                                                              .getMobile,
                                                                      dataList:
                                                                          dataList ??
                                                                              [],
                                                                    ),
                                                                    transitionsBuilder: (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                      return SlideTransition(
                                                                        position: Tween<
                                                                            Offset>(
                                                                          begin: Offset(
                                                                              0,
                                                                              1),
                                                                          // You can adjust the start position
                                                                          end: Offset
                                                                              .zero, // You can adjust the end position
                                                                        ).animate(
                                                                            animation),
                                                                        child:
                                                                            child,
                                                                      );
                                                                    },
                                                                  ),
                                                                );
                                                              },
                                                            ),
                                                            ReusableCertificateSection(
                                                              getText:
                                                                  "Request",
                                                              getImage:
                                                                  "moneyReq",
                                                              getTextColor:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                              getIconColor:
                                                                  Colors.black,
                                                              getBackgroundColor:
                                                                  Constants
                                                                      .secondary1,
                                                              onTap: () {
                                                                double?
                                                                    getFinalGoalAchievedAmount =
                                                                    findGoalAchievedAmount();

                                                                isSavAmntReq =
                                                                    true;
                                                                Navigator.push(
                                                                  context,
                                                                  PageRouteBuilder(
                                                                    transitionDuration:
                                                                        Duration(
                                                                            milliseconds:
                                                                                400),
                                                                    pageBuilder: (_,
                                                                            __,
                                                                            ___) =>
                                                                        RequestMoney(
                                                                      getMobile:
                                                                          widget
                                                                              .getMobile,
                                                                      isSavingReq:
                                                                          isSavAmntReq,
                                                                      getUserName: ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .getUser,
                                                                      getReqAmnt:
                                                                          "",
                                                                      getGoalDocId:
                                                                          "",
                                                                      getGoalTargetAmnt:
                                                                          "",
                                                                      goalAmount:
                                                                          getFinalGoalAchievedAmount ??
                                                                              0.0,
                                                                    ),
                                                                    transitionsBuilder: (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                      return SlideTransition(
                                                                        position: Tween<
                                                                            Offset>(
                                                                          begin: Offset(
                                                                              0,
                                                                              1),
                                                                          // You can adjust the start position
                                                                          end: Offset
                                                                              .zero, // You can adjust the end position
                                                                        ).animate(
                                                                            animation),
                                                                        child:
                                                                            child,
                                                                      );
                                                                    },
                                                                  ),
                                                                );
                                                              },
                                                            ),
                                                            ReusableCertificateSection(
                                                              getText: "Goals",

                                                              ///Offers
                                                              getImage: "Goal",
                                                              getTextColor:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                              getIconColor:
                                                                  Colors.red,
                                                              getBackgroundColor:
                                                                  Constants
                                                                      .primary,
                                                              onTap: () async {
                                                                //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
                                                                // Tuple2<List<Goal>, String>
                                                                //     getGoalDetails =
                                                                //     await updateGoalProvider();

                                                                Navigator.push(
                                                                  context,
                                                                  PageRouteBuilder(
                                                                    transitionDuration:
                                                                        Duration(
                                                                            milliseconds:
                                                                                400),
                                                                    pageBuilder: (_,
                                                                            __,
                                                                            ___) =>
                                                                        GoalsHistory1(
                                                                      getDocId: ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .getDocId,
                                                                      getMobile:
                                                                          widget
                                                                              .getMobile,
                                                                      dataList:
                                                                          dataList ??
                                                                              [],
                                                                    ),
                                                                    transitionsBuilder: (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                      return SlideTransition(
                                                                        position: Tween<
                                                                            Offset>(
                                                                          begin: Offset(
                                                                              0,
                                                                              1),
                                                                          // You can adjust the start position
                                                                          end: Offset
                                                                              .zero, // You can adjust the end position
                                                                        ).animate(
                                                                            animation),
                                                                        child:
                                                                            child,
                                                                      );
                                                                    },
                                                                  ),
                                                                );

                                                                // Navigator.push(
                                                                //   context,
                                                                //   MaterialPageRoute(
                                                                //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
                                                                //   ),
                                                                // ).then((value) {
                                                                //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                                //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                // });
                                                              },
                                                            ),
                                                            ReusableCertificateSection(
                                                              getText:
                                                                  "Rewards",
                                                              getImage:
                                                                  "cashback",
                                                              getTextColor:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                              getIconColor:
                                                                  Colors.black,
                                                              getBackgroundColor:
                                                                  Constants
                                                                      .secondary1,
                                                              onTap: () {
                                                                isSavAmntReq =
                                                                    false;
                                                                Navigator.push(
                                                                  context,
                                                                  PageRouteBuilder(
                                                                    transitionDuration:
                                                                        Duration(
                                                                            milliseconds:
                                                                                400),
                                                                    pageBuilder: (_,
                                                                            __,
                                                                            ___) =>
                                                                        CashbackDetails(
                                                                      getMobile:
                                                                          widget
                                                                              .getMobile,
                                                                      isSavingReq:
                                                                          isSavAmntReq,
                                                                    ),
                                                                    transitionsBuilder: (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                      return SlideTransition(
                                                                        position: Tween<
                                                                            Offset>(
                                                                          begin: Offset(
                                                                              0,
                                                                              1),
                                                                          // You can adjust the start position
                                                                          end: Offset
                                                                              .zero, // You can adjust the end position
                                                                        ).animate(
                                                                            animation),
                                                                        child:
                                                                            child,
                                                                      );
                                                                    },
                                                                  ),
                                                                );
                                                              },
                                                            ),
                                                            // Add more ReusableCertificateSection widgets as needed
                                                          ],
                                                        ),
                                                      ),
                                                    ),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    Container(
                                                        alignment: Alignment
                                                            .centerLeft,
                                                        color:
                                                            Constants.secondary,
                                                        child: SizedBox(
                                                          width: 100.w,
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Text(
                                                                "Achieve Your Goals",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 18,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines: 2,
                                                              ),
                                                              GestureDetector(
                                                                onTap: () {
                                                                  // Tuple2<List<Goal>, String> getGoalDetails =
                                                                  //     await updateGoalProvider();

                                                                  if (ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .goalDocuments!
                                                                          .length >=
                                                                      3) {
                                                                    Constants.showToast(
                                                                        "Maximum Goal Reached, Delete Existing to add New Goal",
                                                                        ToastGravity
                                                                            .CENTER);
                                                                    return;
                                                                  }

                                                                  Navigator
                                                                      .push(
                                                                    context,
                                                                    PageRouteBuilder(
                                                                      transitionDuration:
                                                                          Duration(
                                                                              milliseconds: 500),
                                                                      pageBuilder: (_,
                                                                              __,
                                                                              ___) =>
                                                                          AddGoalWidget(
                                                                        getDocId: ref
                                                                            .read(UserDashListProvider.notifier)
                                                                            .getDocId,
                                                                        getMobile:
                                                                            widget.getMobile,
                                                                      ),
                                                                      transitionsBuilder: (_,
                                                                          animation,
                                                                          __,
                                                                          child) {
                                                                        return ScaleTransition(
                                                                          scale: Tween<
                                                                              double>(
                                                                            begin:
                                                                                0.0,
                                                                            end:
                                                                                1.0,
                                                                          ).animate(
                                                                              animation),
                                                                          child:
                                                                              child,
                                                                        );
                                                                      },
                                                                    ),
                                                                  ).then(
                                                                      (value) {
                                                                    // Handle navigation result if needed
                                                                  });
                                                                },
                                                                child: Text(
                                                                  "Set Goal",

                                                                  // style: Theme.of(context).textTheme.titleLarge,
                                                                  style: TextStyle(
                                                                      fontFamily: 'Encode Sans Condensed',
                                                                      // Apply Open Sans only for this Text widget
                                                                      fontSize: 18,
                                                                      fontWeight: FontWeight.bold,
                                                                      letterSpacing: 2.5),
                                                                  maxLines: 2,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        )),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    Container(
                                                      height: 50.h,
                                                      child: StreamBuilder<
                                                          QuerySnapshot>(
                                                        stream: firestore
                                                            .collection('users')
                                                            .doc(ref
                                                                .read(UserDashListProvider
                                                                    .notifier)
                                                                .getDocId)
                                                            .collection('goals')
                                                            .snapshots(),
                                                        builder: (BuildContext
                                                                context,
                                                            AsyncSnapshot<
                                                                    QuerySnapshot>
                                                                snapshot) {
                                                          if (snapshot
                                                              .hasError) {
                                                            return Center(
                                                              child: Text(
                                                                  'Error: ${snapshot.error}'),
                                                            );
                                                          }

                                                          if (snapshot
                                                                  .connectionState ==
                                                              ConnectionState
                                                                  .waiting) {
                                                            return Center(
                                                              child: SizedBox(
                                                                child:
                                                                    CircularProgressIndicator(),
                                                                height: 20,
                                                                width: 20,
                                                              ),
                                                            );
                                                          }

                                                          ref
                                                                  .read(UserDashListProvider
                                                                      .notifier)
                                                                  .goalDocuments =
                                                              snapshot
                                                                  .data!.docs;

                                                          //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions

                                                          //---------------------

                                                          goalList = snapshot
                                                              .data!.docs
                                                              .map((doc) {
                                                                final data = doc
                                                                        .data()
                                                                    as Map<
                                                                        String,
                                                                        dynamic>;
                                                                final goalTitle =
                                                                    data[
                                                                        'goalTitle'];
                                                                final goalTarget =
                                                                    data[
                                                                        'goalTarget'];
                                                                final goalPriority =
                                                                    data[
                                                                        'goalPriority'];
                                                                final goalToDelete =
                                                                    data[
                                                                        'goalToDelete'];
                                                                // final goalIconName = data['goalIcon'];

                                                                return Goal(
                                                                    goalTitle,
                                                                    goalPriority,
                                                                    goalTarget,
                                                                    0.0,
                                                                    "",
                                                                    goalToDelete,
                                                                    doc.id,
                                                                    Colors
                                                                        .transparent,
                                                                    Icons.add);
                                                              })
                                                              .whereType<Goal>()
                                                              .toList();

                                                          //----------------------------------

                                                          print(
                                                              "goals stream build called");
                                                          return Container(
                                                            child:
                                                                HorizontalGridView1(
                                                              data: snapshot
                                                                  .data!.docs,
                                                              getMobile: widget
                                                                  .getMobile,
                                                              dataList:
                                                                  dataList,
                                                              isAdmin: false,
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                    ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .primary,
                                                        shape:
                                                            RoundedRectangleBorder(
                                                          borderRadius:
                                                              BorderRadius.circular(
                                                                  10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder: (_, __,
                                                                    ___) =>
                                                                TransactionHistory(
                                                                    getMobile:
                                                                        widget
                                                                            .getMobile,
                                                                    isSavingHis:
                                                                        true,
                                                                    isShowSavingsDetails:
                                                                        true),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                      child: Text(
                                                        'View Transactions',
                                                        style: Theme.of(context)
                                                            .textTheme
                                                            .bodyMedium
                                                            ?.copyWith(
                                                                color: Constants
                                                                    .secondary,
                                                                overflow:
                                                                    TextOverflow
                                                                        .ellipsis,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .bold),
                                                      ),
                                                    ),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    Container(
                                                        alignment: Alignment
                                                            .centerLeft,
                                                        color:
                                                            Constants.secondary,
                                                        child: SizedBox(
                                                          width: 100.w,
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Text(
                                                                "Shop and Earn",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 18,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines: 2,
                                                              ),
                                                              // GestureDetector(
                                                              //   onTap: () {
                                                              //     Navigator.push(
                                                              //       context,
                                                              //       PageRouteBuilder(
                                                              //         transitionDuration: Duration(milliseconds: 500),
                                                              //         pageBuilder: (_, __, ___) =>
                                                              //             UserShoppingCommision(
                                                              //               getDocId: widget.getDocId,
                                                              //               getMobile: widget.getMobile,
                                                              //             ),
                                                              //         transitionsBuilder: (_, animation, __, child) {
                                                              //           return ScaleTransition(
                                                              //             scale: Tween<double>(
                                                              //               begin: 0.0,
                                                              //               // You can adjust the start scale
                                                              //               end: 1.0, // You can adjust the end scale
                                                              //             ).animate(animation),
                                                              //             child: child,
                                                              //           );
                                                              //         },
                                                              //       ),
                                                              //     ).then((value) {
                                                              //       if (value != null) {
                                                              //         if (value == true) {
                                                              //           CustomAlertDialog
                                                              //               .showCommisionReqSuccessComDialog(
                                                              //               context, TextEditingController());
                                                              //         }
                                                              //       }
                                                              //     });
                                                              //   },
                                                              //   child: Text(
                                                              //     "Request Commision",
                                                              //
                                                              //     // style: Theme.of(context).textTheme.titleLarge,
                                                              //     style: TextStyle(
                                                              //         fontFamily: 'Encode Sans Condensed',
                                                              //         // Apply Open Sans only for this Text widget
                                                              //         fontSize: 18,
                                                              //         fontWeight: FontWeight.bold,
                                                              //         letterSpacing: 2.5),
                                                              //     maxLines: 2,
                                                              //   ),
                                                              // ),
                                                            ],
                                                          ),
                                                        )),
                                                    LayoutBuilder(
                                                      builder: (context,
                                                          constraints) {
                                                        return Stack(
                                                          alignment:
                                                              Alignment.center,
                                                          children: [
                                                            Center(
                                                              child: Container(
                                                                width: double
                                                                    .infinity,
                                                                // Take full width
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondary,
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .only(
                                                                    bottomLeft:
                                                                        Radius.circular(
                                                                            0),
                                                                    bottomRight:
                                                                        Radius.circular(
                                                                            0),
                                                                  ),
                                                                ),
                                                                child: GridView
                                                                    .builder(
                                                                  gridDelegate:
                                                                      SliverGridDelegateWithFixedCrossAxisCount(
                                                                    crossAxisCount:
                                                                        2,
                                                                    crossAxisSpacing:
                                                                        10,
                                                                    mainAxisSpacing:
                                                                        10,
                                                                    childAspectRatio:
                                                                        3 / 2,
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets
                                                                          .all(
                                                                              10),
                                                                  itemCount:
                                                                      _singleton
                                                                          .shopNowItems
                                                                          .length,
                                                                  itemBuilder:
                                                                      (context,
                                                                          index) {
                                                                    return GestureDetector(
                                                                      child:
                                                                          GridItemWidget(
                                                                        item: _singleton
                                                                            .shopNowItems[index],
                                                                        showRandomColor:
                                                                            false,
                                                                      ),
                                                                      onTap:
                                                                          () async {
                                                                        _isTappingAffiliateApp.value =
                                                                            true;
                                                                        String?
                                                                            getApp =
                                                                            _singleton.shopNowItems[index].title;
                                                                        String
                                                                            getUser =
                                                                            getUserName ??
                                                                                "";

                                                                        String?
                                                                            token =
                                                                            await NotificationService.getDocumentIDsAndData();

                                                                        if (await canLaunch(_singleton.shopNowItems[index].affiliateLink ??
                                                                            "")) {
                                                                          await NotificationService.postNotificationRequest(
                                                                              token ?? "",
                                                                              "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                              "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                          _isTappingAffiliateApp.value =
                                                                              false;
                                                                          await launch(_singleton.shopNowItems[index].affiliateLink ??
                                                                              "");
                                                                        } else {
                                                                          Constants.showToast(
                                                                              "Try Again After SomeTimes",
                                                                              ToastGravity.BOTTOM);
                                                                          _isTappingAffiliateApp.value =
                                                                              false;
                                                                          await NotificationService.postNotificationRequest(
                                                                              token ?? "",
                                                                              "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                              "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                          throw 'Could not launch $getApp';
                                                                        }
                                                                      },
                                                                    );
                                                                  },
                                                                  physics:
                                                                      NeverScrollableScrollPhysics(),
                                                                  shrinkWrap:
                                                                      true, // Important to wrap in a SingleChildScrollView
                                                                ),
                                                              ),
                                                            ),
                                                            ValueListenableBuilder<
                                                                bool>(
                                                              valueListenable:
                                                                  _isTappingAffiliateApp,
                                                              builder: (context,
                                                                  isCreating,
                                                                  child) {
                                                                if (isCreating) {
                                                                  return Container(
                                                                    // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                                    child:
                                                                        Center(
                                                                      child:
                                                                          CircularProgressIndicator(),
                                                                    ),
                                                                  );
                                                                }
                                                                return SizedBox
                                                                    .shrink();
                                                              },
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            )
                                          : selectedIndex == 3
                                              ? SingleChildScrollView(
                                                child: Container(
                                                    height: 150.h,
                                                    color:
                                                        Constants.secondary,
                                                    child: Column(children: [
                                                      SizedBox(
                                                        height: 20,
                                                      ),
                                                      Container(
                                                          alignment: Alignment
                                                              .centerLeft,
                                                          color: Constants
                                                              .secondary,
                                                          child: SizedBox(
                                                            width: 100.w,
                                                            child: Row(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .spaceBetween,
                                                              children: [
                                                                Text(
                                                                  "News For You",

                                                                  // style: Theme.of(context).textTheme.titleLarge,
                                                                  style: TextStyle(
                                                                      fontFamily: 'Encode Sans Condensed',
                                                                      // Apply Open Sans only for this Text widget
                                                                      fontSize: 18,
                                                                      fontWeight: FontWeight.bold,
                                                                      letterSpacing: 2.5),
                                                                  maxLines: 2,
                                                                ),
                                                              ],
                                                            ),
                                                          )),
                                                      SizedBox(
                                                        height: 20,
                                                      ),
                                                      Container(

                                                        width: 100.w,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondary,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .only(
                                                            bottomLeft: Radius
                                                                .circular(0),
                                                            bottomRight:
                                                                Radius
                                                                    .circular(
                                                                        0),
                                                          ),
                                                        ),
                                                        child:
                                                            SingleChildScrollView(
                                                          child: Column(
                                                            children: [

                                                              BusinessInviteBanner(
                                                                icon: Icons
                                                                    .business_center,
                                                                title:
                                                                "Start Your Business Today",
                                                                message:
                                                                "We're inviting you to grow your business by becoming our partner. Join hands for a successful future.",
                                                                bannerImageUrl:
                                                                "",
                                                                primaryButtonText:
                                                                "Accept",
                                                                onPrimaryPressed: () async {
                                                                  //todo:- 17.10.23 adding user details to firestore
                                                                  bool isNewEnquiry =
                                                                  await isEnquiry(
                                                                      (widget.getMobile ?? ""),
                                                                      firestore);

                                                                  if (isNewEnquiry) {
                                                                    String documentId = firestore
                                                                        .collection('Enquiry')
                                                                        .doc()
                                                                        .id;

                                                                    firestore
                                                                        .collection('Enquiry')
                                                                        .doc(documentId)
                                                                        .set({
                                                                      'mobile':
                                                                      (widget.getMobile ?? ""),
                                                                      'name': getUserName,
                                                                      'refNumber': "refNumber",
                                                                      'enquiryReason':
                                                                      "Business Enquiry",
                                                                    }).then((value) async {
                                                                      CustomAlertDialog.showEnquiryComDialog(
                                                                        context: context,
                                                                        onOkPressed: () async {
                                                                          // Perform your custom actions
                                                                          String? token = await NotificationService.getDocumentIDsAndData();
                                                                          if (token != null) {
                                                                            await NotificationService.postNotificationRequest(
                                                                              token,
                                                                              "Hi Admin,\nNew  Business Enquiry Found!",
                                                                              "Hurry up, let's Guide Them With Our Business Models.",
                                                                            );
                                                                          }


                                                                        },
                                                                      );
                                                                    }).catchError((error) => print(
                                                                        'Failed to create data: $error'));
                                                                  } else {

                                                                    Constants.showToast(
                                                                        "Our Executive will connect with you Soon!",
                                                                        ToastGravity.CENTER);

                                                                  }

                                                                },
                                                                secondaryButtonText:
                                                                "Know More",
                                                                onSecondaryPressed:
                                                                    () async {
                                                                  final String youtubeUrl = "https://youtu.be/xEzlKoUrQ2M?feature=shared"; // Replace with your video or channel URL

                                                                  final Uri url = Uri.parse(youtubeUrl);


                                                                  try {
                                                                    if (!await launchUrl(url, mode: LaunchMode.externalApplication)) {
                                                                      ScaffoldMessenger.of(context).showSnackBar(
                                                                        SnackBar(content: Text('Could not launch YouTube link.')),
                                                                      );
                                                                    }
                                                                  } catch (e) {
                                                                    print('Error launching YouTube: $e');
                                                                  }
                                                                },
                                                                onEnquiryPressed: () async {



                                                                  //todo:- 17.10.23 adding user details to firestore
                                                                  bool isNewEnquiry =
                                                                  await isEnquiry(
                                                                      (widget.getMobile ?? ""),
                                                                      firestore);

                                                                  if (isNewEnquiry) {
                                                                    String documentId = firestore
                                                                        .collection('Enquiry')
                                                                        .doc()
                                                                        .id;

                                                                    firestore
                                                                        .collection('Enquiry')
                                                                        .doc(documentId)
                                                                        .set({
                                                                      'mobile':
                                                                      (widget.getMobile ?? ""),
                                                                      'name': getUserName,
                                                                      'refNumber': "refNumber",
                                                                      'enquiryReason':
                                                                      "Business Enquiry",
                                                                    }).then((value) async {
                                                                      CustomAlertDialog.showEnquiryComDialog(
                                                                        context: context,
                                                                        onOkPressed: () async {
                                                                          // Perform your custom actions
                                                                          String? token = await NotificationService.getDocumentIDsAndData();
                                                                          if (token != null) {
                                                                            await NotificationService.postNotificationRequest(
                                                                              token,
                                                                              "Hi Admin,\nNew  Business Enquiry Found!",
                                                                              "Hurry up, let's Guide Them With Our Business Models.",
                                                                            );
                                                                          }


                                                                        },
                                                                      );
                                                                    }).catchError((error) => print(
                                                                        'Failed to create data: $error'));
                                                                  } else {

                                                                    Constants.showToast(
                                                                        "Our Executive will connect with you Soon!",
                                                                        ToastGravity.CENTER);

                                                                  }



                                                                },
                                                              ),
                                                              SizedBox(
                                                                height: 20,
                                                              ),
                                                              Container(
                                                                height: 10.h,
                                                                width: 90.w,
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondary1
                                                                      .withOpacity(
                                                                          0.6),
                                                                  borderRadius:
                                                                      BorderRadius.all(
                                                                          Radius.circular(10.0)),
                                                                ),
                                                                child: Stack(
                                                                    children: [
                                                                      Positioned
                                                                          .fill(
                                                                        child:
                                                                            Align(
                                                                          alignment:
                                                                              Alignment.bottomLeft,
                                                                          child:
                                                                              Image.asset(
                                                                            'images/final/Dashboard/addvertisement1.png',
                                                                          ),
                                                                        ),

                                                                        // Add more Positioned widgets for additional images
                                                                      ),
                                                                      Positioned
                                                                          .fill(
                                                                        child:
                                                                            Padding(
                                                                          padding:
                                                                              const EdgeInsets.only(top: 0.0, right: 10),
                                                                          child:
                                                                              Align(
                                                                            alignment: Alignment.centerRight,
                                                                            child: Container(
                                                                              height: 10.h,
                                                                              width: 50.w,
                                                                              child: Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceAround,
                                                                                children: [
                                                                                  Text("Get Instant", style: Theme.of(context).textTheme.titleLarge?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                                  Text("Cashback!", style: Theme.of(context).textTheme.titleLarge?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),

                                                                        // Add more Positioned widgets for additional images
                                                                      ),
                                                                    ]),
                                                              ),
                                                              SizedBox(
                                                                height: 20,
                                                              ),
                                                              Container(
                                                                height: 20.h,
                                                                width: 90.w,
                                                                child: Stack(
                                                                    children: [
                                                                      Positioned
                                                                          .fill(
                                                                        child:
                                                                            Padding(
                                                                          padding:
                                                                              const EdgeInsets.only(
                                                                            top: 10.0,
                                                                          ),
                                                                          child:
                                                                              Align(
                                                                            alignment: Alignment.topLeft,
                                                                            child: Text("Invite Friends & Earn",
                                                                                style: TextStyle(
                                                                                    color: Constants.secondary3,
                                                                                    fontFamily: 'Encode Sans Condensed',
                                                                                    // Apply Open Sans only for this Text widget
                                                                                    fontSize: 18,
                                                                                    fontWeight: FontWeight.bold,
                                                                                    letterSpacing: 2.5)),
                                                                          ),
                                                                        ),

                                                                        // Add more Positioned widgets for additional images
                                                                      ),
                                                                      Positioned
                                                                          .fill(
                                                                        child:
                                                                            Padding(
                                                                          padding:
                                                                              const EdgeInsets.only(
                                                                            bottom: 10.0,
                                                                          ),
                                                                          child:
                                                                              Align(
                                                                            alignment: Alignment.centerLeft,
                                                                            child: RichText(
                                                                              text: TextSpan(
                                                                                text: "For every user you invite and signs up, you can Earn Upto ",
                                                                                style: TextStyle(
                                                                                    color: Constants.secondary3,
                                                                                    fontFamily: 'Encode Sans Condensed',
                                                                                    // Apply Open Sans only for this Text widget
                                                                                    fontSize: 18,
                                                                                    fontWeight: FontWeight.bold,
                                                                                    letterSpacing: 2.5),
                                                                                children: [
                                                                                  TextSpan(
                                                                                    text: "₹100",
                                                                                    style: TextStyle(
                                                                                      fontWeight: FontWeight.bold,
                                                                                    ),
                                                                                  ),
                                                                                  TextSpan(
                                                                                    text: ".",
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),

                                                                        // Add more Positioned widgets for additional images
                                                                      ),
                                                                      Positioned
                                                                          .fill(
                                                                        child:
                                                                            Padding(
                                                                          padding:
                                                                              const EdgeInsets.only(
                                                                            top: 10.0,
                                                                          ),
                                                                          child:
                                                                              Align(
                                                                            alignment: Alignment.bottomLeft,
                                                                            child: InkWell(
                                                                              splashColor: FlutterFlowTheme.of(context).secondary,
                                                                              onTap: () {
                                                                                shareApp(context);
                                                                              },
                                                                              child: Container(
                                                                                height: 5.h,
                                                                                width: 40.w,
                                                                                decoration: BoxDecoration(
                                                                                  color: Colors.orange,
                                                                                  borderRadius: BorderRadius.all(Radius.circular(10.0)),
                                                                                ),
                                                                                child: Center(
                                                                                  child: Text("Share", style: Theme.of(context).textTheme.bodyMedium?.copyWith(color: Constants.secondary, overflow: TextOverflow.ellipsis, fontWeight: FontWeight.bold)),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),

                                                                        // Add more Positioned widgets for additional images
                                                                      ),
                                                                    ]),
                                                              ),

                                                            ],
                                                          ),
                                                        ),
                                                      ),

                                                    ])),
                                              )
                                              : CustomScrollView(slivers: [
                                                  SliverToBoxAdapter(
                                                    child: Container(
                                                        alignment: Alignment
                                                            .centerLeft,
                                                        color:
                                                            Constants.secondary,
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 20,
                                                                  left: 8.0,
                                                                  right: 8.0),
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                  "Fresh Chicken & Mutton,\nPure Delight!",

                                                                  // style: Theme.of(context).textTheme.titleLarge,
                                                                  style: TextStyle(
                                                                      fontFamily: 'Encode Sans Condensed',
                                                                      // Apply Open Sans only for this Text widget
                                                                      fontSize: 25,
                                                                      fontWeight: FontWeight.bold,
                                                                      letterSpacing: 2.5),
                                                                  maxLines: 2,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        )),
                                                  ),
                                                ]),
                            ),
                          ),
                        ],
                      );
                    },
                  ),
                ),
              ),
            ),
          ),

          //     Stack(
          //   children: [
          //
          //     //todo:- 2.4.25 - complete end user screen,
          //     //---
          //     // Portion A (Background)
          //     Container(
          //         height: 60.h,
          //         child: Stack(
          //           children: [
          //             RefreshIndicator(
          //               onRefresh: _handleRefresh,
          //               child: CustomScrollView(
          //                 slivers: [
          //                   SliverToBoxAdapter(
          //                     child: Center(
          //                       child: Container(
          //                         height: 10.h,
          //                         width: 100.w,
          //                         decoration: BoxDecoration(
          //                           color: Constants.secondary,
          //                           borderRadius: BorderRadius.only(
          //                             bottomLeft: Radius.circular(0),
          //                             bottomRight: Radius.circular(0),
          //                           ),
          //                         ),
          //                         child: Stack(children: [
          //                           Positioned.fill(
          //                             child: Padding(
          //                               padding: const EdgeInsets.only(
          //                                   left: 10.0, right: 0),
          //                               child: Align(
          //                                 alignment: Alignment.centerLeft,
          //                                 child: Consumer(
          //                                     builder: (context, ref, child) {
          //                                   double? getNetBals =
          //                                       ref.watch(getUserNetBal);
          //
          //                                   // getNetBals = 0;
          //
          //                                   return Container(
          //                                     width: 100.w,
          //                                     child: SingleChildScrollView(
          //                                       child: Column(
          //                                         mainAxisAlignment:
          //                                             MainAxisAlignment
          //                                                 .spaceEvenly,
          //                                         crossAxisAlignment:
          //                                             CrossAxisAlignment.start,
          //                                         children: [
          //                                           // Consumer(builder:
          //                                           //     (context, ref,
          //                                           //         child) {
          //                                           //   double? getNetBals =
          //                                           //       ref.watch(
          //                                           //           getUserNetBal);
          //                                           //
          //                                           //   getNetBals = 0;
          //
          //                                           // return
          //                                           Text(
          //                                               '₹' +
          //                                                   getNetBals
          //                                                       .toString(),
          //                                               textAlign:
          //                                                   TextAlign.start,
          //                                               style: Theme.of(context)
          //                                                   .textTheme
          //                                                   .headlineLarge),
          //                                           // }),
          //                                           Text(
          //                                             getNetBals.toString() ==
          //                                                     "0.0"
          //                                                 ? "Lets Start Earning"
          //                                                 : "Is your Saved Earnings",
          //                                             textAlign:
          //                                                 TextAlign.start,
          //                                             style: Theme.of(context)
          //                                                 .textTheme
          //                                                 .titleSmall,
          //                                           ),
          //                                         ],
          //                                       ),
          //                                     ),
          //                                   );
          //                                 }),
          //                               ),
          //                             ),
          //
          //                             // Add more Positioned widgets for additional images
          //                           ),
          //                         ]),
          //                       ),
          //                     ),
          //                   ),
          //                   makeTitleHeader('My Goals', true, 0),
          //
          //                   SliverToBoxAdapter(
          //                     child: StreamBuilder<QuerySnapshot>(
          //                       stream: firestore
          //                           .collection('users')
          //                           .doc(ref
          //                               .read(UserDashListProvider.notifier)
          //                               .getDocId)
          //                           .collection('goals')
          //                           .snapshots(),
          //                       builder: (BuildContext context,
          //                           AsyncSnapshot<QuerySnapshot> snapshot) {
          //                         if (snapshot.hasError) {
          //                           return Center(
          //                             child: Text('Error: ${snapshot.error}'),
          //                           );
          //                         }
          //
          //                         if (snapshot.connectionState ==
          //                             ConnectionState.waiting) {
          //                           return Center(
          //                             child: SizedBox(
          //                               child: CircularProgressIndicator(),
          //                               height: 20,
          //                               width: 20,
          //                             ),
          //                           );
          //                         }
          //
          //                         ref
          //                             .read(UserDashListProvider.notifier)
          //                             .goalDocuments = snapshot.data!.docs;
          //
          //                         //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions
          //
          //                         //---------------------
          //
          //                         goalList = snapshot.data!.docs
          //                             .map((doc) {
          //                               final data =
          //                                   doc.data() as Map<String, dynamic>;
          //                               final goalTitle = data['goalTitle'];
          //                               final goalTarget = data['goalTarget'];
          //                               final goalPriority =
          //                                   data['goalPriority'];
          //                               final goalToDelete =
          //                                   data['goalToDelete'];
          //                               // final goalIconName = data['goalIcon'];
          //
          //                               return Goal(
          //                                   goalTitle,
          //                                   goalPriority,
          //                                   goalTarget,
          //                                   0.0,
          //                                   "",
          //                                   goalToDelete,
          //                                   doc.id,
          //                                   Colors.transparent,
          //                                   Icons.add);
          //                             })
          //                             .whereType<Goal>()
          //                             .toList();
          //
          //                         //----------------------------------
          //
          //                         print("goals stream build called");
          //                         return Container(
          //                           child: HorizontalGridView1(
          //                             data: snapshot.data!.docs,
          //                             getMobile: widget.getMobile,
          //                             dataList: dataList,
          //                             isAdmin: false,
          //                           ),
          //                         );
          //                       },
          //                     ),
          //                   ),
          //                   (isShowMeatSection ?? true)
          //                       ? makeTitleHeader('Meat Basket', false, 1)
          //                       : SliverToBoxAdapter(
          //                           child: SizedBox(
          //                           height: 0,
          //                         )),
          //                   (isShowMeatSection ?? true)
          //                       ? SliverToBoxAdapter(
          //                           child: Container(
          //                             color: Constants.secondary,
          //                             height: 22.h,
          //                             child: Padding(
          //                               padding: const EdgeInsets.all(0.0),
          //                               child: SingleChildScrollView(
          //                                 child: Column(
          //                                   children: [
          //                                     Row(
          //                                       children: [
          //                                         Expanded(
          //                                           child: GestureDetector(
          //                                             child: Card(
          //                                               color: Constants
          //                                                   .secondary2,
          //                                               elevation: 4,
          //                                               shape:
          //                                                   RoundedRectangleBorder(
          //                                                 borderRadius:
          //                                                     BorderRadius
          //                                                         .circular(12),
          //                                               ),
          //                                               child: Column(
          //                                                 mainAxisAlignment:
          //                                                     MainAxisAlignment
          //                                                         .center,
          //                                                 children: [
          //                                                   ClipOval(
          //                                                     child:
          //                                                         Image.asset(
          //                                                       items[0]
          //                                                           ['image']!,
          //                                                       height: 80,
          //                                                       width: 80,
          //                                                       fit: BoxFit
          //                                                           .cover,
          //                                                     ),
          //                                                   ),
          //                                                   SizedBox(
          //                                                       height: 10),
          //                                                   Text(
          //                                                     items[0]
          //                                                         ['title']!,
          //                                                     style: TextStyle(
          //                                                       fontSize: 15,
          //                                                       fontWeight:
          //                                                           FontWeight
          //                                                               .bold,
          //                                                     ),
          //                                                   ),
          //                                                 ],
          //                                               ),
          //                                             ),
          //                                             onTap: () {
          //                                               Navigator.push(
          //                                                 context,
          //                                                 MaterialPageRoute(
          //                                                   builder: (context) => DetailScreen(
          //                                                       title: items[0][
          //                                                               'title'] ??
          //                                                           "",
          //                                                       isReffererPricingPresent:
          //                                                           isReffererPricingPresent ??
          //                                                               false),
          //                                                 ),
          //                                               );
          //                                             },
          //                                           ),
          //                                         ),
          //                                         Expanded(
          //                                           child: GestureDetector(
          //                                             onTap: () {
          //                                               Navigator.push(
          //                                                 context,
          //                                                 MaterialPageRoute(
          //                                                   builder: (context) => DetailScreen(
          //                                                       title: items[1]
          //                                                           ['title']!,
          //                                                       isReffererPricingPresent:
          //                                                           isReffererPricingPresent ??
          //                                                               false),
          //                                                 ),
          //                                               );
          //                                             },
          //                                             child: Card(
          //                                               color: Constants
          //                                                   .secondary2,
          //                                               elevation: 4,
          //                                               shape:
          //                                                   RoundedRectangleBorder(
          //                                                 borderRadius:
          //                                                     BorderRadius
          //                                                         .circular(12),
          //                                               ),
          //                                               child: Column(
          //                                                 mainAxisAlignment:
          //                                                     MainAxisAlignment
          //                                                         .center,
          //                                                 children: [
          //                                                   ClipOval(
          //                                                     child:
          //                                                         Image.asset(
          //                                                       items[1]
          //                                                           ['image']!,
          //                                                       height: 80,
          //                                                       width: 80,
          //                                                       fit: BoxFit
          //                                                           .cover,
          //                                                     ),
          //                                                   ),
          //                                                   SizedBox(
          //                                                       height: 10),
          //                                                   Text(
          //                                                     items[1]
          //                                                         ['title']!,
          //                                                     style: TextStyle(
          //                                                       fontSize: 15,
          //                                                       fontWeight:
          //                                                           FontWeight
          //                                                               .bold,
          //                                                     ),
          //                                                   ),
          //                                                 ],
          //                                               ),
          //                                             ),
          //                                           ),
          //                                         ),
          //                                       ],
          //                                     ),
          //                                     Row(
          //                                       mainAxisAlignment:
          //                                           MainAxisAlignment
          //                                               .spaceEvenly,
          //                                       children: [
          //                                         Expanded(
          //                                           child: Padding(
          //                                             padding:
          //                                                 const EdgeInsets.only(
          //                                                     top: 8.0,
          //                                                     left: 8.0,
          //                                                     right: 8.0),
          //                                             child: Container(
          //                                               decoration:
          //                                                   BoxDecoration(
          //                                                 gradient:
          //                                                     LinearGradient(
          //                                                   colors: [
          //                                                     Constants
          //                                                         .primary1,
          //                                                     Constants
          //                                                         .secondary4
          //                                                   ],
          //                                                   begin: Alignment
          //                                                       .topLeft,
          //                                                   end: Alignment
          //                                                       .bottomRight,
          //                                                 ),
          //                                                 borderRadius:
          //                                                     BorderRadius
          //                                                         .circular(
          //                                                             8.0),
          //                                               ),
          //                                               child: ElevatedButton(
          //                                                 style: ElevatedButton
          //                                                     .styleFrom(
          //                                                   backgroundColor:
          //                                                       Colors
          //                                                           .transparent,
          //                                                   shape:
          //                                                       RoundedRectangleBorder(
          //                                                     borderRadius:
          //                                                         BorderRadius
          //                                                             .circular(
          //                                                                 10.0), // Set the border radius here
          //                                                   ), // Set the background color here
          //                                                 ),
          //                                                 onPressed: () {
          //                                                   Navigator.push(
          //                                                     context,
          //                                                     MaterialPageRoute(
          //                                                       builder:
          //                                                           (context) =>
          //                                                               OrderedMeatList(
          //                                                         getReffererType: ref
          //                                                                 .read(
          //                                                                     UserDashListProvider.notifier)
          //                                                                 .getReffererType ??
          //                                                             "0",
          //                                                       ),
          //                                                     ),
          //                                                   ).then((value) {
          //                                                     //todo:- below code refresh firebase records automatically when come back to same screen
          //                                                     // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                                   });
          //                                                 },
          //                                                 child: Text(
          //                                                     "My Orders",
          //                                                     style: Theme.of(
          //                                                             context)
          //                                                         .textTheme
          //                                                         .bodyMedium
          //                                                         ?.copyWith(
          //                                                             color: Constants
          //                                                                 .secondary,
          //                                                             overflow:
          //                                                                 TextOverflow
          //                                                                     .ellipsis,
          //                                                             fontWeight:
          //                                                                 FontWeight
          //                                                                     .bold)
          //
          //                                                     // TextStyle(
          //                                                     //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
          //                                                     ),
          //                                               ),
          //                                             ),
          //                                           ),
          //                                         ),
          //                                       ],
          //                                     ),
          //                                   ],
          //                                 ),
          //                               ),
          //                             ),
          //                           ),
          //                         )
          //                       : SliverToBoxAdapter(
          //                           child: SizedBox(
          //                           height: 0,
          //                         )),
          //
          //                   makeTitleHeader('Recent Transactions', true, 2),
          //
          //                   //todo:- 26.1.24 second approach
          //                   SliverToBoxAdapter(
          //                     child: StreamBuilder<List<Transactionss>>(
          //                       stream: ref
          //                           .read(UserDashListProvider.notifier)
          //                           .transactionsStream,
          //                       builder: (context, snapshot) {
          //                         if (snapshot.connectionState ==
          //                             ConnectionState.waiting) {
          //                           return Center(
          //                               child: SizedBox(
          //                             child: CircularProgressIndicator(),
          //                             height: 20,
          //                             width: 20,
          //                           ));
          //                         } else if (snapshot.hasError) {
          //                           return Text('Error: ${snapshot.error}');
          //                         } else {
          //                           // Use the snapshot.data to build your UI
          //                           dataList = snapshot.data;
          //
          //                           // If dataList is null or empty, you can handle it accordingly
          //                           if (dataList == null || dataList!.isEmpty) {
          //                             return Center(
          //                               child: Column(
          //                                 mainAxisAlignment:
          //                                     MainAxisAlignment.center,
          //                                 crossAxisAlignment:
          //                                     CrossAxisAlignment.center,
          //                                 children: [
          //                                   InkWell(
          //                                     child: Image.asset(
          //                                       'images/final/SecurityCode/MPin.png',
          //                                       width: 150,
          //                                       height: 150,
          //                                     ),
          //                                     onTap: () {
          //                                       Navigator.push(
          //                                         context,
          //                                         PageRouteBuilder(
          //                                           transitionDuration:
          //                                               Duration(
          //                                                   milliseconds: 400),
          //                                           pageBuilder: (_, __, ___) =>
          //                                               SaveMoney(
          //                                             getMobile:
          //                                                 widget.getMobile,
          //                                             getUserName: ref
          //                                                 .read(
          //                                                     UserDashListProvider
          //                                                         .notifier)
          //                                                 .getUser,
          //                                             getGoalDocId: "",
          //                                             getTransData: dataList,
          //                                             getPaymentService:
          //                                                 PaymentService
          //                                                     .maakaMoney,
          //                                           ),
          //                                           transitionsBuilder: (_,
          //                                               animation, __, child) {
          //                                             return SlideTransition(
          //                                               position: Tween<Offset>(
          //                                                 begin: Offset(0, 1),
          //                                                 // You can adjust the start position
          //                                                 end: Offset
          //                                                     .zero, // You can adjust the end position
          //                                               ).animate(animation),
          //                                               child: child,
          //                                             );
          //                                           },
          //                                         ),
          //                                       );
          //                                     },
          //                                   ),
          //                                   SizedBox(height: 16),
          //                                   Text(
          //                                     "Tap to Start Saving Money!",
          //                                     style: TextStyle(
          //                                         fontSize: 20,
          //                                         fontWeight: FontWeight.bold),
          //                                     textAlign: TextAlign.center,
          //                                   ),
          //                                   SizedBox(height: 16),
          //                                   Text(
          //                                     "Cheers to Smart financial moves and Savings Plans.",
          //                                     textAlign: TextAlign.center,
          //                                   ),
          //                                 ],
          //                               ),
          //                             );
          //                           }
          //
          //                           // Your logic to build the UI using the dataList
          //                           // ...
          //                           print("transaction stream build called");
          //                           return ListView.builder(
          //                             shrinkWrap: true,
          //                             physics: NeverScrollableScrollPhysics(),
          //                             itemCount: dataList?.length,
          //                             itemBuilder: (context, index) {
          //                               if (index > 2) {
          //                                 return SizedBox
          //                                     .shrink(); // Return an empty widget for transactions beyond the last three
          //                               }
          //
          //                               final document = dataList?[index];
          //
          //                               final amount = document?.amount;
          //                               final transType = document?.isDeposit;
          //
          //                               final date = document?.date;
          //                               final mobile = document?.mobile;
          //                               final docId = document?.docId;
          //                               final interest = document?.interest;
          //                               final timeStamp = document?.timmeStamp;
          //
          //                               // Replace this with your Timestamp object
          //                               Timestamp timestamp =
          //                                   timeStamp ?? Timestamp(000, 000);
          //                               // Convert Timestamp to DateTime
          //                               DateTime dateTime = timestamp.toDate();
          //
          //                               // Format date and time
          //                               String formattedDateTime =
          //                                   DateFormat('dd-MM-yyyy h:mm a')
          //                                       .format(dateTime);
          //
          //                               //todo:-  adding estimated time for withdrawal request from current time
          //
          //                               if (transType == false && amount == 0) {
          //                                 DateTime estimatedDateTime = dateTime
          //                                     .add(Duration(minutes: 20));
          //                                 formattedDateTime =
          //                                     DateFormat('h:mm a')
          //                                         .format(estimatedDateTime);
          //                               }
          //
          //                               String getFinInt = interest == null
          //                                   ? 0.0.toString()
          //                                   : interest.toStringAsFixed(2);
          //
          //                               return Container(
          //                                 color: Constants.secondary
          //                                     .withOpacity(0.95),
          //                                 child: Padding(
          //                                   padding: const EdgeInsets.all(5),
          //                                   child: Card(
          //                                     shape: RoundedRectangleBorder(
          //                                       borderRadius:
          //                                           BorderRadius.circular(6.0),
          //                                     ),
          //                                     color: amount == 0
          //                                         ? Constants.secondary
          //                                         : Constants.secondary,
          //                                     elevation: 4.0,
          //                                     child: ListTile(
          //                                       leading: Card(
          //                                         color: transType == true
          //                                             ? FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .primary
          //                                             : FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .secondary1,
          //                                         clipBehavior: Clip
          //                                             .antiAliasWithSaveLayer,
          //                                         elevation: 5.0,
          //                                         shape: RoundedRectangleBorder(
          //                                           borderRadius:
          //                                               BorderRadius.circular(
          //                                                   8.0),
          //                                         ),
          //                                         child: Padding(
          //                                           padding:
          //                                               const EdgeInsets.all(
          //                                                   8.0),
          //                                           child: Icon(
          //                                             transType == true
          //                                                 ? amount == 0
          //                                                     ? Icons.lock_clock
          //                                                     : Icons
          //                                                         .arrow_forward
          //                                                 : amount == 0
          //                                                     ? Icons.lock_clock
          //                                                     : Icons
          //                                                         .arrow_back,
          //                                             color:
          //                                                 Constants.secondary,
          //                                             size: 24.0,
          //                                           ),
          //                                         ),
          //                                       ),
          //                                       title: Text(
          //                                         transType == true
          //                                             ? amount == 0
          //                                                 ? "Processing Payment"
          //                                                 : "Deposit"
          //                                             : amount == 0
          //                                                 ? "Processing Request"
          //                                                 : "Withdrawn",
          //                                         style: Theme.of(context)
          //                                             .textTheme
          //                                             .bodyLarge
          //                                             ?.copyWith(
          //                                                 color: amount == 0
          //                                                     ? Constants
          //                                                         .primary
          //                                                     : Constants
          //                                                         .primary,
          //                                                 fontWeight:
          //                                                     FontWeight.bold,
          //                                                 overflow: TextOverflow
          //                                                     .ellipsis),
          //                                       ),
          //                                       subtitle: Text(
          //                                         transType == true
          //                                             ? amount == 0
          //                                                 ? formattedDateTime
          //                                                     .toString()
          //                                                     .toUpperCase()
          //                                                 : formattedDateTime
          //                                                     .toString()
          //                                                     .toUpperCase()
          //                                             : amount == 0
          //                                                 ? "Receive Money before - $formattedDateTime"
          //                                                 : formattedDateTime
          //                                                     .toString()
          //                                                     .toUpperCase(),
          //                                         style: Theme.of(context)
          //                                             .textTheme
          //                                             .bodyMedium
          //                                             ?.copyWith(
          //                                                 color: amount == 0
          //                                                     ? Constants
          //                                                         .secondary3
          //                                                     : Colors.black,
          //                                                 fontWeight:
          //                                                     FontWeight.bold,
          //                                                 overflow: TextOverflow
          //                                                     .ellipsis),
          //                                       ),
          //                                       trailing: Container(
          //                                         child: Column(
          //                                           mainAxisAlignment:
          //                                               MainAxisAlignment
          //                                                   .spaceEvenly,
          //                                           crossAxisAlignment:
          //                                               CrossAxisAlignment.end,
          //                                           children: [
          //                                             amount == 0
          //                                                 ? Text("")
          //                                                 : Text(
          //                                                     transType == true
          //                                                         ? "+" +
          //                                                             '$amount' +
          //                                                             ' ₹'
          //                                                         : "" +
          //                                                             '$amount' +
          //                                                             ' ₹',
          //                                                     style: Theme.of(context).textTheme.titleSmall?.copyWith(
          //                                                         color: transType ==
          //                                                                 true
          //                                                             ? Constants
          //                                                                 .deposite
          //                                                             : Constants
          //                                                                 .withdrawal,
          //                                                         overflow:
          //                                                             TextOverflow
          //                                                                 .ellipsis,
          //                                                         fontWeight:
          //                                                             FontWeight
          //                                                                 .bold),
          //                                                   ),
          //                                             amount == 0
          //                                                 ? Text("")
          //                                                 : Visibility(
          //                                                     visible:
          //                                                         transType ==
          //                                                                 true
          //                                                             ? true
          //                                                             : false,
          //                                                     child: Text(
          //                                                       transType ==
          //                                                               true
          //                                                           ? "+" +
          //                                                               '$getFinInt' +
          //                                                               ' ₹'
          //                                                           : '',
          //                                                       style: Theme.of(context).textTheme.titleSmall?.copyWith(
          //                                                           color: transType ==
          //                                                                   true
          //                                                               ? Colors
          //                                                                   .grey
          //                                                               : Colors
          //                                                                   .red,
          //                                                           overflow:
          //                                                               TextOverflow
          //                                                                   .ellipsis,
          //                                                           fontWeight:
          //                                                               FontWeight
          //                                                                   .bold),
          //                                                     ),
          //                                                   ),
          //                                           ],
          //                                         ),
          //                                       ),
          //                                       onTap: () {},
          //                                     ),
          //                                   ),
          //                                 ),
          //                               );
          //                             },
          //                           );
          //                         }
          //                       },
          //                     ),
          //                   ),
          //                 ],
          //               ),
          //             ),
          //             (isLoading ?? false)
          //                 ? isRefresh == true
          //                     ? Container()
          //                     : Container(
          //                         color: Colors.transparent,
          //                         child: Center(
          //                             child: CircularProgressIndicator(
          //                           color: isRefresh == true
          //                               ? Colors.transparent
          //                               : FlutterFlowTheme.of(context).primary,
          //                         )),
          //                       )
          //                 : Container()
          //           ],
          //         )),
          //     // Portion B (Overlay)
          //     Positioned(
          //       bottom: 0,
          //       left: 0,
          //       right: 0,
          //       child: GestureDetector(
          //         onVerticalDragUpdate: _onVerticalDragUpdate,
          //         onVerticalDragEnd: _onVerticalDragEnd,
          //         behavior: HitTestBehavior.translucent,
          //         child: ValueListenableBuilder<double>(
          //           valueListenable: portionBHeightNotifier,
          //           builder: (context, portionBHeight, child) {
          //             return Container(
          //               height: portionBHeight,
          //               decoration: BoxDecoration(
          //                 color: Colors.lightBlue.withOpacity(0.15),
          //                 borderRadius: new BorderRadius.only(
          //                   topLeft: Radius.circular(35),
          //                   topRight: Radius.circular(35),
          //                 ),
          //               ), // Replace with your overlay color
          //               child: Column(
          //                 children: [
          //                   SizedBox(
          //                     height: 1.h,
          //                   ),
          //                   Container(
          //                     height: 1.h,
          //                     width: 15.w,
          //                     decoration: BoxDecoration(
          //                       color: Constants.secondary,
          //                       borderRadius: BorderRadius.circular(10),
          //                     ),
          //                   ),
          //                   Expanded(
          //                     child: Padding(
          //                       padding: const EdgeInsets.only(top: 20.0),
          //                       child: CustomScrollView(
          //                         physics: portionBHeight ==
          //                                 MediaQuery.of(context).size.height -
          //                                     20.h
          //                             ? AlwaysScrollableScrollPhysics()
          //                             : NeverScrollableScrollPhysics(),
          //                         // physics: NeverScrollableScrollPhysics(),
          //                         slivers: [
          //                           makeTitleHeader('Shopify', false, 4),
          //                           SliverToBoxAdapter(
          //                             child: Center(
          //                               child: Container(
          //                                 alignment: Alignment.center,
          //                                 height: 17.h,
          //                                 width: 100.w,
          //                                 decoration: BoxDecoration(
          //                                   color: FlutterFlowTheme.of(context)
          //                                       .secondary,
          //                                   borderRadius: BorderRadius.only(
          //                                     bottomLeft: Radius.circular(0),
          //                                     bottomRight: Radius.circular(0),
          //                                   ),
          //                                 ),
          //                                 child: StreamBuilder(
          //                                   stream: FirebaseFirestore.instance
          //                                       .collection('banners')
          //                                       .snapshots(),
          //                                   builder: (context,
          //                                       AsyncSnapshot<QuerySnapshot>
          //                                           snapshot) {
          //                                     if (!snapshot.hasData) {
          //                                       return Center(
          //                                           child:
          //                                               CircularProgressIndicator());
          //                                     }
          //
          //                                     if (snapshot.data!.docs == null ||
          //                                         snapshot.data!.docs.isEmpty) {
          //                                       return Center(
          //                                         child: Column(
          //                                           mainAxisAlignment:
          //                                               MainAxisAlignment
          //                                                   .spaceEvenly,
          //                                           crossAxisAlignment:
          //                                               CrossAxisAlignment
          //                                                   .center,
          //                                           children: [
          //                                             InkWell(
          //                                               child: Image.asset(
          //                                                 'images/final/SecurityCode/MPin.png',
          //                                                 width: 80,
          //                                                 height: 80,
          //                                               ),
          //                                               onTap: () {},
          //                                             ),
          //                                             Text(
          //                                               "New Offers are About to Load!",
          //                                               style: TextStyle(
          //                                                   fontSize: 20,
          //                                                   fontWeight:
          //                                                       FontWeight
          //                                                           .bold),
          //                                               textAlign:
          //                                                   TextAlign.center,
          //                                             ),
          //                                             Text(
          //                                               "Cheers to Smart Buying Plans.",
          //                                               textAlign:
          //                                                   TextAlign.center,
          //                                             ),
          //                                           ],
          //                                         ),
          //                                       );
          //                                     }
          //
          //                                     return GridView.builder(
          //                                       physics:
          //                                           NeverScrollableScrollPhysics(),
          //                                       padding:
          //                                           const EdgeInsets.all(8.0),
          //                                       gridDelegate:
          //                                           SliverGridDelegateWithFixedCrossAxisCount(
          //                                         crossAxisCount: 3,
          //                                         crossAxisSpacing: 8.0,
          //                                         mainAxisSpacing: 8.0,
          //                                         childAspectRatio:
          //                                             1.0, // Adjust this to change item size ratio
          //                                       ),
          //                                       itemCount:
          //                                           snapshot.data!.docs.length,
          //                                       itemBuilder: (context, index) {
          //                                         if (index > 2) {
          //                                           isProductCountExceeds =
          //                                               true;
          //                                           return SizedBox
          //                                               .shrink(); // Return an empty widget for transactions beyond the last three
          //                                         } else {
          //                                           isProductCountExceeds =
          //                                               false;
          //                                         }
          //
          //                                         var doc = snapshot
          //                                             .data!.docs[index];
          //                                         List<dynamic> imageUrls = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'fileUrls') ??
          //                                                 false
          //                                             ? doc['fileUrls']
          //                                             : [];
          //
          //                                         String getTitle = (doc.data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'title') ??
          //                                                 false
          //                                             ? doc['title']
          //                                             : "";
          //
          //                                         String getDescription = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'description') ??
          //                                                 false
          //                                             ? doc['description']
          //                                             : "";
          //
          //                                         String getAmount = (doc.data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'amount') ??
          //                                                 false
          //                                             ? doc['amount']
          //                                             : "";
          //
          //                                         String getMinBargainAmount = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'minBargainAmount') ??
          //                                                 false
          //                                             ? doc['minBargainAmount']
          //                                             : "";
          //
          //                                         String getProdDetails = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'productDetails') ??
          //                                                 false
          //                                             ? doc['productDetails']
          //                                             : "";
          //
          //                                         String getProdSpec = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'productSpec') ??
          //                                                 false
          //                                             ? doc['productSpec']
          //                                             : "";
          //
          //                                         String getAffiliate = (doc
          //                                                             .data()
          //                                                         as Map<String,
          //                                                             dynamic>?)
          //                                                     ?.containsKey(
          //                                                         'affiliateLink') ??
          //                                                 false
          //                                             ? doc['affiliateLink']
          //                                             : "";
          //
          //                                         return GridTile(
          //                                           child: GestureDetector(
          //                                             onTap: () {
          //                                               Navigator.push(
          //                                                 context,
          //                                                 MaterialPageRoute(
          //                                                   builder: (context) =>
          //                                                       ProductDetailScreen(
          //                                                     title: getTitle,
          //                                                     description:
          //                                                         getDescription,
          //                                                     affiliateLink:
          //                                                         getAffiliate,
          //                                                     prodDetails:
          //                                                         getProdDetails,
          //                                                     prodSpec:
          //                                                         getProdSpec,
          //                                                     imageUrls:
          //                                                         imageUrls,
          //                                                     amount: getAmount,
          //                                                     userName: ref
          //                                                             .read(UserDashListProvider
          //                                                                 .notifier)
          //                                                             .getUser ??
          //                                                         "",
          //                                                     getAdminType: ref
          //                                                             .read(UserDashListProvider
          //                                                                 .notifier)
          //                                                             .getAdminType ??
          //                                                         "",
          //                                                     minBargainAmount:
          //                                                         getMinBargainAmount,
          //                                                     getHeroTag:
          //                                                         'imageHero$index',
          //                                                   ),
          //                                                 ),
          //                                               );
          //                                             },
          //                                             child: Container(
          //                                               decoration:
          //                                                   BoxDecoration(
          //                                                 color: FlutterFlowTheme
          //                                                         .of(context)
          //                                                     .secondary
          //                                                     .withOpacity(0.4),
          //                                                 borderRadius:
          //                                                     BorderRadius
          //                                                         .circular(
          //                                                             15.0),
          //                                               ),
          //                                               child: Column(
          //                                                 mainAxisAlignment:
          //                                                     MainAxisAlignment
          //                                                         .spaceEvenly,
          //                                                 crossAxisAlignment:
          //                                                     CrossAxisAlignment
          //                                                         .start,
          //                                                 children: [
          //                                                   Expanded(
          //                                                     flex: 5,
          //                                                     child: Container(
          //                                                       // Adjust the height to make it smaller
          //                                                       width: 100.w,
          //                                                       // Adjust the width to make it smaller
          //                                                       child:
          //                                                           ClipRRect(
          //                                                         borderRadius: BorderRadius.only(
          //                                                             topLeft:
          //                                                                 Radius.circular(
          //                                                                     15),
          //                                                             topRight:
          //                                                                 Radius.circular(
          //                                                                     15),
          //                                                             bottomLeft:
          //                                                                 Radius.circular(
          //                                                                     15),
          //                                                             bottomRight:
          //                                                                 Radius.circular(
          //                                                                     15)),
          //                                                         child: imageUrls
          //                                                                 .isNotEmpty
          //                                                             ? Hero(
          //                                                                 tag:
          //                                                                     'imageHero$index',
          //                                                                 child:
          //                                                                     Image.network(
          //                                                                   imageUrls[0],
          //                                                                   fit:
          //                                                                       BoxFit.fitWidth,
          //                                                                   loadingBuilder: (BuildContext context,
          //                                                                       Widget child,
          //                                                                       ImageChunkEvent? loadingProgress) {
          //                                                                     if (loadingProgress == null) {
          //                                                                       return child;
          //                                                                     } else {
          //                                                                       return Center(
          //                                                                         child: CircularProgressIndicator(
          //                                                                           value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
          //                                                                         ),
          //                                                                       );
          //                                                                     }
          //                                                                   },
          //                                                                 ),
          //                                                               )
          //                                                             : Container(
          //                                                                 color:
          //                                                                     Colors.grey),
          //                                                       ),
          //                                                     ),
          //                                                   ),
          //                                                   Expanded(
          //                                                     flex: 3,
          //                                                     child: Column(
          //                                                       mainAxisAlignment:
          //                                                           MainAxisAlignment
          //                                                               .center,
          //                                                       children: [
          //                                                         Padding(
          //                                                           padding: const EdgeInsets
          //                                                               .only(
          //                                                               left:
          //                                                                   8.0),
          //                                                           child: Row(
          //                                                             mainAxisAlignment:
          //                                                                 MainAxisAlignment
          //                                                                     .start,
          //                                                             children: [
          //                                                               Expanded(
          //                                                                 child: Text(
          //                                                                     doc['title'],
          //                                                                     style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
          //                                                               ),
          //                                                             ],
          //                                                           ),
          //                                                         ),
          //                                                         Padding(
          //                                                           padding: const EdgeInsets
          //                                                               .only(
          //                                                               left:
          //                                                                   8.0),
          //                                                           child: Row(
          //                                                             mainAxisAlignment:
          //                                                                 MainAxisAlignment
          //                                                                     .start,
          //                                                             children: [
          //                                                               Expanded(
          //                                                                 child: Text(
          //                                                                     doc['description'],
          //                                                                     style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
          //                                                               ),
          //                                                             ],
          //                                                           ),
          //                                                         ),
          //                                                       ],
          //                                                     ),
          //                                                   ),
          //                                                 ],
          //                                               ),
          //                                             ),
          //                                           ),
          //                                         );
          //                                       },
          //                                     );
          //                                   },
          //                                 ),
          //                               ),
          //                             ),
          //                           ),
          //                           SliverToBoxAdapter(
          //                             child: Container(
          //                               height: 10.h,
          //                               width: 100.w,
          //                               decoration: BoxDecoration(
          //                                 color: FlutterFlowTheme.of(context)
          //                                     .secondary,
          //                                 borderRadius: BorderRadius.only(
          //                                   bottomLeft: Radius.circular(0),
          //                                   bottomRight: Radius.circular(0),
          //                                 ),
          //                               ),
          //                               child: Padding(
          //                                 padding: const EdgeInsets.all(8.0),
          //                                 child: Row(
          //                                   mainAxisAlignment:
          //                                       MainAxisAlignment.spaceEvenly,
          //                                   children: [
          //                                     Expanded(
          //                                       child: Container(
          //                                         child: ElevatedButton(
          //                                           style: ElevatedButton
          //                                               .styleFrom(
          //                                             backgroundColor:
          //                                                 Constants.primary,
          //                                             shape:
          //                                                 RoundedRectangleBorder(
          //                                               borderRadius:
          //                                                   BorderRadius.circular(
          //                                                       10.0), // Set the border radius here
          //                                             ), // Set the background color here
          //                                           ),
          //                                           onPressed: () async {
          //                                             Navigator.push(
          //                                               context,
          //                                               MaterialPageRoute(
          //                                                 builder: (context) =>
          //                                                     ProductListScreen(
          //                                                   userName: ref
          //                                                           .read(UserDashListProvider
          //                                                               .notifier)
          //                                                           .getUser ??
          //                                                       "",
          //                                                 ),
          //                                               ),
          //                                             ).then((value) {
          //                                               //todo:- below code refresh firebase records automatically when come back to same screen
          //                                               // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                             });
          //                                           },
          //                                           child: Text('More',
          //                                               style: Theme.of(context)
          //                                                   .textTheme
          //                                                   .bodyMedium
          //                                                   ?.copyWith(
          //                                                       color: Constants
          //                                                           .secondary,
          //                                                       overflow:
          //                                                           TextOverflow
          //                                                               .ellipsis,
          //                                                       fontWeight:
          //                                                           FontWeight
          //                                                               .bold)),
          //                                         ),
          //                                         height: 5.h,
          //                                         width: 50.w,
          //                                       ),
          //                                     ),
          //                                     SizedBox(
          //                                       width: 10,
          //                                     ),
          //                                     Expanded(
          //                                       child: Container(
          //                                         child: ElevatedButton(
          //                                           style: ElevatedButton
          //                                               .styleFrom(
          //                                             backgroundColor:
          //                                                 Constants.primary,
          //                                             shape:
          //                                                 RoundedRectangleBorder(
          //                                               borderRadius:
          //                                                   BorderRadius.circular(
          //                                                       10.0), // Set the border radius here
          //                                             ), // Set the background color here
          //                                           ),
          //                                           onPressed: () async {
          //                                             // Navigator.push(
          //                                             //   context,
          //                                             //   MaterialPageRoute(
          //                                             //     builder: (context) =>
          //                                             //         ProductListScreen(
          //                                             //       userName: ref
          //                                             //               .read(
          //                                             //                   UserDashListProvider
          //                                             //                       .notifier)
          //                                             //               .getUser ??
          //                                             //           "",
          //                                             //     ),
          //                                             //   ),
          //                                             // ).then((value) {
          //                                             //   //todo:- below code refresh firebase records automatically when come back to same screen
          //                                             //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                             // });
          //
          //                                             Navigator.push(
          //                                               context,
          //                                               MaterialPageRoute(
          //                                                 builder: (context) =>
          //                                                     AffiliateListScreen(
          //                                                         userName: ref
          //                                                                 .read(
          //                                                                     UserDashListProvider.notifier)
          //                                                                 .getUser ??
          //                                                             ""),
          //                                               ),
          //                                             ).then((value) {
          //                                               //todo:- below code refresh firebase records automatically when come back to same screen
          //                                               // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                             });
          //                                           },
          //                                           child: Text(
          //                                             'Shop Now',
          //                                             style: Theme.of(context)
          //                                                 .textTheme
          //                                                 .bodyMedium
          //                                                 ?.copyWith(
          //                                                     color: Constants
          //                                                         .secondary,
          //                                                     overflow:
          //                                                         TextOverflow
          //                                                             .ellipsis,
          //                                                     fontWeight:
          //                                                         FontWeight
          //                                                             .bold),
          //                                           ),
          //                                         ),
          //                                         height: 5.h,
          //                                         width: 50.w,
          //                                       ),
          //                                     ),
          //                                   ],
          //                                 ),
          //                               ),
          //                             ),
          //                           ),
          //                           (isShowFoodSection ?? true)
          //                               ? makeTitleHeader('Foodie', true, 5)
          //                               : SliverToBoxAdapter(
          //                                   child: SizedBox(
          //                                   height: 0,
          //                                 )),
          //                           (isShowFoodSection ?? true)
          //                               ? SliverToBoxAdapter(
          //                                   child: Center(
          //                                     child: Container(
          //                                       alignment: Alignment.center,
          //                                       height: 17.h,
          //                                       width: 100.w,
          //                                       decoration: BoxDecoration(
          //                                         color: FlutterFlowTheme.of(
          //                                                 context)
          //                                             .secondary,
          //                                         borderRadius:
          //                                             BorderRadius.only(
          //                                           bottomLeft:
          //                                               Radius.circular(0),
          //                                           bottomRight:
          //                                               Radius.circular(0),
          //                                         ),
          //                                       ),
          //                                       child: StreamBuilder(
          //                                         stream: FirebaseFirestore
          //                                             .instance
          //                                             .collectionGroup(
          //                                                 'Foods') // ✅ Fetches all "Foods"
          //                                             .snapshots(),
          //
          //                                         // FirebaseFirestore
          //                                         //     .instance
          //                                         //     .collection(
          //                                         //         'AreaFoodPrices')
          //                                         //     .snapshots(),
          //                                         builder: (context,
          //                                             AsyncSnapshot<
          //                                                     QuerySnapshot>
          //                                                 snapshot) {
          //                                           if (!snapshot.hasData) {
          //                                             return Center(
          //                                                 child:
          //                                                     CircularProgressIndicator());
          //                                           }
          //
          //                                           if (snapshot.data!.docs ==
          //                                                   null ||
          //                                               snapshot.data!.docs
          //                                                   .isEmpty) {
          //                                             return Center(
          //                                               child: Column(
          //                                                 mainAxisAlignment:
          //                                                     MainAxisAlignment
          //                                                         .spaceEvenly,
          //                                                 crossAxisAlignment:
          //                                                     CrossAxisAlignment
          //                                                         .center,
          //                                                 children: [
          //                                                   InkWell(
          //                                                     child:
          //                                                         Image.asset(
          //                                                       'images/final/SecurityCode/MPin.png',
          //                                                       width: 80,
          //                                                       height: 80,
          //                                                     ),
          //                                                     onTap: () {},
          //                                                   ),
          //                                                   Text(
          //                                                     "New Offers are About to Load!",
          //                                                     style: TextStyle(
          //                                                         fontSize: 20,
          //                                                         fontWeight:
          //                                                             FontWeight
          //                                                                 .bold),
          //                                                     textAlign:
          //                                                         TextAlign
          //                                                             .center,
          //                                                   ),
          //                                                   Text(
          //                                                     "Cheers to Smart Buying Plans.",
          //                                                     textAlign:
          //                                                         TextAlign
          //                                                             .center,
          //                                                   ),
          //                                                 ],
          //                                               ),
          //                                             );
          //                                           }
          //
          //                                           return GridView.builder(
          //                                             physics:
          //                                                 NeverScrollableScrollPhysics(),
          //                                             padding:
          //                                                 const EdgeInsets.all(
          //                                                     8.0),
          //                                             gridDelegate:
          //                                                 SliverGridDelegateWithFixedCrossAxisCount(
          //                                               crossAxisCount: 3,
          //                                               crossAxisSpacing: 8.0,
          //                                               mainAxisSpacing: 8.0,
          //                                               childAspectRatio:
          //                                                   1.0, // Adjust this to change item size ratio
          //                                             ),
          //                                             itemCount: snapshot
          //                                                 .data!.docs.length,
          //                                             itemBuilder:
          //                                                 (context, index) {
          //                                               if (index > 2) {
          //                                                 isProductCountExceeds =
          //                                                     true;
          //                                                 return SizedBox
          //                                                     .shrink(); // Return an empty widget for transactions beyond the last three
          //                                               } else {
          //                                                 isProductCountExceeds =
          //                                                     false;
          //                                               }
          //
          //                                               var doc = snapshot
          //                                                   .data!.docs[index];
          //                                               List<
          //                                                   dynamic> imageUrls = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'fileUrls') ??
          //                                                       false
          //                                                   ? doc['fileUrls']
          //                                                   : [];
          //
          //                                               String getTitle = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'title') ??
          //                                                       false
          //                                                   ? doc['title']
          //                                                   : "";
          //
          //                                               String getDescription = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'description') ??
          //                                                       false
          //                                                   ? doc['description']
          //                                                   : "";
          //
          //                                               String getAmount = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'amount') ??
          //                                                       false
          //                                                   ? doc['amount']
          //                                                   : "";
          //
          //                                               String getMinBargainAmount = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'minBargainAmount') ??
          //                                                       false
          //                                                   ? doc[
          //                                                       'minBargainAmount']
          //                                                   : "";
          //
          //                                               String getProdDetails = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'productDetails') ??
          //                                                       false
          //                                                   ? doc[
          //                                                       'productDetails']
          //                                                   : "";
          //
          //                                               String getProdSpec = (doc
          //                                                                   .data()
          //                                                               as Map<
          //                                                                   String,
          //                                                                   dynamic>?)
          //                                                           ?.containsKey(
          //                                                               'productSpec') ??
          //                                                       false
          //                                                   ? doc['productSpec']
          //                                                   : "";
          //
          //                                               // String getAffiliate = (doc
          //                                               //     .data()
          //                                               // as Map<
          //                                               //     String,
          //                                               //     dynamic>?)
          //                                               //     ?.containsKey(
          //                                               //     'affiliateLink') ??
          //                                               //     false
          //                                               //     ? doc['affiliateLink']
          //                                               //     : "";
          //
          //                                               return GridTile(
          //                                                 child:
          //                                                     GestureDetector(
          //                                                   onTap: () {
          //                                                     Navigator.push(
          //                                                       context,
          //                                                       MaterialPageRoute(
          //                                                         builder:
          //                                                             (context) =>
          //                                                                 FoodDetailScreen(
          //                                                           title:
          //                                                               getTitle,
          //                                                           description:
          //                                                               getDescription,
          //                                                           affiliateLink:
          //                                                               "",
          //                                                           prodDetails:
          //                                                               getProdDetails,
          //                                                           prodSpec:
          //                                                               getProdSpec,
          //                                                           imageUrls:
          //                                                               imageUrls,
          //                                                           amount:
          //                                                               getAmount,
          //                                                           userName: ref
          //                                                                   .read(UserDashListProvider.notifier)
          //                                                                   .getUser ??
          //                                                               "",
          //                                                           getAdminType:
          //                                                               ref.read(UserDashListProvider.notifier).getAdminType ??
          //                                                                   "",
          //                                                           minBargainAmount:
          //                                                               getMinBargainAmount,
          //                                                           getHeroTag:
          //                                                               'imageHero$index',
          //                                                         ),
          //                                                       ),
          //                                                     );
          //                                                   },
          //                                                   child: Container(
          //                                                     decoration:
          //                                                         BoxDecoration(
          //                                                       color: FlutterFlowTheme.of(
          //                                                               context)
          //                                                           .secondary
          //                                                           .withOpacity(
          //                                                               0.4),
          //                                                       borderRadius:
          //                                                           BorderRadius
          //                                                               .circular(
          //                                                                   15.0),
          //                                                     ),
          //                                                     child: Column(
          //                                                       mainAxisAlignment:
          //                                                           MainAxisAlignment
          //                                                               .spaceEvenly,
          //                                                       crossAxisAlignment:
          //                                                           CrossAxisAlignment
          //                                                               .start,
          //                                                       children: [
          //                                                         Expanded(
          //                                                           flex: 5,
          //                                                           child:
          //                                                               Container(
          //                                                             // Adjust the height to make it smaller
          //                                                             width:
          //                                                                 100.w,
          //                                                             // Adjust the width to make it smaller
          //                                                             child:
          //                                                                 ClipRRect(
          //                                                               borderRadius: BorderRadius.only(
          //                                                                   topLeft:
          //                                                                       Radius.circular(15),
          //                                                                   topRight: Radius.circular(15),
          //                                                                   bottomLeft: Radius.circular(15),
          //                                                                   bottomRight: Radius.circular(15)),
          //                                                               child: imageUrls.isNotEmpty
          //                                                                   ? Hero(
          //                                                                       tag: 'imageHero$index',
          //                                                                       child: Image.network(
          //                                                                         imageUrls[0],
          //                                                                         fit: BoxFit.fitWidth,
          //                                                                         loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
          //                                                                           if (loadingProgress == null) {
          //                                                                             return child;
          //                                                                           } else {
          //                                                                             return Center(
          //                                                                               child: CircularProgressIndicator(
          //                                                                                 value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
          //                                                                               ),
          //                                                                             );
          //                                                                           }
          //                                                                         },
          //                                                                       ),
          //                                                                     )
          //                                                                   : Container(color: Colors.grey),
          //                                                             ),
          //                                                           ),
          //                                                         ),
          //                                                         Expanded(
          //                                                           flex: 3,
          //                                                           child:
          //                                                               Column(
          //                                                             mainAxisAlignment:
          //                                                                 MainAxisAlignment
          //                                                                     .center,
          //                                                             children: [
          //                                                               Padding(
          //                                                                 padding: const EdgeInsets
          //                                                                     .only(
          //                                                                     left: 8.0),
          //                                                                 child:
          //                                                                     Row(
          //                                                                   mainAxisAlignment:
          //                                                                       MainAxisAlignment.start,
          //                                                                   children: [
          //                                                                     Expanded(
          //                                                                       child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
          //                                                                     ),
          //                                                                   ],
          //                                                                 ),
          //                                                               ),
          //                                                               Padding(
          //                                                                 padding: const EdgeInsets
          //                                                                     .only(
          //                                                                     left: 8.0),
          //                                                                 child:
          //                                                                     Row(
          //                                                                   mainAxisAlignment:
          //                                                                       MainAxisAlignment.start,
          //                                                                   children: [
          //                                                                     Expanded(
          //                                                                       child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
          //                                                                     ),
          //                                                                   ],
          //                                                                 ),
          //                                                               ),
          //                                                             ],
          //                                                           ),
          //                                                         ),
          //                                                       ],
          //                                                     ),
          //                                                   ),
          //                                                 ),
          //                                               );
          //                                             },
          //                                           );
          //                                         },
          //                                       ),
          //                                     ),
          //                                   ),
          //                                 )
          //                               : SliverToBoxAdapter(
          //                                   child: SizedBox(
          //                                   height: 0,
          //                                 )),
          //                           (isShowFoodSection ?? true)
          //                               ? SliverToBoxAdapter(
          //                                   child: Container(
          //                                     height: 10.h,
          //                                     width: 100.w,
          //                                     decoration: BoxDecoration(
          //                                       color:
          //                                           FlutterFlowTheme.of(context)
          //                                               .secondary,
          //                                       borderRadius: BorderRadius.only(
          //                                         bottomLeft:
          //                                             Radius.circular(0),
          //                                         bottomRight:
          //                                             Radius.circular(0),
          //                                       ),
          //                                     ),
          //                                     child: Padding(
          //                                       padding:
          //                                           const EdgeInsets.all(8.0),
          //                                       child: Row(
          //                                         mainAxisAlignment:
          //                                             MainAxisAlignment
          //                                                 .spaceEvenly,
          //                                         children: [
          //                                           Expanded(
          //                                             child: Container(
          //                                               child: ElevatedButton(
          //                                                 style: ElevatedButton
          //                                                     .styleFrom(
          //                                                   backgroundColor:
          //                                                       Constants
          //                                                           .primary,
          //                                                   shape:
          //                                                       RoundedRectangleBorder(
          //                                                     borderRadius:
          //                                                         BorderRadius
          //                                                             .circular(
          //                                                                 10.0), // Set the border radius here
          //                                                   ), // Set the background color here
          //                                                 ),
          //                                                 onPressed: () async {
          //                                                   Navigator.push(
          //                                                     context,
          //                                                     MaterialPageRoute(
          //                                                       builder:
          //                                                           (context) =>
          //                                                               FoodListScreen(
          //                                                         userName: ref
          //                                                                 .read(
          //                                                                     UserDashListProvider.notifier)
          //                                                                 .getUser ??
          //                                                             "",
          //                                                       ),
          //                                                     ),
          //                                                   ).then((value) {
          //                                                     //todo:- below code refresh firebase records automatically when come back to same screen
          //                                                     // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                                   });
          //                                                 },
          //                                                 child: Text('View All',
          //                                                     style: Theme.of(
          //                                                             context)
          //                                                         .textTheme
          //                                                         .bodyMedium
          //                                                         ?.copyWith(
          //                                                             color: Constants
          //                                                                 .secondary,
          //                                                             overflow:
          //                                                                 TextOverflow
          //                                                                     .ellipsis,
          //                                                             fontWeight:
          //                                                                 FontWeight
          //                                                                     .bold)),
          //                                               ),
          //                                               height: 5.h,
          //                                               width: 50.w,
          //                                             ),
          //                                           ),
          //                                         ],
          //                                       ),
          //                                     ),
          //                                   ),
          //                                 )
          //                               : SliverToBoxAdapter(
          //                                   child: SizedBox(
          //                                   height: 0,
          //                                 )),
          //                           makeTitleHeader('Quick Access', false, 1),
          //                           SliverToBoxAdapter(
          //                             child: Container(
          //                               color: Constants.secondary,
          //                               height: 15.h,
          //                               child: Padding(
          //                                 padding: const EdgeInsets.all(0.0),
          //                                 child: Card(
          //                                   color: Constants.secondary,
          //                                   elevation: 0,
          //                                   shape: RoundedRectangleBorder(
          //                                     borderRadius:
          //                                         BorderRadius.circular(0),
          //                                     side: BorderSide(
          //                                         color: Colors.transparent,
          //                                         width: 1),
          //                                   ),
          //                                   child: Row(
          //                                     mainAxisAlignment:
          //                                         MainAxisAlignment.spaceAround,
          //                                     children: [
          //                                       ReusableCertificateSection(
          //                                         getText: "Save ₹",
          //                                         getImage: "saveMoney",
          //                                         getTextColor:
          //                                             FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .primary,
          //                                         getIconColor:
          //                                             Constants.secondary,
          //                                         getBackgroundColor:
          //                                             Constants.primary,
          //                                         onTap: () {
          //                                           // Navigator.push(
          //                                           //   context,
          //                                           //   PageRouteBuilder(
          //                                           //     transitionDuration:
          //                                           //         Duration(milliseconds: 400),
          //                                           //     pageBuilder: (_, __, ___) =>
          //                                           //         SaveMoney(
          //                                           //       getMobile: widget.getMobile,
          //                                           //       getUserName: ref
          //                                           //           .read(UserDashListProvider
          //                                           //               .notifier)
          //                                           //           .getUser,
          //                                           //       getGoalDocId: "",
          //                                           //       getTransData: dataList,
          //                                           //     ),
          //                                           //     transitionsBuilder:
          //                                           //         (_, animation, __, child) {
          //                                           //       return SlideTransition(
          //                                           //         position: Tween<Offset>(
          //                                           //           begin: Offset(0, 1),
          //                                           //           // You can adjust the start position
          //                                           //           end: Offset
          //                                           //               .zero, // You can adjust the end position
          //                                           //         ).animate(animation),
          //                                           //         child: child,
          //                                           //       );
          //                                           //     },
          //                                           //   ),
          //                                           // );
          //
          //                                           Navigator.push(
          //                                             context,
          //                                             PageRouteBuilder(
          //                                               transitionDuration:
          //                                                   Duration(
          //                                                       milliseconds:
          //                                                           400),
          //                                               pageBuilder:
          //                                                   (_, __, ___) =>
          //                                                       GoalsHistory1(
          //                                                 getDocId: ref
          //                                                     .read(
          //                                                         UserDashListProvider
          //                                                             .notifier)
          //                                                     .getDocId,
          //                                                 getMobile:
          //                                                     widget.getMobile,
          //                                                 dataList:
          //                                                     dataList ?? [],
          //                                               ),
          //                                               transitionsBuilder: (_,
          //                                                   animation,
          //                                                   __,
          //                                                   child) {
          //                                                 return SlideTransition(
          //                                                   position:
          //                                                       Tween<Offset>(
          //                                                     begin:
          //                                                         Offset(0, 1),
          //                                                     // You can adjust the start position
          //                                                     end: Offset
          //                                                         .zero, // You can adjust the end position
          //                                                   ).animate(
          //                                                           animation),
          //                                                   child: child,
          //                                                 );
          //                                               },
          //                                             ),
          //                                           );
          //                                         },
          //                                       ),
          //                                       ReusableCertificateSection(
          //                                         getText: "Request",
          //                                         getImage: "moneyReq",
          //                                         getTextColor:
          //                                             FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .primary,
          //                                         getIconColor: Colors.black,
          //                                         getBackgroundColor:
          //                                             Constants.secondary1,
          //                                         onTap: () {
          //                                           double?
          //                                               getFinalGoalAchievedAmount =
          //                                               findGoalAchievedAmount();
          //
          //                                           isSavAmntReq = true;
          //                                           Navigator.push(
          //                                             context,
          //                                             PageRouteBuilder(
          //                                               transitionDuration:
          //                                                   Duration(
          //                                                       milliseconds:
          //                                                           400),
          //                                               pageBuilder:
          //                                                   (_, __, ___) =>
          //                                                       RequestMoney(
          //                                                 getMobile:
          //                                                     widget.getMobile,
          //                                                 isSavingReq:
          //                                                     isSavAmntReq,
          //                                                 getUserName: ref
          //                                                     .read(
          //                                                         UserDashListProvider
          //                                                             .notifier)
          //                                                     .getUser,
          //                                                 getReqAmnt: "",
          //                                                 getGoalDocId: "",
          //                                                 getGoalTargetAmnt: "",
          //                                                 goalAmount:
          //                                                     getFinalGoalAchievedAmount ??
          //                                                         0.0,
          //                                               ),
          //                                               transitionsBuilder: (_,
          //                                                   animation,
          //                                                   __,
          //                                                   child) {
          //                                                 return SlideTransition(
          //                                                   position:
          //                                                       Tween<Offset>(
          //                                                     begin:
          //                                                         Offset(0, 1),
          //                                                     // You can adjust the start position
          //                                                     end: Offset
          //                                                         .zero, // You can adjust the end position
          //                                                   ).animate(
          //                                                           animation),
          //                                                   child: child,
          //                                                 );
          //                                               },
          //                                             ),
          //                                           );
          //                                         },
          //                                       ),
          //                                       ReusableCertificateSection(
          //                                         getText: "Goals",
          //
          //                                         ///Offers
          //                                         getImage: "Goal",
          //                                         getTextColor:
          //                                             FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .primary,
          //                                         getIconColor: Colors.red,
          //                                         getBackgroundColor:
          //                                             Constants.primary,
          //                                         onTap: () async {
          //                                           //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
          //                                           // Tuple2<List<Goal>, String>
          //                                           //     getGoalDetails =
          //                                           //     await updateGoalProvider();
          //
          //                                           Navigator.push(
          //                                             context,
          //                                             PageRouteBuilder(
          //                                               transitionDuration:
          //                                                   Duration(
          //                                                       milliseconds:
          //                                                           400),
          //                                               pageBuilder:
          //                                                   (_, __, ___) =>
          //                                                       GoalsHistory1(
          //                                                 getDocId: ref
          //                                                     .read(
          //                                                         UserDashListProvider
          //                                                             .notifier)
          //                                                     .getDocId,
          //                                                 getMobile:
          //                                                     widget.getMobile,
          //                                                 dataList:
          //                                                     dataList ?? [],
          //                                               ),
          //                                               transitionsBuilder: (_,
          //                                                   animation,
          //                                                   __,
          //                                                   child) {
          //                                                 return SlideTransition(
          //                                                   position:
          //                                                       Tween<Offset>(
          //                                                     begin:
          //                                                         Offset(0, 1),
          //                                                     // You can adjust the start position
          //                                                     end: Offset
          //                                                         .zero, // You can adjust the end position
          //                                                   ).animate(
          //                                                           animation),
          //                                                   child: child,
          //                                                 );
          //                                               },
          //                                             ),
          //                                           );
          //
          //                                           // Navigator.push(
          //                                           //   context,
          //                                           //   MaterialPageRoute(
          //                                           //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
          //                                           //   ),
          //                                           // ).then((value) {
          //                                           //   //todo:- below code refresh firebase records automatically when come back to same screen
          //                                           //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
          //                                           // });
          //                                         },
          //                                       ),
          //                                       ReusableCertificateSection(
          //                                         getText: "Rewards",
          //                                         getImage: "cashback",
          //                                         getTextColor:
          //                                             FlutterFlowTheme.of(
          //                                                     context)
          //                                                 .primary,
          //                                         getIconColor: Colors.black,
          //                                         getBackgroundColor:
          //                                             Constants.secondary1,
          //                                         onTap: () {
          //                                           isSavAmntReq = false;
          //                                           Navigator.push(
          //                                             context,
          //                                             PageRouteBuilder(
          //                                               transitionDuration:
          //                                                   Duration(
          //                                                       milliseconds:
          //                                                           400),
          //                                               pageBuilder:
          //                                                   (_, __, ___) =>
          //                                                       CashbackDetails(
          //                                                 getMobile:
          //                                                     widget.getMobile,
          //                                                 isSavingReq:
          //                                                     isSavAmntReq,
          //                                               ),
          //                                               transitionsBuilder: (_,
          //                                                   animation,
          //                                                   __,
          //                                                   child) {
          //                                                 return SlideTransition(
          //                                                   position:
          //                                                       Tween<Offset>(
          //                                                     begin:
          //                                                         Offset(0, 1),
          //                                                     // You can adjust the start position
          //                                                     end: Offset
          //                                                         .zero, // You can adjust the end position
          //                                                   ).animate(
          //                                                           animation),
          //                                                   child: child,
          //                                                 );
          //                                               },
          //                                             ),
          //                                           );
          //                                         },
          //                                       ),
          //                                       // Add more ReusableCertificateSection widgets as needed
          //                                     ],
          //                                   ),
          //                                 ),
          //                               ),
          //                             ),
          //                           ),
          //                           makeTitleHeader('Shop and Earn', true, 3),
          //                           SliverToBoxAdapter(
          //                             child: LayoutBuilder(
          //                               builder: (context, constraints) {
          //                                 return Stack(
          //                                   alignment: Alignment.center,
          //                                   children: [
          //                                     Center(
          //                                       child: Container(
          //                                         width: double.infinity,
          //                                         // Take full width
          //                                         decoration: BoxDecoration(
          //                                           color: FlutterFlowTheme.of(
          //                                                   context)
          //                                               .secondary,
          //                                           borderRadius:
          //                                               BorderRadius.only(
          //                                             bottomLeft:
          //                                                 Radius.circular(0),
          //                                             bottomRight:
          //                                                 Radius.circular(0),
          //                                           ),
          //                                         ),
          //                                         child: GridView.builder(
          //                                           gridDelegate:
          //                                               SliverGridDelegateWithFixedCrossAxisCount(
          //                                             crossAxisCount: 2,
          //                                             crossAxisSpacing: 10,
          //                                             mainAxisSpacing: 10,
          //                                             childAspectRatio: 3 / 2,
          //                                           ),
          //                                           padding: EdgeInsets.all(10),
          //                                           itemCount: _singleton
          //                                               .shopNowItems.length,
          //                                           itemBuilder:
          //                                               (context, index) {
          //                                             return GestureDetector(
          //                                               child: GridItemWidget(
          //                                                 item: _singleton
          //                                                         .shopNowItems[
          //                                                     index],
          //                                                 showRandomColor:
          //                                                     false,
          //                                               ),
          //                                               onTap: () async {
          //                                                 _isTappingAffiliateApp
          //                                                     .value = true;
          //                                                 String? getApp =
          //                                                     _singleton
          //                                                         .shopNowItems[
          //                                                             index]
          //                                                         .title;
          //                                                 String getUser =
          //                                                     getUserName ?? "";
          //
          //                                                 String? token =
          //                                                     await NotificationService
          //                                                         .getDocumentIDsAndData();
          //
          //                                                 if (await canLaunch(_singleton
          //                                                         .shopNowItems[
          //                                                             index]
          //                                                         .affiliateLink ??
          //                                                     "")) {
          //                                                   await NotificationService
          //                                                       .postNotificationRequest(
          //                                                           token ?? "",
          //                                                           "Hi Admin,\n$getUser Started Shopping 😍😍😍",
          //                                                           "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
          //                                                   _isTappingAffiliateApp
          //                                                       .value = false;
          //                                                   await launch(_singleton
          //                                                           .shopNowItems[
          //                                                               index]
          //                                                           .affiliateLink ??
          //                                                       "");
          //                                                 } else {
          //                                                   Constants.showToast(
          //                                                       "Try Again After SomeTimes",
          //                                                       ToastGravity
          //                                                           .BOTTOM);
          //                                                   _isTappingAffiliateApp
          //                                                       .value = false;
          //                                                   await NotificationService
          //                                                       .postNotificationRequest(
          //                                                           token ?? "",
          //                                                           "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
          //                                                           "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
          //                                                   throw 'Could not launch $getApp';
          //                                                 }
          //                                               },
          //                                             );
          //                                           },
          //                                           physics:
          //                                               NeverScrollableScrollPhysics(),
          //                                           shrinkWrap:
          //                                               true, // Important to wrap in a SingleChildScrollView
          //                                         ),
          //                                       ),
          //                                     ),
          //                                     ValueListenableBuilder<bool>(
          //                                       valueListenable:
          //                                           _isTappingAffiliateApp,
          //                                       builder: (context, isCreating,
          //                                           child) {
          //                                         if (isCreating) {
          //                                           return Container(
          //                                             // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
          //                                             child: Center(
          //                                               child:
          //                                                   CircularProgressIndicator(),
          //                                             ),
          //                                           );
          //                                         }
          //                                         return SizedBox.shrink();
          //                                       },
          //                                     ),
          //                                   ],
          //                                 );
          //                               },
          //                             ),
          //                           ),
          //                           makeTitleHeader('News For You', false, 3),
          //                           SliverToBoxAdapter(
          //                             child: Container(
          //                               height: 40.h,
          //                               width: 100.w,
          //                               decoration: BoxDecoration(
          //                                 color: FlutterFlowTheme.of(context)
          //                                     .secondary,
          //                                 borderRadius: BorderRadius.only(
          //                                   bottomLeft: Radius.circular(0),
          //                                   bottomRight: Radius.circular(0),
          //                                 ),
          //                               ),
          //                               child: SingleChildScrollView(
          //                                 child: Column(
          //                                   children: [
          //                                     Container(
          //                                       height: 10.h,
          //                                       width: 90.w,
          //                                       decoration: BoxDecoration(
          //                                         color: FlutterFlowTheme.of(
          //                                                 context)
          //                                             .secondary1
          //                                             .withOpacity(0.6),
          //                                         borderRadius:
          //                                             BorderRadius.all(
          //                                                 Radius.circular(
          //                                                     10.0)),
          //                                       ),
          //                                       child: Stack(children: [
          //                                         Positioned.fill(
          //                                           child: Align(
          //                                             alignment:
          //                                                 Alignment.bottomLeft,
          //                                             child: Image.asset(
          //                                               'images/final/Dashboard/addvertisement1.png',
          //                                             ),
          //                                           ),
          //
          //                                           // Add more Positioned widgets for additional images
          //                                         ),
          //                                         Positioned.fill(
          //                                           child: Padding(
          //                                             padding:
          //                                                 const EdgeInsets.only(
          //                                                     top: 0.0,
          //                                                     right: 10),
          //                                             child: Align(
          //                                               alignment: Alignment
          //                                                   .centerRight,
          //                                               child: Container(
          //                                                 height: 10.h,
          //                                                 width: 50.w,
          //                                                 child: Column(
          //                                                   mainAxisAlignment:
          //                                                       MainAxisAlignment
          //                                                           .spaceAround,
          //                                                   children: [
          //                                                     Text(
          //                                                         "Get Instant",
          //                                                         style: Theme.of(
          //                                                                 context)
          //                                                             .textTheme
          //                                                             .titleLarge
          //                                                             ?.copyWith(
          //                                                                 color: Constants
          //                                                                     .secondary,
          //                                                                 fontWeight:
          //                                                                     FontWeight.bold)),
          //                                                     Text("Cashback!",
          //                                                         style: Theme.of(
          //                                                                 context)
          //                                                             .textTheme
          //                                                             .titleLarge
          //                                                             ?.copyWith(
          //                                                                 color: Constants
          //                                                                     .secondary,
          //                                                                 fontWeight:
          //                                                                     FontWeight.bold)),
          //                                                   ],
          //                                                 ),
          //                                               ),
          //                                             ),
          //                                           ),
          //
          //                                           // Add more Positioned widgets for additional images
          //                                         ),
          //                                       ]),
          //                                     ),
          //                                     Container(
          //                                       height: 20.h,
          //                                       width: 90.w,
          //                                       child: Stack(children: [
          //                                         Positioned.fill(
          //                                           child: Padding(
          //                                             padding:
          //                                                 const EdgeInsets.only(
          //                                               top: 10.0,
          //                                             ),
          //                                             child: Align(
          //                                               alignment:
          //                                                   Alignment.topLeft,
          //                                               child: Text(
          //                                                   "Invite Friends & Earn",
          //                                                   style: Theme.of(
          //                                                           context)
          //                                                       .textTheme
          //                                                       .titleSmall
          //                                                       ?.copyWith(
          //                                                           color: Constants
          //                                                               .primary,
          //                                                           fontWeight:
          //                                                               FontWeight
          //                                                                   .bold)),
          //                                             ),
          //                                           ),
          //
          //                                           // Add more Positioned widgets for additional images
          //                                         ),
          //                                         Positioned.fill(
          //                                           child: Padding(
          //                                             padding:
          //                                                 const EdgeInsets.only(
          //                                               bottom: 10.0,
          //                                             ),
          //                                             child: Align(
          //                                               alignment: Alignment
          //                                                   .centerLeft,
          //                                               child: RichText(
          //                                                 text: TextSpan(
          //                                                   text:
          //                                                       "For every user you invite and signs up, you can Earn Upto ",
          //                                                   style: Theme.of(
          //                                                           context)
          //                                                       .textTheme
          //                                                       .titleSmall
          //                                                       ?.copyWith(
          //                                                           color: Constants
          //                                                               .primary,
          //                                                           fontWeight:
          //                                                               FontWeight
          //                                                                   .bold),
          //                                                   children: [
          //                                                     TextSpan(
          //                                                       text: "₹100",
          //                                                       style:
          //                                                           TextStyle(
          //                                                         fontWeight:
          //                                                             FontWeight
          //                                                                 .bold,
          //                                                       ),
          //                                                     ),
          //                                                     TextSpan(
          //                                                       text: ".",
          //                                                     ),
          //                                                   ],
          //                                                 ),
          //                                               ),
          //                                             ),
          //                                           ),
          //
          //                                           // Add more Positioned widgets for additional images
          //                                         ),
          //                                         Positioned.fill(
          //                                           child: Padding(
          //                                             padding:
          //                                                 const EdgeInsets.only(
          //                                               top: 10.0,
          //                                             ),
          //                                             child: Align(
          //                                               alignment: Alignment
          //                                                   .bottomLeft,
          //                                               child: InkWell(
          //                                                 splashColor:
          //                                                     FlutterFlowTheme.of(
          //                                                             context)
          //                                                         .secondary,
          //                                                 onTap: () {
          //                                                   shareApp(context);
          //                                                 },
          //                                                 child: Container(
          //                                                   height: 5.h,
          //                                                   width: 40.w,
          //                                                   decoration:
          //                                                       BoxDecoration(
          //                                                     color: FlutterFlowTheme
          //                                                             .of(context)
          //                                                         .primary,
          //                                                     borderRadius: BorderRadius
          //                                                         .all(Radius
          //                                                             .circular(
          //                                                                 10.0)),
          //                                                   ),
          //                                                   child: Center(
          //                                                     child: Text(
          //                                                         "Share",
          //                                                         style: Theme.of(
          //                                                                 context)
          //                                                             .textTheme
          //                                                             .bodyMedium
          //                                                             ?.copyWith(
          //                                                                 color: Constants
          //                                                                     .secondary,
          //                                                                 overflow: TextOverflow
          //                                                                     .ellipsis,
          //                                                                 fontWeight:
          //                                                                     FontWeight.bold)),
          //                                                   ),
          //                                                 ),
          //                                               ),
          //                                             ),
          //                                           ),
          //
          //                                           // Add more Positioned widgets for additional images
          //                                         ),
          //                                       ]),
          //                                     ),
          //                                   ],
          //                                 ),
          //                               ),
          //                             ),
          //                           ),
          //                         ],
          //                       ),
          //                     ),
          //                   ),
          //                 ],
          //               ),
          //             );
          //           },
          //         ),
          //       ),
          //     ),
          //
          //     //---
          //   ],
          // ),
        );
      } else if (((ref.read(UserDashListProvider.notifier).getReffererType ??
              "0") ==
          "1")) {
        //todo:- as of now showing same ui for both meat user and food user

        if ((ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
            "1") {
          _selectedOptionCategory.value = 0;
        } else {
          _selectedOptionCategory.value = 1;
        }

        //todo:- meat user ui

        //todo:- check if user's refferer is meat shop owner and owner account still available, if so show owner pricing details instead maaka pricing details

        String documentId = Constants.getRefferer ?? "9941445471";
        DocumentReference docRef = FirebaseFirestore.instance
            .collection('AreaMeatPrices')
            .doc(documentId);

        try {
          DocumentSnapshot docSnapshot = await docRef.get();

          if (docSnapshot.exists &&
              docSnapshot.data() is Map<String, dynamic>) {
            Map<String, dynamic> data =
                docSnapshot.data() as Map<String, dynamic>;

            if (data.containsKey(documentId)) {
              isReffererPricingPresent = true;
              return Container(
                color: Constants.secondary,
                height: 100.h,
                child: SingleChildScrollView(
                  child: Column(
                    children: [


                      //todo:- showing call option for meat executives customer
                      Container(
                          alignment: Alignment.centerLeft,
                          color: Constants.secondary,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                top: 10,
                                left: 8.0,
                                right: 8.0),
                            child: Row(
                              mainAxisAlignment:
                              MainAxisAlignment
                                  .spaceBetween,
                              children: [
                                Expanded(
                                  child: Text(
                                    "We'll buy Groceries for you.", //"Choose Your Favourite!",

                                    // style: Theme.of(context).textTheme.titleLarge,
                                    style: TextStyle(
                                        fontFamily:
                                        'Encode Sans Condensed',
                                        // Apply Open Sans only for this Text widget
                                        fontSize: 18,
                                        fontWeight:
                                        FontWeight.bold,
                                        letterSpacing: 2.5),
                                    maxLines: 2,
                                  ),
                                ),

                              ],
                            ),
                          )),
                      Container(
                          alignment: Alignment.centerLeft,
                          color: Constants.secondary,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                top: 0,
                                left: 8.0,
                                right: 8.0,
                                bottom: 10),
                            child: Row(
                              mainAxisAlignment:
                              MainAxisAlignment
                                  .spaceBetween,
                              children: [
                                Expanded(
                                  child: Text(
                                    "Call us To Share your list to buy.", //"Choose Your Favourite!",

                                    // style: Theme.of(context).textTheme.titleLarge,
                                    style: TextStyle(
                                        fontFamily:
                                        'Encode Sans Condensed',
                                        // Apply Open Sans only for this Text widget
                                        fontSize: 11,
                                        fontWeight:
                                        FontWeight.bold,
                                        letterSpacing: 2.5),
                                    maxLines: 2,
                                  ),
                                ),

                              ],
                            ),
                          )),

                      Padding(
                        padding: const EdgeInsets.only(left: 8.0,right: 8.0,top: 10,bottom: 10),
                        child: Stack(
                          children: [
                            Container(
                              height: 60,
                              // width: 340,
                              decoration: BoxDecoration(
                                color: Constants
                                    .colorFoodCSecondaryWhite,
                                borderRadius: BorderRadius.circular(40),

                                boxShadow: [
                                  BoxShadow(
                                    color:
                                    Constants.colorFoodCSecondaryGrey2,
                                    // Light shadow effect
                                    blurRadius:
                                    10,
                                    spreadRadius:
                                    2,
                                    offset: Offset(
                                        0,
                                        4), // Slight downward shadow
                                  ),
                                ],
                                border:
                                Border.all(
                                  color: Constants
                                      .colorFoodCPrimary
                                  ,
                                  // Change border color here
                                  width:
                                  0.2, // Border width
                                ),

                              ),
                              alignment: Alignment.center,
                              child: Padding(

                                padding: const EdgeInsets.only(left:40.0),
                                child: const Text(
                                  '>>> Swipe to Call. Pay Only for Delivery. >>>',
                                  style: TextStyle(color: Colors.black, fontSize: 11,fontFamily:
                                  'Encode Sans Condensed',letterSpacing: 2),
                                ),
                              ),
                            ),
                            ValueListenableBuilder<double>(
                              valueListenable: sliderPosition,
                              builder: (context, value, _) {
                                return Positioned(
                                  left: value,
                                  child: GestureDetector(
                                    onHorizontalDragUpdate: (details) {
                                      final newValue = sliderPosition.value + details.delta.dx;
                                      if (newValue >= 0 && newValue <= maxSlideWidth) {
                                        sliderPosition.value = newValue;

                                        // Trigger call at halfway point
                                        if (newValue >= maxSlideWidth / 2 && !called.value) {
                                          called.value = true;
                                          _launchDialer();
                                          Future.delayed(const Duration(seconds: 1), _resetSlider);
                                        }
                                      }
                                    },
                                    onHorizontalDragEnd: (details) {
                                      if (sliderPosition.value >= maxSlideWidth && !called.value) {
                                        called.value = true;
                                        _launchDialer();
                                        Future.delayed(const Duration(seconds: 1), _resetSlider);
                                      } else {
                                        _resetSlider();
                                      }
                                    },
                                    child: Container(
                                      width: 60,
                                      height: 60,
                                      decoration: BoxDecoration(
                                        color: Constants.colorMeatCPrimary,
                                        shape: BoxShape.circle,
                                      ),
                                      child: const Icon(Icons.phone_in_talk_rounded, color: Colors.white),
                                    ),
                                  ),
                                );
                              },
                            ),
                          ],
                        ),
                      ),


                      Padding(
                        padding: const EdgeInsets.only(left: 10, right: 10),
                        child: Container(
                          color: Colors.white,
                          height: 10.h,
                          child: Center(
                            child: Container(
                              height: 5.h,
                              child: ValueListenableBuilder<int>(
                                valueListenable: _selectedOptionCategory,
                                builder: (context, selectedIndex, child) {
                                  return ListView.builder(
                                    scrollDirection: Axis.horizontal,
                                    itemCount: _ToggleOptionCategory.length,
                                    itemBuilder: (context, index) {
                                      String category = _ToggleOptionCategory
                                          .values
                                          .toList()[index];
                                      return GestureDetector(
                                        onTap: () {
                                          _selectedOptionCategory.value = index;
                                        },
                                        child: Container(
                                          width: index == selectedIndex
                                              ? 40.w
                                              : 30.w,
                                          padding: const EdgeInsets.symmetric(
                                              horizontal: 16, vertical: 8),
                                          margin: const EdgeInsets.symmetric(
                                              horizontal: 5),
                                          decoration: BoxDecoration(
                                            // color: index == selectedIndex
                                            //     ? Constants.colorFoodCPrimary
                                            //     : Colors.grey[200],
                                            border: Border.all(
                                              color: index == selectedIndex
                                                  ? Constants.colorFoodCPrimary
                                                  : Colors.grey[200] ??
                                                      Colors.grey,
                                              // Change border color here
                                              width: 2, // Border width
                                            ),
                                            borderRadius:
                                                BorderRadius.circular(15),
                                          ),
                                          child: Center(
                                            child: Container(
                                              width: 40.w,
                                              child: Text(
                                                textAlign: TextAlign.center,
                                                category,
                                                style: TextStyle(
                                                  color: index == selectedIndex
                                                      ? Constants
                                                          .colorMeatCPrimary
                                                      : Colors.black,
                                                  fontWeight: FontWeight.bold,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                },
                              ),
                            ),
                          ),
                        ),
                      ),
                      ValueListenableBuilder<int>(
                        valueListenable: _selectedOptionCategory,
                        builder: (context, selectedIndex, child) {
                          if (selectedIndex == 0) {
//meat screen
                            return Container(
                              height: 100.h,
                              // Replace with your overlay color
                              child: RefreshIndicator(
                                onRefresh: _handleRefresh,
                                child: Column(
                                  children: [
                                    Container(
                                      height: 100.h,
                                      child: CustomScrollView(
                                        // physics: portionBHeight == MediaQuery.of(context).size.height
                                        //     ? AlwaysScrollableScrollPhysics()
                                        //     : NeverScrollableScrollPhysics(),
                                        // physics: NeverScrollableScrollPhysics(),
                                        slivers: [



                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                                  child: Container(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      color:
                                                          Constants.secondary,
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 15,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .spaceBetween,
                                                          children: [
                                                            Expanded(
                                                              child: Text(
                                                                "Fresh Chicken & Mutton,\nPure Delight!",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 20,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines: 2,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      )),
                                                )
                                              : SliverToBoxAdapter(
                                                  child: SizedBox(
                                                  height: 0,
                                                )),

                                          //--converting meat design

                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child: Padding(
                                                      padding:
                                                          const EdgeInsets.all(
                                                              0.0),
                                                      child: Container(
                                                        color: Colors.white,
                                                        height: 10.h,
                                                        child: Center(
                                                          child: Container(
                                                            height: 5.h,
                                                            child:
                                                                ValueListenableBuilder<
                                                                    int>(
                                                              valueListenable:
                                                                  _selectedMeatCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                return ListView
                                                                    .builder(
                                                                  scrollDirection:
                                                                      Axis.horizontal,
                                                                  itemCount:
                                                                      _categoryMeatMapping
                                                                          .length,
                                                                  itemBuilder:
                                                                      (context,
                                                                          index) {
                                                                    String
                                                                        category =
                                                                        _categoryMeatMapping
                                                                            .values
                                                                            .toList()[index];
                                                                    return GestureDetector(
                                                                      onTap:
                                                                          () {
                                                                        _selectedMeatCategoryIndex.value =
                                                                            index;
                                                                        // _searchQuery
                                                                        //     .value = "";
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        padding: const EdgeInsets
                                                                            .symmetric(
                                                                            horizontal:
                                                                                16,
                                                                            vertical:
                                                                                8),
                                                                        margin: const EdgeInsets
                                                                            .symmetric(
                                                                            horizontal:
                                                                                5),
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          // color: index == selectedIndex
                                                                          //     ? Constants.colorFoodCPrimary
                                                                          //     : Colors.grey[200],
                                                                          border:
                                                                              Border.all(
                                                                            color: index == selectedIndex
                                                                                ? Colors.transparent
                                                                                : Colors.grey[200] ?? Colors.grey,
                                                                            // Change border color here
                                                                            width:
                                                                                2, // Border width
                                                                          ),

                                                                          gradient:
                                                                              LinearGradient(
                                                                            colors: index == selectedIndex
                                                                                ? [
                                                                                    Constants.colorMeatCPrimary,
                                                                                    Constants.secondary4
                                                                                  ]
                                                                                : [
                                                                                    Colors.transparent ?? Colors.grey,
                                                                                    Colors.transparent ?? Colors.grey
                                                                                  ],
                                                                            begin:
                                                                                Alignment.topLeft,
                                                                            end:
                                                                                Alignment.bottomRight,
                                                                          ),
                                                                          borderRadius:
                                                                              BorderRadius.circular(15),
                                                                          // border: Border.all(
                                                                          //     color: Colors.grey),
                                                                          // Light gray background
                                                                          // Smooth corners
                                                                          // boxShadow: [
                                                                          //   BoxShadow(
                                                                          //     color: Colors.black.withOpacity(
                                                                          //         0.1), // Light shadow effect
                                                                          //     blurRadius: 10,
                                                                          //     spreadRadius: 2,
                                                                          //     offset: Offset(0,
                                                                          //         4), // Slight downward shadow
                                                                          //   ),
                                                                          // ],
                                                                        ),
                                                                        child:
                                                                            Center(
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                40.w,
                                                                            child:
                                                                                Text(
                                                                              textAlign: TextAlign.center,
                                                                              category,
                                                                              style: TextStyle(
                                                                                color: index == selectedIndex ? Colors.white : Colors.black,
                                                                                fontWeight: FontWeight.bold,
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                              },
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                              : SliverToBoxAdapter(
                                                  child: SizedBox(
                                                  height: 0,
                                                )),

                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                                  child: Container(
                                                    alignment:
                                                        Alignment.topCenter,
                                                    height: 100.h,
                                                    width: 100.w,
                                                    decoration: BoxDecoration(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .secondary,
                                                      borderRadius:
                                                          BorderRadius.only(
                                                        bottomLeft:
                                                            Radius.circular(
                                                                0),
                                                        bottomRight:
                                                            Radius.circular(
                                                                0),
                                                      ),
                                                    ),
                                                    child: Padding(
                                                      padding:
                                                          const EdgeInsets
                                                              .only(
                                                              top: 10.0),
                                                      child:
                                                          ValueListenableBuilder<
                                                              int>(
                                                        valueListenable:
                                                            _selectedMeatCategoryIndex,
                                                        builder: (context,
                                                            selectedIndex,
                                                            child) {
                                                          // return ListView
                                                          //     .builder(
                                                          //   scrollDirection:
                                                          //       Axis.horizontal,
                                                          //   itemCount: selectedIndex ==
                                                          //           0
                                                          //       ? chickenMeatTypes
                                                          //           .length
                                                          //       : muttonMeatTypes
                                                          //           .length,
                                                          //   padding:
                                                          //       const EdgeInsets
                                                          //           .symmetric(
                                                          //           horizontal:
                                                          //               10),
                                                          //   itemBuilder:
                                                          //       (context,
                                                          //           index) {
                                                          //     return Center(
                                                          //       child:
                                                          //           Padding(
                                                          //         padding:
                                                          //             const EdgeInsets
                                                          //                 .all(
                                                          //                 10.0),
                                                          //         child: GestureDetector(
                                                          //             onTap: () {
                                                          //               if (selectedIndex ==
                                                          //                   0) {
                                                          //                 Navigator.push(
                                                          //                   context,
                                                          //                   MaterialPageRoute(
                                                          //                     builder: (context) => DetailScreen(title: chickenMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                          //                   ),
                                                          //                 );
                                                          //               } else {
                                                          //                 Navigator.push(
                                                          //                   context,
                                                          //                   MaterialPageRoute(
                                                          //                     builder: (context) => DetailScreen(title: muttonMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                          //                   ),
                                                          //                 );
                                                          //               }
                                                          //             },
                                                          //             child: Container(
                                                          //               width:
                                                          //                   100.w / 2.5,
                                                          //               height:
                                                          //                   220,
                                                          //               decoration:
                                                          //                   BoxDecoration(
                                                          //                 color:
                                                          //                     Colors.white,
                                                          //                 borderRadius:
                                                          //                     BorderRadius.circular(12),
                                                          //                 boxShadow: [
                                                          //                   BoxShadow(
                                                          //                     color: Colors.grey.withOpacity(0.4),
                                                          //                     blurRadius: 8,
                                                          //                     spreadRadius: 2,
                                                          //                     offset: Offset(2, 4),
                                                          //                   )
                                                          //                 ],
                                                          //               ),
                                                          //               child:
                                                          //                   Stack(
                                                          //                 children: [
                                                          //                   Padding(
                                                          //                     padding: const EdgeInsets.all(8.0),
                                                          //                     child: Column(
                                                          //                       mainAxisAlignment: MainAxisAlignment.end,
                                                          //                       children: [
                                                          //                         Expanded(
                                                          //                           child: Container(
                                                          //                             color: Colors.white,
                                                          //                             child: Center(
                                                          //                                 child: Hero(
                                                          //                               tag: 'imageHerodsfsad',
                                                          //                               child: Image.asset(
                                                          //                                 selectedIndex == 0 ? chickenMeatTypes[0].item2 : muttonMeatTypes[0].item2,
                                                          //                                 height: 80,
                                                          //                                 width: 80,
                                                          //                                 fit: BoxFit.cover,
                                                          //                               ),
                                                          //                             )),
                                                          //                           ),
                                                          //                         ),
                                                          //                         Text(
                                                          //                           selectedIndex == 0 ? chickenMeatTypes[index].item1 ?? "" : muttonMeatTypes[index].item1 ?? "",
                                                          //                           style: TextStyle(
                                                          //                             color: Colors.black,
                                                          //                             fontSize: 18,
                                                          //                             fontWeight: FontWeight.w900,
                                                          //                             fontFamily: 'Encode Sans Condensed',
                                                          //                           ),
                                                          //                         ),
                                                          //                       ],
                                                          //                     ),
                                                          //                   ),
                                                          //                   // Heart Icon in Top-Right
                                                          //                   Positioned(
                                                          //                     top: 8,
                                                          //                     right: 8,
                                                          //                     child: Container(
                                                          //                       decoration: BoxDecoration(
                                                          //                         shape: BoxShape.circle,
                                                          //                         border: Border.all(color: Colors.transparent, width: 2),
                                                          //                         color: Colors.white.withOpacity(0.1),
                                                          //                       ),
                                                          //                       padding: EdgeInsets.all(4),
                                                          //                       child: Icon(
                                                          //                         Icons.favorite,
                                                          //                         color: Colors.redAccent,
                                                          //                         size: 20,
                                                          //                       ),
                                                          //                     ),
                                                          //                   ),
                                                          //                 ],
                                                          //               ),
                                                          //             )),
                                                          //       ),
                                                          //     );
                                                          //   },
                                                          // );

                                                          return GridView.builder(
                                                            itemCount: selectedIndex == 0
                                                                ? chickenMeatTypes.length
                                                                : muttonMeatTypes.length,
                                                            padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                                                            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                                                              crossAxisCount: 2, // 2 items per row
                                                              crossAxisSpacing: 10,
                                                              mainAxisSpacing: 10,
                                                              childAspectRatio: 0.9, // Adjust height/width ratio as needed
                                                            ),
                                                            shrinkWrap: true,
                                                            physics: NeverScrollableScrollPhysics(), // Remove this if you want scrolling
                                                            itemBuilder: (context, index) {
                                                              return GestureDetector(
                                                                onTap: () {
                                                                  Navigator.push(
                                                                    context,
                                                                    MaterialPageRoute(
                                                                      builder: (context) => DetailScreen(
                                                                        title: selectedIndex == 0
                                                                            ? chickenMeatTypes[index].item3 ?? ""
                                                                            : muttonMeatTypes[index].item3 ?? "",
                                                                        isReffererPricingPresent: isReffererPricingPresent ?? false,
                                                                      ),
                                                                    ),
                                                                  );
                                                                },
                                                                child: Padding(
                                                                  padding: const EdgeInsets.all(8.0),
                                                                  child: Container(
                                                                    decoration: BoxDecoration(
                                                                      color: Colors.white,
                                                                      borderRadius: BorderRadius.circular(12),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors.grey.withOpacity(0.4),
                                                                          blurRadius: 8,
                                                                          spreadRadius: 2,
                                                                          offset: Offset(2, 4),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child: Stack(
                                                                      children: [
                                                                        Padding(
                                                                          padding: const EdgeInsets.all(8.0),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  color: Colors.white,
                                                                                  child: Center(
                                                                                    child: Hero(
                                                                                      tag: 'imageHerodsfsad',
                                                                                      child: Image.asset(
                                                                                        selectedIndex == 0
                                                                                            ? chickenMeatTypes[index].item2
                                                                                            : muttonMeatTypes[index].item2,
                                                                                        height: 80,
                                                                                        width: 80,
                                                                                        fit: BoxFit.cover,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              Text(
                                                                                selectedIndex == 0
                                                                                    ? chickenMeatTypes[index].item1 ?? ""
                                                                                    : muttonMeatTypes[index].item1 ?? "",
                                                                                style: TextStyle(
                                                                                  color: Colors.black,
                                                                                  fontSize: 18,
                                                                                  fontWeight: FontWeight.w900,
                                                                                  fontFamily: 'Encode Sans Condensed',
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        Positioned(
                                                                          top: 8,
                                                                          right: 8,
                                                                          child: Container(
                                                                            decoration: BoxDecoration(
                                                                              shape: BoxShape.circle,
                                                                              border: Border.all(color: Colors.transparent, width: 2),
                                                                              color: Colors.white.withOpacity(0.1),
                                                                            ),
                                                                            padding: EdgeInsets.all(4),
                                                                            child: Icon(
                                                                              Icons.favorite,
                                                                              color: Colors.redAccent,
                                                                              size: 20,
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                          );

                                                        },
                                                      ),
                                                    ),

                                                    //  ListView.builder(
                                                    //
                                                    //   scrollDirection: Axis.vertical,
                                                    //   itemCount: _categories.length,
                                                    //   itemBuilder: (context, index) {
                                                    //     String category =
                                                    //         _categories[index];
                                                    //     String categoryId =
                                                    //         _categoryMapping.entries
                                                    //             .firstWhere((element) =>
                                                    //                 element.value ==
                                                    //                 category)
                                                    //             .key;
                                                    //
                                                    //      categoryProducts =
                                                    //         ref
                                                    //             .read(
                                                    //                 adminDashListProvider
                                                    //                     .notifier)
                                                    //             .foodList
                                                    //             ?.where((product) =>
                                                    //                 product
                                                    //                     .productCategory ==
                                                    //                 categoryId)
                                                    //             .toList();
                                                    //
                                                    //     if (categoryProducts == null) {
                                                    //       return Container();
                                                    //     }
                                                    //
                                                    //     return Column(
                                                    //       crossAxisAlignment:
                                                    //           CrossAxisAlignment.start,
                                                    //       children: [
                                                    //         (categoryProducts ?? []).isEmpty
                                                    //             ? Container()
                                                    //             : Column(
                                                    //                 crossAxisAlignment:
                                                    //                     CrossAxisAlignment
                                                    //                         .start,
                                                    //                 children: [
                                                    //                   Padding(
                                                    //                     padding:
                                                    //                         const EdgeInsets
                                                    //                             .only(
                                                    //                             left:
                                                    //                                 8.0),
                                                    //                     child: Text(
                                                    //                         category,
                                                    //                         style: Theme.of(
                                                    //                                 context)
                                                    //                             .textTheme
                                                    //                             .titleLarge),
                                                    //                   ),
                                                    //                   SizedBox(
                                                    //                     height: 30.h,
                                                    //                     // Set static height for the GridView
                                                    //                     child: GridView
                                                    //                         .builder(
                                                    //                       shrinkWrap:
                                                    //                           true,
                                                    //                       physics:
                                                    //                           NeverScrollableScrollPhysics(),
                                                    //                       padding:
                                                    //                           const EdgeInsets
                                                    //                               .all(
                                                    //                               8.0),
                                                    //                       gridDelegate:
                                                    //                           SliverGridDelegateWithFixedCrossAxisCount(
                                                    //                         crossAxisCount:
                                                    //                             2,
                                                    //                         crossAxisSpacing:
                                                    //                             8.0,
                                                    //                         mainAxisSpacing:
                                                    //                             8.0,
                                                    //                         childAspectRatio:
                                                    //                             0.8, // Adjust ratio as needed
                                                    //                       ),
                                                    //                       itemCount:
                                                    //                           categoryProducts
                                                    //                               ?.length,
                                                    //                       itemBuilder:
                                                    //                           (context,
                                                    //                               index) {
                                                    //                         FoodList?
                                                    //                             product =
                                                    //                             categoryProducts?[
                                                    //                                 index];
                                                    //
                                                    //                         String?
                                                    //                             getAmount =
                                                    //                             product?.amount ??
                                                    //                                 "";
                                                    //                         String?
                                                    //                             getTitle =
                                                    //                             product?.title ??
                                                    //                                 "";
                                                    //                         String?
                                                    //                             getDocId =
                                                    //                             product?.docID ??
                                                    //                                 "";
                                                    //                         String?
                                                    //                             getDescription =
                                                    //                             product?.description ??
                                                    //                                 "";
                                                    //                         final List<
                                                    //                                 dynamic>
                                                    //                             imageUrls =
                                                    //                             (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A"))
                                                    //                                 .fileUrls ?? [];
                                                    //
                                                    //                         return SizedBox(
                                                    //                           height: 250,
                                                    //                           // Set a fixed height for each grid item
                                                    //                           child:
                                                    //                               GridTile(
                                                    //                             child:
                                                    //                                 GestureDetector(
                                                    //                               onTap:
                                                    //                                   () {
                                                    //                                 Navigator
                                                    //                                     .push(
                                                    //                                   context,
                                                    //                                   MaterialPageRoute(
                                                    //                                     builder: (context) => FoodDetailScreen(
                                                    //                                       title: getTitle,
                                                    //                                       description: getDescription,
                                                    //                                       affiliateLink: "",
                                                    //                                       prodDetails: "getProdDetails",
                                                    //                                       prodSpec: "getProdSpec",
                                                    //                                       imageUrls: imageUrls,
                                                    //                                       amount: getAmount,
                                                    //                                       userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                    //                                       getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                    //                                       minBargainAmount: "",
                                                    //                                       getHeroTag: 'imageHero$index',
                                                    //                                     ),
                                                    //                                   ),
                                                    //                                 );
                                                    //                               },
                                                    //                               child:
                                                    //                                   Container(
                                                    //                                 decoration:
                                                    //                                     BoxDecoration(
                                                    //                                   color:
                                                    //                                       _singleton.lighten(
                                                    //                                     Constants.secondary2,
                                                    //                                     amount: _singleton.generateRandomColorDouble(),
                                                    //                                   ),
                                                    //                                   borderRadius:
                                                    //                                       BorderRadius.circular(15.0),
                                                    //                                 ),
                                                    //                                 child:
                                                    //                                     Column(
                                                    //                                   mainAxisAlignment:
                                                    //                                       MainAxisAlignment.spaceBetween,
                                                    //                                   crossAxisAlignment:
                                                    //                                       CrossAxisAlignment.start,
                                                    //                                   children: [
                                                    //                                     Expanded(
                                                    //                                       flex: 3,
                                                    //                                       child: ClipRRect(
                                                    //                                         borderRadius: const BorderRadius.only(
                                                    //                                           topLeft: Radius.circular(15),
                                                    //                                           topRight: Radius.circular(15),
                                                    //                                         ),
                                                    //                                         child:  (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls.isNotEmpty
                                                    //                                             ? Hero(
                                                    //                                                 tag: 'imageHero$index$getTitle$getAmount',
                                                    //                                                 child: Image.network(
                                                    //                                                   (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0],
                                                    //                                                   fit: BoxFit.cover,
                                                    //                                                   width: double.infinity,
                                                    //                                                   height: double.infinity,
                                                    //                                                   loadingBuilder: (context, child, loadingProgress) {
                                                    //                                                     if (loadingProgress == null) return child;
                                                    //                                                     return Center(
                                                    //                                                       child: CircularProgressIndicator(
                                                    //                                                         value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                    //                                                       ),
                                                    //                                                     );
                                                    //                                                   },
                                                    //                                                 ),
                                                    //                                               )
                                                    //                                             : Container(color: Colors.grey),
                                                    //                                       ),
                                                    //                                     ),
                                                    //                                     Padding(
                                                    //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                                                    //                                       child: Text(
                                                    //                                         product?.title ?? "",
                                                    //                                         style: Theme.of(context).textTheme.titleSmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                                    //                                       ),
                                                    //                                     ),
                                                    //                                     Padding(
                                                    //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 2.0),
                                                    //                                       child: Text(
                                                    //                                         "Rs. $getAmount",
                                                    //                                         style: Theme.of(context).textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                                    //                                       ),
                                                    //                                     ),
                                                    //                                     Visibility(
                                                    //                                       visible: Constants.isAdmin,
                                                    //                                       child: Padding(
                                                    //                                         padding: const EdgeInsets.only(top: 8.0),
                                                    //                                         child: Row(
                                                    //                                           children: [
                                                    //                                             IconButton(
                                                    //                                               icon: Icon(Icons.delete, color: Constants.secondary3),
                                                    //                                               onPressed: () {
                                                    //                                                 // Delete action
                                                    //                                               },
                                                    //                                             ),
                                                    //                                             IconButton(
                                                    //                                               onPressed: () async {
                                                    //                                                 _singleton.showAlertDialog(
                                                    //                                                   context: context,
                                                    //                                                   title: "Are you sure?",
                                                    //                                                   message: "Do you want to Post Notification for this Product?",
                                                    //                                                   onCancelPressed: () {},
                                                    //                                                   onOkPressed: () async {
                                                    //                                                     Response? getResult = await NotificationService.postNotificationWithImage(
                                                    //                                                       "Get $getTitle for Rs.$getAmount ✨",
                                                    //                                                       "Try bargaining for the best prices on your favorite products 🪑💰🔦🛵⚽️",
                                                    //                                                       (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0] ?? null,
                                                    //                                                     );
                                                    //
                                                    //                                                     getResult?.statusCode == 200 ? Constants.showToast("Posted Notification to Maaka Users", ToastGravity.BOTTOM) : Constants.showToast("Problem in sending Notification!", ToastGravity.BOTTOM);
                                                    //                                                   },
                                                    //                                                 );
                                                    //                                               },
                                                    //                                               icon: Icon(Icons.notification_add, color: Constants.secondary3),
                                                    //                                             ),
                                                    //                                           ],
                                                    //                                         ),
                                                    //                                       ),
                                                    //                                     ),
                                                    //                                   ],
                                                    //                                 ),
                                                    //                               ),
                                                    //                             ),
                                                    //                           ),
                                                    //                         );
                                                    //                       },
                                                    //                     ),
                                                    //                   ),
                                                    //                 ],
                                                    //               ),
                                                    //       ],
                                                    //     );
                                                    //
                                                    //     //todo:- food section
                                                    //    // return Center(
                                                    //    //    child: GestureDetector(
                                                    //    //      onTap: () {
                                                    //    //        _selectedIndexNotifier.value = index;
                                                    //    //        _scrollToIndex(index);
                                                    //    //      },
                                                    //    //      child: ValueListenableBuilder<int>(
                                                    //    //        valueListenable: _selectedIndexNotifier,
                                                    //    //        builder: (context, selectedIndex, child) {
                                                    //    //          bool isSelected = index == selectedIndex;
                                                    //    //          return AnimatedContainer(
                                                    //    //            duration: const Duration(milliseconds: 300),
                                                    //    //            curve: Curves.easeInOut,
                                                    //    //            child: Padding(
                                                    //    //              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                    //    //              child: Transform.scale(
                                                    //    //                scale: isSelected ? 1.2 : 0.9,
                                                    //    //                child: Opacity(
                                                    //    //                  opacity: isSelected ? 1.0 : 0.6,
                                                    //    //                  child: Stack(
                                                    //    //                    clipBehavior: Clip.none,
                                                    //    //                    children: [
                                                    //    //                      Container(
                                                    //    //                        width: 160,
                                                    //    //                        height: 220,
                                                    //    //                        decoration: BoxDecoration(
                                                    //    //                          color: Colors.white,
                                                    //    //                          borderRadius: BorderRadius.circular(12),
                                                    //    //                          boxShadow: [
                                                    //    //                            BoxShadow(
                                                    //    //                              color: Colors.grey.withOpacity(0.4),
                                                    //    //                              blurRadius: 10,
                                                    //    //                              spreadRadius: 3,
                                                    //    //                            )
                                                    //    //                          ],
                                                    //    //                        ),
                                                    //    //                        child: Padding(
                                                    //    //                          padding: const EdgeInsets.only(top: 0.0),
                                                    //    //                          child: Column(
                                                    //    //                            mainAxisAlignment: MainAxisAlignment.end,
                                                    //    //                            children: [
                                                    //    //                              Text(
                                                    //    //                                "name",
                                                    //    //                                style: TextStyle(
                                                    //    //                                  color: isSelected ? Colors.black : Colors.grey,
                                                    //    //                                  fontSize: isSelected ? 18 : 14,
                                                    //    //                                  fontWeight: FontWeight.bold,
                                                    //    //                                ),
                                                    //    //                              ),
                                                    //    //                              const SizedBox(height: 4),
                                                    //    //                              Text(
                                                    //    //                                '₹400',
                                                    //    //                                style: const TextStyle(
                                                    //    //                                  fontSize: 16,
                                                    //    //                                  fontWeight: FontWeight.bold,
                                                    //    //                                  color: Colors.green,
                                                    //    //                                ),
                                                    //    //                              ),
                                                    //    //                              Text(
                                                    //    //                                '₹550',
                                                    //    //                                style: const TextStyle(
                                                    //    //                                  fontSize: 14,
                                                    //    //                                  color: Colors.red,
                                                    //    //                                  decoration: TextDecoration.lineThrough,
                                                    //    //                                ),
                                                    //    //                              ),
                                                    //    //                              const SizedBox(height: 10),
                                                    //    //                            ],
                                                    //    //                          ),
                                                    //    //                        ),
                                                    //    //                      ),
                                                    //    //                      Positioned(
                                                    //    //                        top: -20,
                                                    //    //                        left: 20,
                                                    //    //                        child: Container(
                                                    //    //                          width: 100,
                                                    //    //                          height: 100,
                                                    //    //                          decoration: BoxDecoration(
                                                    //    //                            boxShadow: [
                                                    //    //                              BoxShadow(
                                                    //    //                                color: Colors.grey.withOpacity(0.3),
                                                    //    //                                blurRadius: 10,
                                                    //    //                                spreadRadius: 2,
                                                    //    //                              ),
                                                    //    //                            ],
                                                    //    //                          ),
                                                    //    //                          child: ClipRRect(
                                                    //    //                            borderRadius: BorderRadius.circular(50),
                                                    //    //                            child: Image.asset(
                                                    //    //                              "foodItems[index].imagePath",
                                                    //    //                              fit: BoxFit.cover,
                                                    //    //                            ),
                                                    //    //                          ),
                                                    //    //                        ),
                                                    //    //                      ),
                                                    //    //                    ],
                                                    //    //                  ),
                                                    //    //                ),
                                                    //    //              ),
                                                    //    //            ),
                                                    //    //          );
                                                    //    //        },
                                                    //    //      ),
                                                    //    //    ),
                                                    //    //  );
                                                    //   },
                                                    // )
                                                  ),
                                                )
                                              : SliverToBoxAdapter(
                                                  child: SizedBox(
                                                  height: 0,
                                                )),
                                        ],
                                      ),
                                    ),
                                    // Container(
                                    //     color: Constants.secondary,
                                    //     height: 10.h,
                                    //     child: Padding(
                                    //       padding:
                                    //       const EdgeInsets.only(
                                    //           top: 20),
                                    //       child:
                                    //       SingleChildScrollView(
                                    //         child: Column(
                                    //           children: [
                                    //
                                    //             Row(
                                    //               mainAxisAlignment:
                                    //               MainAxisAlignment
                                    //                   .spaceEvenly,
                                    //               children: [
                                    //                 Expanded(
                                    //                   child:
                                    //                   Padding(
                                    //                     padding: const EdgeInsets
                                    //                         .only(
                                    //                         top:
                                    //                         8.0,
                                    //                         left:
                                    //                         10.0,
                                    //                         right:
                                    //                         10.0),
                                    //                     child:
                                    //                     GestureDetector(
                                    //                       onTap:
                                    //                           () {
                                    //                         Navigator
                                    //                             .push(
                                    //                           context,
                                    //                           MaterialPageRoute(
                                    //                             builder: (context) =>
                                    //                                 OrderedMeatList(
                                    //                                   getReffererType: ref.read(UserDashListProvider.notifier).getReffererType ?? "0",
                                    //                                 ),
                                    //                           ),
                                    //                         ).then(
                                    //                                 (value) {
                                    //                               //todo:- below code refresh firebase records automatically when come back to same screen
                                    //                               // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                    //                             });
                                    //                       },
                                    //                       child:
                                    //                       Container(
                                    //                         height:
                                    //                         5.h,
                                    //                         decoration:
                                    //                         BoxDecoration(
                                    //                           gradient:
                                    //                           LinearGradient(
                                    //                             colors: [
                                    //                               Constants.colorMeatCPrimary,
                                    //                               Constants.secondary4
                                    //                             ],
                                    //                             begin:
                                    //                             Alignment.topLeft,
                                    //                             end:
                                    //                             Alignment.bottomRight,
                                    //                           ),
                                    //                           borderRadius:
                                    //                           BorderRadius.circular(20.0),
                                    //                         ),
                                    //                         child:
                                    //                         Center(
                                    //                           child: Text(
                                    //                               "My Orders",
                                    //                               style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontFamily: 'Encode Sans Condensed', fontSize: 15, color: Colors.white, fontWeight: FontWeight.bold)
                                    //
                                    //                             // TextStyle(
                                    //                             //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                    //                           ),
                                    //                         ),
                                    //                       ),
                                    //                     ),
                                    //                   ),
                                    //                 ),
                                    //               ],
                                    //             ),
                                    //           ],
                                    //         ),
                                    //       ),
                                    //     ),
                                    //   ),
                                  ],
                                ),
                              ),
                            );
                          } else if (selectedIndex == 1){
                            //grocerys screen
                            return Container(
                                height: 100.h,
                                child: Stack(
                                  children: [
                                    Column(
                                      children: [

                                        Container(
                                          color:
                                          Colors.white,
                                          height: 10.h,
                                          child: Center(
                                            child:
                                            Container(
                                              height: 5.h,
                                              child:
                                              ValueListenableBuilder<
                                                  int>(
                                                valueListenable:
                                                _selectedGroceryCategoryIndex,
                                                builder: (context,
                                                    selectedIndex,
                                                    child) {
                                                  return ListView
                                                      .builder(
                                                    scrollDirection:
                                                    Axis.horizontal,
                                                    itemCount:
                                                    _groceryCategoryMapping.length,
                                                    itemBuilder:
                                                        (context,
                                                        index) {
                                                      String
                                                      category =
                                                      _groceryCategoryMapping.values.toList()[index];
                                                      return GestureDetector(
                                                        onTap:
                                                            () {
                                                          _selectedGroceryCategoryIndex.value = index;

                                                        },
                                                        child:
                                                        Container(
                                                          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                          margin: const EdgeInsets.symmetric(horizontal: 5),
                                                          decoration: BoxDecoration(
                                                            color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                            borderRadius: BorderRadius.circular(15),
                                                            // border: Border.all(
                                                            //     color: Colors.grey),
                                                            // Light gray background
                                                            // Smooth corners
                                                            // boxShadow: [
                                                            //   BoxShadow(
                                                            //     color: Colors.black.withOpacity(
                                                            //         0.1), // Light shadow effect
                                                            //     blurRadius: 10,
                                                            //     spreadRadius: 2,
                                                            //     offset: Offset(0,
                                                            //         4), // Slight downward shadow
                                                            //   ),
                                                            // ],
                                                          ),
                                                          child: Center(
                                                            child: Text(
                                                              category,
                                                              style: TextStyle(
                                                                color: index == selectedIndex ? Colors.white : Colors.black,
                                                                fontWeight: FontWeight.bold,
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                        Expanded(
                                          child: Container(
                                            alignment:
                                            Alignment
                                                .center,
                                            height: 50.h,
                                            width: 100.w,
                                            decoration:
                                            BoxDecoration(
                                              color: FlutterFlowTheme.of(
                                                  context)
                                                  .secondary,
                                              borderRadius:
                                              BorderRadius
                                                  .only(
                                                bottomLeft:
                                                Radius.circular(
                                                    0),
                                                bottomRight:
                                                Radius.circular(
                                                    0),
                                              ),
                                            ),
                                            child: Padding(
                                              padding:
                                              const EdgeInsets
                                                  .only(
                                                  top:
                                                  10.0),
                                              child:
                                              ValueListenableBuilder<
                                                  int>(
                                                valueListenable:
                                                _selectedGroceryCategoryIndex,
                                                builder: (context,
                                                    selectedIndex,
                                                    child) {
                                                  // List<FoodList> filteredItems =
                                                  //     _getFilteredItems();

                                                  List<GroceryList>? filteredItems = _getGroceryItemsByProdCode(_groceryCategoryMapping.keys.toList()[selectedIndex]);

                                                  return ListView
                                                      .builder(
                                                    itemCount:
                                                    _groceryCategoryMapping.length,
                                                    itemBuilder:
                                                        (context, sectionIndex) {
                                                      var categoryKeys = _groceryCategoryMapping.keys.toList();
                                                      String prodCode = categoryKeys[sectionIndex];

                                                      print(ref.read(UserDashListProvider.notifier).categoryGroceryProducts);

                                                      // categoryProducts = ref
                                                      //     .read(adminDashListProvider
                                                      //     .notifier)
                                                      //     .foodList;

                                                      // List<FoodList>? sectionItems =
                                                      // _getFoodItemsByProdCode(
                                                      //     prodCode);
                                                      // if ((sectionItems ?? []).isEmpty)
                                                      //   return const SizedBox.shrink();

                                                      List<GroceryList> sectionItems = (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                      if (sectionItems.isEmpty)
                                                        return const SizedBox.shrink();

                                                      return Column(
                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                        children: [
                                                          Padding(
                                                            padding: const EdgeInsets.all(8.0),
                                                            child: Text(
                                                              '${_groceryCategoryMapping[prodCode]} ',
                                                              style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                            ),
                                                          ),
                                                          SizedBox(
                                                            height: 300,
                                                            child: ListView.builder(
                                                              controller: _scrollgroceryControllers[sectionIndex],
                                                              scrollDirection: Axis.horizontal,
                                                              itemCount: sectionItems?.length,
                                                              padding: const EdgeInsets.symmetric(horizontal: 80),
                                                              itemBuilder: (context, index) {
                                                                return Center(
                                                                  child: GestureDetector(
                                                                    onTap: () {
                                                                      _selectedgroceryIndexNotifiers[sectionIndex]!.value = index;
                                                                      _scrollgroceryToIndex(sectionIndex, index);

                                                                      GroceryList? product = sectionItems?[index];

                                                                      String? getAmount = product?.amount ?? "";
                                                                      String? getTitle = product?.title ?? "";
                                                                      String? getDocId = product?.docID ?? "";
                                                                      String? getDescription = product?.description ?? "";
                                                                      final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                      Navigator.push(
                                                                        context,
                                                                        MaterialPageRoute(
                                                                          builder: (context) => FoodDetailScreen(
                                                                            title: getTitle,
                                                                            description: getDescription,
                                                                            affiliateLink: "",
                                                                            prodDetails: "getProdDetails",
                                                                            prodSpec: "getProdSpec",
                                                                            imageUrls: imageUrls,
                                                                            amount: getAmount,
                                                                            userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                            getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                            minBargainAmount: "",
                                                                            getHeroTag: 'imageHero$index',
                                                                          ),
                                                                        ),
                                                                      );
                                                                    },
                                                                    child: ValueListenableBuilder<int>(
                                                                      valueListenable: _selectedgroceryIndexNotifiers[sectionIndex]!,
                                                                      builder: (context, selectedIndex, child) {
                                                                        bool isSelected = index == selectedIndex;
                                                                        return AnimatedContainer(
                                                                          duration: const Duration(milliseconds: 300),
                                                                          curve: Curves.easeInOut,
                                                                          child: Padding(
                                                                            padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                            child: Transform.scale(
                                                                              scale: isSelected ? 1.2 : 0.9,
                                                                              child: Opacity(
                                                                                opacity: isSelected ? 1.0 : 0.6,
                                                                                child: Container(
                                                                                  width: 160,
                                                                                  height: 220,
                                                                                  decoration: BoxDecoration(
                                                                                    color: Colors.white,
                                                                                    borderRadius: BorderRadius.circular(12),
                                                                                    boxShadow: [
                                                                                      BoxShadow(
                                                                                        color: Colors.grey.withOpacity(0.4),
                                                                                        blurRadius: 8,
                                                                                        spreadRadius: 2,
                                                                                        offset: Offset(2, 4),
                                                                                      )
                                                                                    ],
                                                                                  ),
                                                                                  child: Stack(
                                                                                    children: [
                                                                                      Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.end,
                                                                                          children: [
                                                                                            Expanded(
                                                                                              child: Container(
                                                                                                color: Colors.white,
                                                                                                child: Center(
                                                                                                  child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                      ? Hero(
                                                                                                    tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                    child: FutureBuilder(
                                                                                                      future: precacheImage(
                                                                                                        NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                        context,
                                                                                                      ),
                                                                                                      builder: (context, snapshot) {
                                                                                                        if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundColor: Colors.white,
                                                                                                            child: CircularProgressIndicator(),
                                                                                                          );
                                                                                                        } else {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundImage: NetworkImage(
                                                                                                              sectionItems?[index].fileUrls[0] ?? '',
                                                                                                            ),
                                                                                                            backgroundColor: Colors.white,
                                                                                                          );
                                                                                                        }
                                                                                                      },
                                                                                                    ),
                                                                                                  )
                                                                                                      : CircleAvatar(
                                                                                                    radius: 80,
                                                                                                    backgroundColor: Colors.grey,
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              sectionItems?[index].title ?? "",
                                                                                              style: TextStyle(
                                                                                                color: isSelected ? Colors.black : Colors.grey,
                                                                                                fontSize: isSelected ? 18 : 14,
                                                                                                fontWeight: FontWeight.w900,
                                                                                                fontFamily: 'Encode Sans Condensed',
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              '₹${sectionItems?[index].amount}',
                                                                                              style: TextStyle(
                                                                                                fontSize: 16,
                                                                                                color: Constants.colorFoodCPrimary,
                                                                                                fontWeight: FontWeight.bold,
                                                                                              ),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                      // Heart Icon in Top-Right
                                                                                      Positioned(
                                                                                        top: 8,
                                                                                        right: 8,
                                                                                        child: Container(
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            border: Border.all(color: Colors.transparent, width: 2),
                                                                                            color: Colors.white.withOpacity(0.1),
                                                                                          ),
                                                                                          padding: EdgeInsets.all(4),
                                                                                          child: Icon(
                                                                                            isSelected ? Icons.favorite : null,
                                                                                            color: isSelected ? Colors.redAccent : null,
                                                                                            size: 20,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                              physics: BouncingScrollPhysics(),
                                                            ),
                                                          ),
                                                        ],
                                                      );
                                                    },
                                                    physics:
                                                    BouncingScrollPhysics(),
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                    (isLoading ?? false)
                                        ? isRefresh == true
                                        ? Container()
                                        : Container(
                                      color: Colors
                                          .transparent,
                                      child: Center(
                                          child: CircularProgressIndicator(
                                            color: isRefresh ==
                                                true
                                                ? Colors
                                                .transparent
                                                : FlutterFlowTheme.of(context)
                                                .primary,
                                          )),
                                    )
                                        : Container()
                                  ],
                                ));

                          } else{
                            //food screen
                            return Container(
                                height: 100.h,
                                child: Stack(
                                  children: [
                                    RefreshIndicator(
                                      onRefresh: _handleRefresh,
                                      child: Column(
                                        children: [
                                          Container(
                                            height: 70.h,
                                            child: CustomScrollView(
                                              slivers: [
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Container(
                                                      alignment: Alignment
                                                          .centerLeft,
                                                      color: Constants
                                                          .secondary,
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .only(
                                                            top: 20,
                                                            left: 8.0,
                                                            right:
                                                            8.0),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                          children: [
                                                            Expanded(
                                                              child: Text(
                                                                "What are you going \n to eat Today?aa",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 25,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines:
                                                                2,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      )),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child:
                                                    GestureDetector(
                                                      onTap: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder:
                                                                (context) =>
                                                                FoodCategoryScreen(
                                                                  selectedCategoryIndex:
                                                                  _selectedCategoryIndex.value ??
                                                                      0,
                                                                ),
                                                          ),
                                                        ).then((_) {
                                                          _selectedCategoryIndex
                                                              .value = 0;
                                                          _searchQuery
                                                              .value = "";
                                                        });
                                                      },
                                                      child: Container(
                                                        alignment:
                                                        Alignment
                                                            .center,
                                                        height: 15.h,
                                                        width: 100.w,
                                                        decoration:
                                                        BoxDecoration(
                                                          color: FlutterFlowTheme.of(
                                                              context)
                                                              .secondary,
                                                          borderRadius:
                                                          BorderRadius
                                                              .only(
                                                            bottomLeft: Radius
                                                                .circular(
                                                                0),
                                                            bottomRight: Radius
                                                                .circular(
                                                                0),
                                                          ),
                                                        ),
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .all(
                                                              10.0),
                                                          child:
                                                          Container(
                                                            height: 6.h,
                                                            width: 100.w,
                                                            decoration:
                                                            BoxDecoration(
                                                              color: Constants
                                                                  .colorFoodCSecondaryWhite,
                                                              // Light gray background
                                                              borderRadius:
                                                              BorderRadius.circular(
                                                                  30),
                                                              // Smooth corners
                                                              boxShadow: [
                                                                BoxShadow(
                                                                  color: Constants
                                                                      .colorFoodCSecondaryGrey2,
                                                                  // Light shadow effect
                                                                  blurRadius:
                                                                  10,
                                                                  spreadRadius:
                                                                  2,
                                                                  offset: Offset(
                                                                      0,
                                                                      4), // Slight downward shadow
                                                                ),
                                                              ],
                                                            ),
                                                            child: Center(
                                                              child: Row(
                                                                children: [
                                                                  Expanded(
                                                                    flex:
                                                                    3,
                                                                    child: Icon(
                                                                        Icons.search,
                                                                        color: Constants.colorFoodCPrimary),
                                                                  ),
                                                                  Expanded(
                                                                    flex:
                                                                    7,
                                                                    child:
                                                                    Text(
                                                                      "Search More Food",
                                                                      style:
                                                                      TextStyle(
                                                                        fontFamily: 'Encode Sans Condensed',
                                                                        letterSpacing: 4.5,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child: Padding(
                                                      padding:
                                                      const EdgeInsets
                                                          .all(10.0),
                                                      child: Container(
                                                        color:
                                                        Colors.white,
                                                        height: 10.h,
                                                        child: Center(
                                                          child:
                                                          Container(
                                                            height: 5.h,
                                                            child:
                                                            ValueListenableBuilder<
                                                                int>(
                                                              valueListenable:
                                                              _selectedCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                return ListView
                                                                    .builder(
                                                                  scrollDirection:
                                                                  Axis.horizontal,
                                                                  itemCount:
                                                                  _categoryMapping.length,
                                                                  itemBuilder:
                                                                      (context,
                                                                      index) {
                                                                    String
                                                                    category =
                                                                    _categoryMapping.values.toList()[index];
                                                                    return GestureDetector(
                                                                      onTap:
                                                                          () {
                                                                        _selectedCategoryIndex.value = index;
                                                                        _searchQuery.value = "";
                                                                      },
                                                                      child:
                                                                      Container(
                                                                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                                        margin: const EdgeInsets.symmetric(horizontal: 5),
                                                                        decoration: BoxDecoration(
                                                                          color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                                          borderRadius: BorderRadius.circular(15),
                                                                          // border: Border.all(
                                                                          //     color: Colors.grey),
                                                                          // Light gray background
                                                                          // Smooth corners
                                                                          // boxShadow: [
                                                                          //   BoxShadow(
                                                                          //     color: Colors.black.withOpacity(
                                                                          //         0.1), // Light shadow effect
                                                                          //     blurRadius: 10,
                                                                          //     spreadRadius: 2,
                                                                          //     offset: Offset(0,
                                                                          //         4), // Slight downward shadow
                                                                          //   ),
                                                                          // ],
                                                                        ),
                                                                        child: Center(
                                                                          child: Text(
                                                                            category,
                                                                            style: TextStyle(
                                                                              color: index == selectedIndex ? Colors.white : Colors.black,
                                                                              fontWeight: FontWeight.bold,
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                              },
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child: Container(
                                                      alignment: Alignment
                                                          .center,
                                                      height: 50.h,
                                                      width: 100.w,
                                                      decoration:
                                                      BoxDecoration(
                                                        color: FlutterFlowTheme
                                                            .of(context)
                                                            .secondary,
                                                        borderRadius:
                                                        BorderRadius
                                                            .only(
                                                          bottomLeft: Radius
                                                              .circular(
                                                              0),
                                                          bottomRight:
                                                          Radius
                                                              .circular(
                                                              0),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .only(
                                                            top:
                                                            10.0),
                                                        child:
                                                        ValueListenableBuilder<
                                                            String>(
                                                          valueListenable:
                                                          _searchQuery,
                                                          builder:
                                                              (context,
                                                              query,
                                                              child) {
                                                            return ValueListenableBuilder<
                                                                int>(
                                                              valueListenable:
                                                              _selectedCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                // List<FoodList> filteredItems =
                                                                //     _getFilteredItems();

                                                                List<
                                                                    FoodList>? filteredItems = query
                                                                    .isNotEmpty
                                                                    ? ref
                                                                    .read(UserDashListProvider.notifier)
                                                                    .categoryProducts
                                                                    ?.where((item) => (item.title ?? "").toLowerCase().contains(query.toLowerCase()))
                                                                    .toList()
                                                                    : _getFoodItemsByProdCode(_categoryMapping.keys.toList()[selectedIndex]);

                                                                return ListView
                                                                    .builder(
                                                                  itemCount:
                                                                  _categoryMapping.length,
                                                                  itemBuilder:
                                                                      (context,
                                                                      sectionIndex) {
                                                                    var categoryKeys = _categoryMapping
                                                                        .keys
                                                                        .toList();
                                                                    String
                                                                    prodCode =
                                                                    categoryKeys[sectionIndex];

                                                                    print(ref
                                                                        .read(UserDashListProvider.notifier)
                                                                        .categoryProducts);

                                                                    // categoryProducts = ref
                                                                    //     .read(adminDashListProvider
                                                                    //     .notifier)
                                                                    //     .foodList;

                                                                    // List<FoodList>? sectionItems =
                                                                    // _getFoodItemsByProdCode(
                                                                    //     prodCode);
                                                                    // if ((sectionItems ?? []).isEmpty)
                                                                    //   return const SizedBox.shrink();

                                                                    List<FoodList>
                                                                    sectionItems =
                                                                    (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                                    if (sectionItems
                                                                        .isEmpty)
                                                                      return const SizedBox.shrink();

                                                                    return Column(
                                                                      crossAxisAlignment:
                                                                      CrossAxisAlignment.start,
                                                                      children: [
                                                                        Padding(
                                                                          padding: const EdgeInsets.all(8.0),
                                                                          child: Text(
                                                                            '${_categoryMapping[prodCode]} ',
                                                                            style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                                          ),
                                                                        ),
                                                                        SizedBox(
                                                                          height: 300,
                                                                          child: ListView.builder(
                                                                            controller: _scrollControllers[sectionIndex],
                                                                            scrollDirection: Axis.horizontal,
                                                                            itemCount: sectionItems?.length,
                                                                            padding: const EdgeInsets.symmetric(horizontal: 80),
                                                                            itemBuilder: (context, index) {
                                                                              return Center(
                                                                                child: GestureDetector(
                                                                                  onTap: () {
                                                                                    _selectedIndexNotifiers[sectionIndex]!.value = index;
                                                                                    _scrollToIndex(sectionIndex, index);

                                                                                    FoodList? product = sectionItems?[index];

                                                                                    String? getAmount = product?.amount ?? "";
                                                                                    String? getTitle = product?.title ?? "";
                                                                                    String? getDocId = product?.docID ?? "";
                                                                                    String? getDescription = product?.description ?? "";
                                                                                    final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                        builder: (context) => FoodDetailScreen(
                                                                                          title: getTitle,
                                                                                          description: getDescription,
                                                                                          affiliateLink: "",
                                                                                          prodDetails: "getProdDetails",
                                                                                          prodSpec: "getProdSpec",
                                                                                          imageUrls: imageUrls,
                                                                                          amount: getAmount,
                                                                                          userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                                          getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                                          minBargainAmount: "",
                                                                                          getHeroTag: 'imageHero$index',
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                  child: ValueListenableBuilder<int>(
                                                                                    valueListenable: _selectedIndexNotifiers[sectionIndex]!,
                                                                                    builder: (context, selectedIndex, child) {
                                                                                      bool isSelected = index == selectedIndex;
                                                                                      return AnimatedContainer(
                                                                                        duration: const Duration(milliseconds: 300),
                                                                                        curve: Curves.easeInOut,
                                                                                        child: Padding(
                                                                                          padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                                          child: Transform.scale(
                                                                                            scale: isSelected ? 1.2 : 0.9,
                                                                                            child: Opacity(
                                                                                              opacity: isSelected ? 1.0 : 0.6,
                                                                                              child: Container(
                                                                                                width: 160,
                                                                                                height: 220,
                                                                                                decoration: BoxDecoration(
                                                                                                  color: Colors.white,
                                                                                                  borderRadius: BorderRadius.circular(12),
                                                                                                  boxShadow: [
                                                                                                    BoxShadow(
                                                                                                      color: Colors.grey.withOpacity(0.4),
                                                                                                      blurRadius: 8,
                                                                                                      spreadRadius: 2,
                                                                                                      offset: Offset(2, 4),
                                                                                                    )
                                                                                                  ],
                                                                                                ),
                                                                                                child: Stack(
                                                                                                  children: [
                                                                                                    Padding(
                                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                                      child: Column(
                                                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                                                        children: [
                                                                                                          Expanded(
                                                                                                            child: Container(
                                                                                                              color: Colors.white,
                                                                                                              child: Center(
                                                                                                                child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                                    ? Hero(
                                                                                                                  tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                                  child: FutureBuilder(
                                                                                                                    future: precacheImage(
                                                                                                                      NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                                      context,
                                                                                                                    ),
                                                                                                                    builder: (context, snapshot) {
                                                                                                                      if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                                        return CircleAvatar(
                                                                                                                          radius: 80,
                                                                                                                          backgroundColor: Colors.white,
                                                                                                                          child: CircularProgressIndicator(),
                                                                                                                        );
                                                                                                                      } else {
                                                                                                                        return CircleAvatar(
                                                                                                                          radius: 80,
                                                                                                                          backgroundImage: NetworkImage(
                                                                                                                            sectionItems?[index].fileUrls[0] ?? '',
                                                                                                                          ),
                                                                                                                          backgroundColor: Colors.white,
                                                                                                                        );
                                                                                                                      }
                                                                                                                    },
                                                                                                                  ),
                                                                                                                )
                                                                                                                    : CircleAvatar(
                                                                                                                  radius: 80,
                                                                                                                  backgroundColor: Colors.grey,
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Text(
                                                                                                            sectionItems?[index].title ?? "",
                                                                                                            style: TextStyle(
                                                                                                              color: isSelected ? Colors.black : Colors.grey,
                                                                                                              fontSize: isSelected ? 18 : 14,
                                                                                                              fontWeight: FontWeight.w900,
                                                                                                              fontFamily: 'Encode Sans Condensed',
                                                                                                            ),
                                                                                                          ),
                                                                                                          Text(
                                                                                                            '₹${sectionItems?[index].amount}',
                                                                                                            style: TextStyle(
                                                                                                              fontSize: 16,
                                                                                                              color: Constants.colorFoodCPrimary,
                                                                                                              fontWeight: FontWeight.bold,
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    ),
                                                                                                    // Heart Icon in Top-Right
                                                                                                    Positioned(
                                                                                                      top: 8,
                                                                                                      right: 8,
                                                                                                      child: Container(
                                                                                                        decoration: BoxDecoration(
                                                                                                          shape: BoxShape.circle,
                                                                                                          border: Border.all(color: Colors.transparent, width: 2),
                                                                                                          color: Colors.white.withOpacity(0.1),
                                                                                                        ),
                                                                                                        padding: EdgeInsets.all(4),
                                                                                                        child: Icon(
                                                                                                          isSelected ? Icons.favorite : null,
                                                                                                          color: isSelected ? Colors.redAccent : null,
                                                                                                          size: 20,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ],
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      );
                                                                                    },
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    );
                                                                  },
                                                                  physics:
                                                                  BouncingScrollPhysics(),
                                                                );
                                                              },
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                              ],
                                            ),
                                          ),

                                          // Container(
                                          //      color: Constants.secondary,
                                          //      height: 10.h,
                                          //      child: Center(
                                          //        child: SingleChildScrollView(
                                          //          child: Column(
                                          //            children: [
                                          //
                                          //              Row(
                                          //                mainAxisAlignment:
                                          //                MainAxisAlignment
                                          //                    .spaceEvenly,
                                          //                children: [
                                          //                  Expanded(
                                          //                    child:
                                          //                    Padding(
                                          //                      padding: const EdgeInsets
                                          //                          .only(
                                          //                          top:
                                          //                          8.0,
                                          //                          left:
                                          //                          10.0,
                                          //                          right:
                                          //                          10.0),
                                          //                      child:
                                          //                      GestureDetector(
                                          //                        onTap:
                                          //                            () {
                                          //                          Navigator.push(
                                          //                            context,
                                          //                            MaterialPageRoute(
                                          //                              builder: (context) => OrderedFoodList(),
                                          //                            ),
                                          //                          ).then((value) {
                                          //                            //todo:- below code refresh firebase records automatically when come back to same screen
                                          //                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                          //                          });
                                          //                        },
                                          //                        child:
                                          //                        Container(
                                          //                          height:
                                          //                          5.h,
                                          //                          decoration:
                                          //                          BoxDecoration(
                                          //                            gradient:
                                          //                            LinearGradient(
                                          //                              colors: [
                                          //                                Constants.colorMeatCPrimary,
                                          //                                Constants.secondary4
                                          //                              ],
                                          //                              begin:
                                          //                              Alignment.topLeft,
                                          //                              end:
                                          //                              Alignment.bottomRight,
                                          //                            ),
                                          //                            borderRadius:
                                          //                            BorderRadius.circular(20.0),
                                          //                          ),
                                          //                          child:
                                          //                          Center(
                                          //                            child: Text(
                                          //                                "My Orders",
                                          //                                style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontFamily: 'Encode Sans Condensed', fontSize: 15, color: Colors.white, fontWeight: FontWeight.bold)
                                          //
                                          //                              // TextStyle(
                                          //                              //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                          //                            ),
                                          //                          ),
                                          //                        ),
                                          //                      ),
                                          //                    ),
                                          //                  ),
                                          //                ],
                                          //              ),
                                          //            ],
                                          //          ),
                                          //        ),
                                          //      ),
                                          //    )
                                        ],
                                      ),
                                    ),
                                    (isLoading ?? false)
                                        ? isRefresh == true
                                        ? Container()
                                        : Container(
                                      color: Colors.transparent,
                                      child: Center(
                                          child:
                                          CircularProgressIndicator(
                                            color: isRefresh == true
                                                ? Colors.transparent
                                                : FlutterFlowTheme.of(
                                                context)
                                                .primary,
                                          )),
                                    )
                                        : Container()
                                  ],
                                ));
                          }
                        },
                      ),
                    ],
                  ),
                ),
              );
            } else {
              //todo:-add area price details for meat shop owner when no details existed and also handle  error message if set method fails
              try {
                isReffererPricingPresent = false;
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Stack(
                    children: [
                      // Portion A (Background)
                      Container(
                          height: 60.h,
                          child: Stack(
                            children: [
                              RefreshIndicator(
                                onRefresh: _handleRefresh,
                                child: CustomScrollView(
                                  slivers: [
                                    SliverToBoxAdapter(
                                      child: Center(
                                        child: Container(
                                          height: 10.h,
                                          width: 100.w,
                                          decoration: BoxDecoration(
                                            color: Constants.secondary,
                                            borderRadius: BorderRadius.only(
                                              bottomLeft: Radius.circular(0),
                                              bottomRight: Radius.circular(0),
                                            ),
                                          ),
                                          child: Stack(children: [
                                            Positioned.fill(
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    left: 10.0, right: 0),
                                                child: Align(
                                                  alignment:
                                                      Alignment.centerLeft,
                                                  child: Consumer(builder:
                                                      (context, ref, child) {
                                                    double? getNetBals = ref
                                                        .watch(getUserNetBal);

                                                    // getNetBals = 0;

                                                    return Container(
                                                      width: 100.w,
                                                      child:
                                                          SingleChildScrollView(
                                                        child: Column(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .spaceEvenly,
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            // Consumer(builder:
                                                            //     (context, ref,
                                                            //         child) {
                                                            //   double? getNetBals =
                                                            //       ref.watch(
                                                            //           getUserNetBal);
                                                            //
                                                            //   getNetBals = 0;

                                                            // return
                                                            Text(
                                                                '₹' +
                                                                    getNetBals
                                                                        .toString(),
                                                                textAlign:
                                                                    TextAlign
                                                                        .start,
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .headlineLarge),
                                                            // }),
                                                            Text(
                                                              getNetBals.toString() ==
                                                                      "0.0"
                                                                  ? "Lets Start Earning"
                                                                  : "Is your Saved Earnings",
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: Theme.of(
                                                                      context)
                                                                  .textTheme
                                                                  .titleSmall,
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    );
                                                  }),
                                                ),
                                              ),

                                              // Add more Positioned widgets for additional images
                                            ),
                                          ]),
                                        ),
                                      ),
                                    ),
                                    makeTitleHeader('My Goals', true, 0),

                                    SliverToBoxAdapter(
                                      child: StreamBuilder<QuerySnapshot>(
                                        stream: firestore
                                            .collection('users')
                                            .doc(ref
                                                .read(UserDashListProvider
                                                    .notifier)
                                                .getDocId)
                                            .collection('goals')
                                            .snapshots(),
                                        builder: (BuildContext context,
                                            AsyncSnapshot<QuerySnapshot>
                                                snapshot) {
                                          if (snapshot.hasError) {
                                            return Center(
                                              child: Text(
                                                  'Error: ${snapshot.error}'),
                                            );
                                          }

                                          if (snapshot.connectionState ==
                                              ConnectionState.waiting) {
                                            return Center(
                                              child: SizedBox(
                                                child:
                                                    CircularProgressIndicator(),
                                                height: 20,
                                                width: 20,
                                              ),
                                            );
                                          }

                                          ref
                                                  .read(UserDashListProvider
                                                      .notifier)
                                                  .goalDocuments =
                                              snapshot.data!.docs;

                                          //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions

                                          //---------------------

                                          goalList = snapshot.data!.docs
                                              .map((doc) {
                                                final data = doc.data()
                                                    as Map<String, dynamic>;
                                                final goalTitle =
                                                    data['goalTitle'];
                                                final goalTarget =
                                                    data['goalTarget'];
                                                final goalPriority =
                                                    data['goalPriority'];
                                                final goalToDelete =
                                                    data['goalToDelete'];
                                                // final goalIconName = data['goalIcon'];

                                                return Goal(
                                                    goalTitle,
                                                    goalPriority,
                                                    goalTarget,
                                                    0.0,
                                                    "",
                                                    goalToDelete,
                                                    doc.id,
                                                    Colors.transparent,
                                                    Icons.add);
                                              })
                                              .whereType<Goal>()
                                              .toList();

                                          //----------------------------------

                                          print("goals stream build called");
                                          return Container(
                                            child: HorizontalGridView1(
                                              data: snapshot.data!.docs,
                                              getMobile: widget.getMobile,
                                              dataList: dataList,
                                              isAdmin: false,
                                            ),
                                          );
                                        },
                                      ),
                                    ),
                                    (isShowMeatSection ?? true)
                                        ? makeTitleHeader(
                                            'Fresh Meat', false, 1)
                                        : SliverToBoxAdapter(
                                            child: SizedBox(
                                            height: 0,
                                          )),
                                    (isShowMeatSection ?? true)
                                        ? SliverToBoxAdapter(
                                            child: Container(
                                              color: _singleton.lighten(
                                                  Constants.secondary2,
                                                  amount: _singleton
                                                      .generateRandomColorDouble()),
                                              height: 22.h,
                                              child: Padding(
                                                padding:
                                                    const EdgeInsets.all(0.0),
                                                child: SingleChildScrollView(
                                                  child: Column(
                                                    children: [
                                                      Row(
                                                        children: [
                                                          Expanded(
                                                            child:
                                                                GestureDetector(
                                                              child: Card(
                                                                color: Constants
                                                                    .secondary2,
                                                                elevation: 4,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              12),
                                                                ),
                                                                child: Column(
                                                                  mainAxisAlignment:
                                                                      MainAxisAlignment
                                                                          .center,
                                                                  children: [
                                                                    ClipOval(
                                                                      child: Image
                                                                          .asset(
                                                                        items[0]
                                                                            [
                                                                            'image']!,
                                                                        height:
                                                                            80,
                                                                        width:
                                                                            80,
                                                                        fit: BoxFit
                                                                            .cover,
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                        height:
                                                                            10),
                                                                    Text(
                                                                      items[0][
                                                                          'title']!,
                                                                      style:
                                                                          TextStyle(
                                                                        fontSize:
                                                                            15,
                                                                        fontWeight:
                                                                            FontWeight.bold,
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                              onTap: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder: (context) => DetailScreen(
                                                                        title: items[0]['title'] ??
                                                                            "",
                                                                        isReffererPricingPresent:
                                                                            isReffererPricingPresent ??
                                                                                false),
                                                                  ),
                                                                );
                                                              },
                                                            ),
                                                          ),
                                                          Expanded(
                                                            child:
                                                                GestureDetector(
                                                              onTap: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder: (context) => DetailScreen(
                                                                        title: items[1]
                                                                            [
                                                                            'title']!,
                                                                        isReffererPricingPresent:
                                                                            isReffererPricingPresent ??
                                                                                false),
                                                                  ),
                                                                );
                                                              },
                                                              child: Card(
                                                                color: Constants
                                                                    .secondary2,
                                                                elevation: 4,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              12),
                                                                ),
                                                                child: Column(
                                                                  mainAxisAlignment:
                                                                      MainAxisAlignment
                                                                          .center,
                                                                  children: [
                                                                    ClipOval(
                                                                      child: Image
                                                                          .asset(
                                                                        items[1]
                                                                            [
                                                                            'image']!,
                                                                        height:
                                                                            80,
                                                                        width:
                                                                            80,
                                                                        fit: BoxFit
                                                                            .cover,
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                        height:
                                                                            10),
                                                                    Text(
                                                                      items[1][
                                                                          'title']!,
                                                                      style:
                                                                          TextStyle(
                                                                        fontSize:
                                                                            15,
                                                                        fontWeight:
                                                                            FontWeight.bold,
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                      Row(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                        children: [
                                                          Expanded(
                                                            child: Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      top: 8.0,
                                                                      left: 8.0,
                                                                      right:
                                                                          8.0),
                                                              child: Container(
                                                                decoration:
                                                                    BoxDecoration(
                                                                  gradient:
                                                                      LinearGradient(
                                                                    colors: [
                                                                      Constants
                                                                          .primary1,
                                                                      Constants
                                                                          .secondary4
                                                                    ],
                                                                    begin: Alignment
                                                                        .topLeft,
                                                                    end: Alignment
                                                                        .bottomRight,
                                                                  ),
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              8.0),
                                                                ),
                                                                child:
                                                                    ElevatedButton(
                                                                  style: ElevatedButton
                                                                      .styleFrom(
                                                                    backgroundColor:
                                                                        Colors
                                                                            .transparent,
                                                                    shape:
                                                                        RoundedRectangleBorder(
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              10.0), // Set the border radius here
                                                                    ), // Set the background color here
                                                                  ),
                                                                  onPressed:
                                                                      () {
                                                                    Navigator
                                                                        .push(
                                                                      context,
                                                                      MaterialPageRoute(
                                                                        builder:
                                                                            (context) =>
                                                                                OrderedMeatList(
                                                                          getReffererType:
                                                                              ref.read(UserDashListProvider.notifier).getReffererType ?? "0",
                                                                        ),
                                                                      ),
                                                                    ).then(
                                                                        (value) {
                                                                      //todo:- below code refresh firebase records automatically when come back to same screen
                                                                      // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                    });
                                                                  },
                                                                  child: Text(
                                                                      "My Orders",
                                                                      style: Theme.of(
                                                                              context)
                                                                          .textTheme
                                                                          .bodyMedium
                                                                          ?.copyWith(
                                                                              color: Constants.secondary,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold)

                                                                      // TextStyle(
                                                                      //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                      ),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                          )
                                        : SliverToBoxAdapter(
                                            child: SizedBox(
                                            height: 0,
                                          )),

                                    makeTitleHeader(
                                        'Recent Transactions', true, 2),

                                    //todo:- 26.1.24 second approach
                                    SliverToBoxAdapter(
                                      child: StreamBuilder<List<Transactionss>>(
                                        stream: ref
                                            .read(UserDashListProvider.notifier)
                                            .transactionsStream,
                                        builder: (context, snapshot) {
                                          if (snapshot.connectionState ==
                                              ConnectionState.waiting) {
                                            return Center(
                                                child: SizedBox(
                                              child:
                                                  CircularProgressIndicator(),
                                              height: 20,
                                              width: 20,
                                            ));
                                          } else if (snapshot.hasError) {
                                            return Text(
                                                'Error: ${snapshot.error}');
                                          } else {
                                            // Use the snapshot.data to build your UI
                                            dataList = snapshot.data;

                                            // If dataList is null or empty, you can handle it accordingly
                                            if (dataList == null ||
                                                dataList!.isEmpty) {
                                              return Center(
                                                child: Column(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment.center,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.center,
                                                  children: [
                                                    InkWell(
                                                      child: Image.asset(
                                                        'images/final/SecurityCode/MPin.png',
                                                        width: 150,
                                                        height: 150,
                                                      ),
                                                      onTap: () {
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder:
                                                                (_, __, ___) =>
                                                                    SaveMoney(
                                                              getMobile: widget
                                                                  .getMobile,
                                                              getUserName: ref
                                                                  .read(UserDashListProvider
                                                                      .notifier)
                                                                  .getUser,
                                                              getGoalDocId: "",
                                                              getTransData:
                                                                  dataList,
                                                              getPaymentService:
                                                                  PaymentService
                                                                      .maakaMoney,
                                                            ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    SizedBox(height: 16),
                                                    Text(
                                                      "Tap to Start Saving Money!",
                                                      style: TextStyle(
                                                          fontSize: 20,
                                                          fontWeight:
                                                              FontWeight.bold),
                                                      textAlign:
                                                          TextAlign.center,
                                                    ),
                                                    SizedBox(height: 16),
                                                    Text(
                                                      "Cheers to Smart financial moves and Savings Plans.",
                                                      textAlign:
                                                          TextAlign.center,
                                                    ),
                                                  ],
                                                ),
                                              );
                                            }

                                            // Your logic to build the UI using the dataList
                                            // ...
                                            print(
                                                "transaction stream build called");
                                            return ListView.builder(
                                              shrinkWrap: true,
                                              physics:
                                                  NeverScrollableScrollPhysics(),
                                              itemCount: dataList?.length,
                                              itemBuilder: (context, index) {
                                                if (index > 2) {
                                                  return SizedBox
                                                      .shrink(); // Return an empty widget for transactions beyond the last three
                                                }

                                                final document =
                                                    dataList?[index];

                                                final amount = document?.amount;
                                                final transType =
                                                    document?.isDeposit;

                                                final date = document?.date;
                                                final mobile = document?.mobile;
                                                final docId = document?.docId;
                                                final interest =
                                                    document?.interest;
                                                final timeStamp =
                                                    document?.timmeStamp;

                                                // Replace this with your Timestamp object
                                                Timestamp timestamp =
                                                    timeStamp ??
                                                        Timestamp(000, 000);
                                                // Convert Timestamp to DateTime
                                                DateTime dateTime =
                                                    timestamp.toDate();

                                                // Format date and time
                                                String formattedDateTime =
                                                    DateFormat(
                                                            'dd-MM-yyyy h:mm a')
                                                        .format(dateTime);

                                                //todo:-  adding estimated time for withdrawal request from current time

                                                if (transType == false &&
                                                    amount == 0) {
                                                  DateTime estimatedDateTime =
                                                      dateTime.add(Duration(
                                                          minutes: 20));
                                                  formattedDateTime =
                                                      DateFormat('h:mm a')
                                                          .format(
                                                              estimatedDateTime);
                                                }

                                                String getFinInt =
                                                    interest == null
                                                        ? 0.0.toString()
                                                        : interest
                                                            .toStringAsFixed(2);

                                                return Container(
                                                  color: Constants.secondary
                                                      .withOpacity(0.95),
                                                  child: Padding(
                                                    padding:
                                                        const EdgeInsets.all(5),
                                                    child: Card(
                                                      shape:
                                                          RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(6.0),
                                                      ),
                                                      color: amount == 0
                                                          ? Constants.secondary
                                                          : Constants.secondary,
                                                      elevation: 4.0,
                                                      child: ListTile(
                                                        leading: Card(
                                                          color: transType ==
                                                                  true
                                                              ? FlutterFlowTheme
                                                                      .of(
                                                                          context)
                                                                  .primary
                                                              : FlutterFlowTheme
                                                                      .of(context)
                                                                  .secondary1,
                                                          clipBehavior: Clip
                                                              .antiAliasWithSaveLayer,
                                                          elevation: 5.0,
                                                          shape:
                                                              RoundedRectangleBorder(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: Padding(
                                                            padding:
                                                                const EdgeInsets
                                                                    .all(8.0),
                                                            child: Icon(
                                                              transType == true
                                                                  ? amount == 0
                                                                      ? Icons
                                                                          .lock_clock
                                                                      : Icons
                                                                          .arrow_forward
                                                                  : amount == 0
                                                                      ? Icons
                                                                          .lock_clock
                                                                      : Icons
                                                                          .arrow_back,
                                                              color: Constants
                                                                  .secondary,
                                                              size: 24.0,
                                                            ),
                                                          ),
                                                        ),
                                                        title: Text(
                                                          transType == true
                                                              ? amount == 0
                                                                  ? "Processing Payment"
                                                                  : "Deposit"
                                                              : amount == 0
                                                                  ? "Processing Request"
                                                                  : "Withdrawn",
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyLarge
                                                              ?.copyWith(
                                                                  color: amount ==
                                                                          0
                                                                      ? Constants
                                                                          .primary
                                                                      : Constants
                                                                          .primary,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis),
                                                        ),
                                                        subtitle: Text(
                                                          transType == true
                                                              ? amount == 0
                                                                  ? formattedDateTime
                                                                      .toString()
                                                                      .toUpperCase()
                                                                  : formattedDateTime
                                                                      .toString()
                                                                      .toUpperCase()
                                                              : amount == 0
                                                                  ? "Receive Money before - $formattedDateTime"
                                                                  : formattedDateTime
                                                                      .toString()
                                                                      .toUpperCase(),
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: amount ==
                                                                          0
                                                                      ? Constants
                                                                          .secondary3
                                                                      : Colors
                                                                          .black,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis),
                                                        ),
                                                        trailing: Container(
                                                          child: Column(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceEvenly,
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .end,
                                                            children: [
                                                              amount == 0
                                                                  ? Text("")
                                                                  : Text(
                                                                      transType ==
                                                                              true
                                                                          ? "+" +
                                                                              '$amount' +
                                                                              ' ₹'
                                                                          : "" +
                                                                              '$amount' +
                                                                              ' ₹',
                                                                      style: Theme.of(
                                                                              context)
                                                                          .textTheme
                                                                          .titleSmall
                                                                          ?.copyWith(
                                                                              color: transType == true ? Constants.deposite : Constants.withdrawal,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold),
                                                                    ),
                                                              amount == 0
                                                                  ? Text("")
                                                                  : Visibility(
                                                                      visible: transType ==
                                                                              true
                                                                          ? true
                                                                          : false,
                                                                      child:
                                                                          Text(
                                                                        transType ==
                                                                                true
                                                                            ? "+" +
                                                                                '$getFinInt' +
                                                                                ' ₹'
                                                                            : '',
                                                                        style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                            color: transType == true
                                                                                ? Colors.grey
                                                                                : Colors.red,
                                                                            overflow: TextOverflow.ellipsis,
                                                                            fontWeight: FontWeight.bold),
                                                                      ),
                                                                    ),
                                                            ],
                                                          ),
                                                        ),
                                                        onTap: () {},
                                                      ),
                                                    ),
                                                  ),
                                                );
                                              },
                                            );
                                          }
                                        },
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              (isLoading ?? false)
                                  ? isRefresh == true
                                      ? Container()
                                      : Container(
                                          color: Colors.transparent,
                                          child: Center(
                                              child: CircularProgressIndicator(
                                            color: isRefresh == true
                                                ? Colors.transparent
                                                : FlutterFlowTheme.of(context)
                                                    .primary,
                                          )),
                                        )
                                  : Container()
                            ],
                          )),
                      // Portion B (Overlay)
                      Positioned(
                        bottom: 0,
                        left: 0,
                        right: 0,
                        child: GestureDetector(
                          onVerticalDragUpdate: _onVerticalDragUpdate,
                          onVerticalDragEnd: _onVerticalDragEnd,
                          behavior: HitTestBehavior.translucent,
                          child: ValueListenableBuilder<double>(
                            valueListenable: portionBHeightNotifier,
                            builder: (context, portionBHeight, child) {
                              return Container(
                                height: portionBHeight,
                                decoration: BoxDecoration(
                                  color: Colors.lightBlue.withOpacity(0.15),
                                  borderRadius: new BorderRadius.only(
                                    topLeft: Radius.circular(35),
                                    topRight: Radius.circular(35),
                                  ),
                                ), // Replace with your overlay color
                                child: Column(
                                  children: [
                                    SizedBox(
                                      height: 1.h,
                                    ),
                                    Container(
                                      height: 1.h,
                                      width: 15.w,
                                      decoration: BoxDecoration(
                                        color: Constants.secondary,
                                        borderRadius: BorderRadius.circular(10),
                                      ),
                                    ),
                                    Expanded(
                                      child: Padding(
                                        padding:
                                            const EdgeInsets.only(top: 20.0),
                                        child: CustomScrollView(
                                          // physics: portionBHeight == MediaQuery.of(context).size.height
                                          //     ? AlwaysScrollableScrollPhysics()
                                          //     : NeverScrollableScrollPhysics(),
                                          physics:
                                              NeverScrollableScrollPhysics(),
                                          slivers: [
                                            makeTitleHeader(
                                                'Shopify', false, 4),
                                            SliverToBoxAdapter(
                                              child: Center(
                                                child: Container(
                                                  alignment: Alignment.center,
                                                  height: 17.h,
                                                  width: 100.w,
                                                  decoration: BoxDecoration(
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .secondary,
                                                    borderRadius:
                                                        BorderRadius.only(
                                                      bottomLeft:
                                                          Radius.circular(0),
                                                      bottomRight:
                                                          Radius.circular(0),
                                                    ),
                                                  ),
                                                  child: StreamBuilder(
                                                    stream: FirebaseFirestore
                                                        .instance
                                                        .collection('banners')
                                                        .snapshots(),
                                                    builder: (context,
                                                        AsyncSnapshot<
                                                                QuerySnapshot>
                                                            snapshot) {
                                                      if (!snapshot.hasData) {
                                                        return Center(
                                                            child:
                                                                CircularProgressIndicator());
                                                      }

                                                      if (snapshot.data!.docs ==
                                                              null ||
                                                          snapshot.data!.docs
                                                              .isEmpty) {
                                                        return Center(
                                                          child: Column(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceEvenly,
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .center,
                                                            children: [
                                                              InkWell(
                                                                child:
                                                                    Image.asset(
                                                                  'images/final/SecurityCode/MPin.png',
                                                                  width: 80,
                                                                  height: 80,
                                                                ),
                                                                onTap: () {},
                                                              ),
                                                              Text(
                                                                "New Offers are About to Load!",
                                                                style: TextStyle(
                                                                    fontSize:
                                                                        20,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold),
                                                                textAlign:
                                                                    TextAlign
                                                                        .center,
                                                              ),
                                                              Text(
                                                                "Cheers to Smart Buying Plans.",
                                                                textAlign:
                                                                    TextAlign
                                                                        .center,
                                                              ),
                                                            ],
                                                          ),
                                                        );
                                                      }

                                                      return GridView.builder(
                                                        physics:
                                                            NeverScrollableScrollPhysics(),
                                                        padding:
                                                            const EdgeInsets
                                                                .all(8.0),
                                                        gridDelegate:
                                                            SliverGridDelegateWithFixedCrossAxisCount(
                                                          crossAxisCount: 3,
                                                          crossAxisSpacing: 8.0,
                                                          mainAxisSpacing: 8.0,
                                                          childAspectRatio:
                                                              1.0, // Adjust this to change item size ratio
                                                        ),
                                                        itemCount: snapshot
                                                            .data!.docs.length,
                                                        itemBuilder:
                                                            (context, index) {
                                                          if (index > 2) {
                                                            isProductCountExceeds =
                                                                true;
                                                            return SizedBox
                                                                .shrink(); // Return an empty widget for transactions beyond the last three
                                                          } else {
                                                            isProductCountExceeds =
                                                                false;
                                                          }

                                                          var doc = snapshot
                                                              .data!
                                                              .docs[index];
                                                          List<dynamic>
                                                              imageUrls =
                                                              (doc.data() as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                          ?.containsKey(
                                                                              'fileUrls') ??
                                                                      false
                                                                  ? doc[
                                                                      'fileUrls']
                                                                  : [];

                                                          String getTitle = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'title') ??
                                                                  false
                                                              ? doc['title']
                                                              : "";

                                                          String getDescription = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'description') ??
                                                                  false
                                                              ? doc[
                                                                  'description']
                                                              : "";

                                                          String getAmount = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'amount') ??
                                                                  false
                                                              ? doc['amount']
                                                              : "";

                                                          String
                                                              getMinBargainAmount =
                                                              (doc.data() as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                          ?.containsKey(
                                                                              'minBargainAmount') ??
                                                                      false
                                                                  ? doc[
                                                                      'minBargainAmount']
                                                                  : "";

                                                          String getProdDetails = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'productDetails') ??
                                                                  false
                                                              ? doc[
                                                                  'productDetails']
                                                              : "";

                                                          String getProdSpec = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'productSpec') ??
                                                                  false
                                                              ? doc[
                                                                  'productSpec']
                                                              : "";

                                                          String getAffiliate = (doc
                                                                              .data()
                                                                          as Map<
                                                                              String,
                                                                              dynamic>?)
                                                                      ?.containsKey(
                                                                          'affiliateLink') ??
                                                                  false
                                                              ? doc[
                                                                  'affiliateLink']
                                                              : "";

                                                          return GridTile(
                                                            child:
                                                                GestureDetector(
                                                              onTap: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                            ProductDetailScreen(
                                                                      title:
                                                                          getTitle,
                                                                      description:
                                                                          getDescription,
                                                                      affiliateLink:
                                                                          getAffiliate,
                                                                      prodDetails:
                                                                          getProdDetails,
                                                                      prodSpec:
                                                                          getProdSpec,
                                                                      imageUrls:
                                                                          imageUrls,
                                                                      amount:
                                                                          getAmount,
                                                                      userName:
                                                                          ref.read(UserDashListProvider.notifier).getUser ??
                                                                              "",
                                                                      getAdminType:
                                                                          ref.read(UserDashListProvider.notifier).getAdminType ??
                                                                              "",
                                                                      minBargainAmount:
                                                                          getMinBargainAmount,
                                                                      getHeroTag:
                                                                          'imageHero$index',
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                              child: Container(
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondary
                                                                      .withOpacity(
                                                                          0.4),
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              15.0),
                                                                ),
                                                                child: Column(
                                                                  mainAxisAlignment:
                                                                      MainAxisAlignment
                                                                          .spaceEvenly,
                                                                  crossAxisAlignment:
                                                                      CrossAxisAlignment
                                                                          .start,
                                                                  children: [
                                                                    Expanded(
                                                                      flex: 5,
                                                                      child:
                                                                          Container(
                                                                        // Adjust the height to make it smaller
                                                                        width:
                                                                            100.w,
                                                                        // Adjust the width to make it smaller
                                                                        child:
                                                                            ClipRRect(
                                                                          borderRadius: BorderRadius.only(
                                                                              topLeft: Radius.circular(15),
                                                                              topRight: Radius.circular(15),
                                                                              bottomLeft: Radius.circular(15),
                                                                              bottomRight: Radius.circular(15)),
                                                                          child: imageUrls.isNotEmpty
                                                                              ? Hero(
                                                                                  tag: 'imageHero$index',
                                                                                  child: Image.network(
                                                                                    imageUrls[0],
                                                                                    fit: BoxFit.fitWidth,
                                                                                    loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                                                                                      if (loadingProgress == null) {
                                                                                        return child;
                                                                                      } else {
                                                                                        return Center(
                                                                                          child: CircularProgressIndicator(
                                                                                            value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                                                          ),
                                                                                        );
                                                                                      }
                                                                                    },
                                                                                  ),
                                                                                )
                                                                              : Container(color: Colors.grey),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    Expanded(
                                                                      flex: 3,
                                                                      child:
                                                                          Column(
                                                                        mainAxisAlignment:
                                                                            MainAxisAlignment.center,
                                                                        children: [
                                                                          Padding(
                                                                            padding:
                                                                                const EdgeInsets.only(left: 8.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                          Padding(
                                                                            padding:
                                                                                const EdgeInsets.only(left: 8.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      );
                                                    },
                                                  ),
                                                ),
                                              ),
                                            ),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                height: 10.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondary,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    bottomLeft:
                                                        Radius.circular(0),
                                                    bottomRight:
                                                        Radius.circular(0),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.all(8.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Constants
                                                                      .primary,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          ProductListScreen(
                                                                    userName: ref
                                                                            .read(UserDashListProvider.notifier)
                                                                            .getUser ??
                                                                        "",
                                                                  ),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text('More',
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 10,
                                                      ),
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Constants
                                                                      .primary,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              // Navigator.push(
                                                              //   context,
                                                              //   MaterialPageRoute(
                                                              //     builder: (context) =>
                                                              //         ProductListScreen(
                                                              //       userName: ref
                                                              //               .read(
                                                              //                   UserDashListProvider
                                                              //                       .notifier)
                                                              //               .getUser ??
                                                              //           "",
                                                              //     ),
                                                              //   ),
                                                              // ).then((value) {
                                                              //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                              //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              // });

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder: (context) =>
                                                                      AffiliateListScreen(
                                                                          userName:
                                                                              ref.read(UserDashListProvider.notifier).getUser ?? ""),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                              'Shop Now',
                                                              style: Theme.of(
                                                                      context)
                                                                  .textTheme
                                                                  .bodyMedium
                                                                  ?.copyWith(
                                                                      color: Constants
                                                                          .secondary,
                                                                      overflow:
                                                                          TextOverflow
                                                                              .ellipsis,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .bold),
                                                            ),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'Quick Access', false, 1),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                color: Constants.secondary,
                                                height: 15.h,
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.all(0.0),
                                                  child: Card(
                                                    color: Constants.secondary,
                                                    elevation: 0,
                                                    shape:
                                                        RoundedRectangleBorder(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              0),
                                                      side: BorderSide(
                                                          color: Colors
                                                              .transparent,
                                                          width: 1),
                                                    ),
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceAround,
                                                      children: [
                                                        ReusableCertificateSection(
                                                          getText: "Save ₹",
                                                          getImage: "saveMoney",
                                                          getTextColor:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                          getIconColor:
                                                              Constants
                                                                  .secondary,
                                                          getBackgroundColor:
                                                              Constants.primary,
                                                          onTap: () {
                                                            // Navigator.push(
                                                            //   context,
                                                            //   PageRouteBuilder(
                                                            //     transitionDuration:
                                                            //         Duration(milliseconds: 400),
                                                            //     pageBuilder: (_, __, ___) =>
                                                            //         SaveMoney(
                                                            //       getMobile: widget.getMobile,
                                                            //       getUserName: ref
                                                            //           .read(UserDashListProvider
                                                            //               .notifier)
                                                            //           .getUser,
                                                            //       getGoalDocId: "",
                                                            //       getTransData: dataList,
                                                            //     ),
                                                            //     transitionsBuilder:
                                                            //         (_, animation, __, child) {
                                                            //       return SlideTransition(
                                                            //         position: Tween<Offset>(
                                                            //           begin: Offset(0, 1),
                                                            //           // You can adjust the start position
                                                            //           end: Offset
                                                            //               .zero, // You can adjust the end position
                                                            //         ).animate(animation),
                                                            //         child: child,
                                                            //       );
                                                            //     },
                                                            //   ),
                                                            // );

                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                    Duration(
                                                                        milliseconds:
                                                                            400),
                                                                pageBuilder: (_,
                                                                        __,
                                                                        ___) =>
                                                                    GoalsHistory1(
                                                                  getDocId: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getDocId,
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  dataList:
                                                                      dataList ??
                                                                          [],
                                                                ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                          Offset(
                                                                              0,
                                                                              1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                        child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Request",
                                                          getImage: "moneyReq",
                                                          getTextColor:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                          getIconColor:
                                                              Colors.black,
                                                          getBackgroundColor:
                                                              Constants
                                                                  .secondary1,
                                                          onTap: () {
                                                            double?
                                                                getFinalGoalAchievedAmount =
                                                                findGoalAchievedAmount();

                                                            isSavAmntReq = true;
                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                    Duration(
                                                                        milliseconds:
                                                                            400),
                                                                pageBuilder: (_,
                                                                        __,
                                                                        ___) =>
                                                                    RequestMoney(
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  isSavingReq:
                                                                      isSavAmntReq,
                                                                  getUserName: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getUser,
                                                                  getReqAmnt:
                                                                      "",
                                                                  getGoalDocId:
                                                                      "",
                                                                  getGoalTargetAmnt:
                                                                      "",
                                                                  goalAmount:
                                                                      getFinalGoalAchievedAmount ??
                                                                          0.0,
                                                                ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                          Offset(
                                                                              0,
                                                                              1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                        child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Goals",

                                                          ///Offers
                                                          getImage: "Goal",
                                                          getTextColor:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                          getIconColor:
                                                              Colors.red,
                                                          getBackgroundColor:
                                                              Constants.primary,
                                                          onTap: () async {
                                                            //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
                                                            // Tuple2<List<Goal>, String>
                                                            //     getGoalDetails =
                                                            //     await updateGoalProvider();

                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                    Duration(
                                                                        milliseconds:
                                                                            400),
                                                                pageBuilder: (_,
                                                                        __,
                                                                        ___) =>
                                                                    GoalsHistory1(
                                                                  getDocId: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getDocId,
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  dataList:
                                                                      dataList ??
                                                                          [],
                                                                ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                          Offset(
                                                                              0,
                                                                              1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                        child,
                                                                  );
                                                                },
                                                              ),
                                                            );

                                                            // Navigator.push(
                                                            //   context,
                                                            //   MaterialPageRoute(
                                                            //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
                                                            //   ),
                                                            // ).then((value) {
                                                            //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                            //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                            // });
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Rewards",
                                                          getImage: "cashback",
                                                          getTextColor:
                                                              FlutterFlowTheme.of(
                                                                      context)
                                                                  .primary,
                                                          getIconColor:
                                                              Colors.black,
                                                          getBackgroundColor:
                                                              Constants
                                                                  .secondary1,
                                                          onTap: () {
                                                            isSavAmntReq =
                                                                false;
                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                    Duration(
                                                                        milliseconds:
                                                                            400),
                                                                pageBuilder: (_,
                                                                        __,
                                                                        ___) =>
                                                                    CashbackDetails(
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  isSavingReq:
                                                                      isSavAmntReq,
                                                                ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                        animation,
                                                                        __,
                                                                        child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                          Offset(
                                                                              0,
                                                                              1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                        child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        // Add more ReusableCertificateSection widgets as needed
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'Shop and Earn', true, 3),
                                            SliverToBoxAdapter(
                                              child: LayoutBuilder(
                                                builder:
                                                    (context, constraints) {
                                                  return Stack(
                                                    alignment: Alignment.center,
                                                    children: [
                                                      Center(
                                                        child: Container(
                                                          width:
                                                              double.infinity,
                                                          // Take full width
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondary,
                                                            borderRadius:
                                                                BorderRadius
                                                                    .only(
                                                              bottomLeft: Radius
                                                                  .circular(0),
                                                              bottomRight:
                                                                  Radius
                                                                      .circular(
                                                                          0),
                                                            ),
                                                          ),
                                                          child:
                                                              GridView.builder(
                                                            gridDelegate:
                                                                SliverGridDelegateWithFixedCrossAxisCount(
                                                              crossAxisCount: 2,
                                                              crossAxisSpacing:
                                                                  10,
                                                              mainAxisSpacing:
                                                                  10,
                                                              childAspectRatio:
                                                                  3 / 2,
                                                            ),
                                                            padding:
                                                                EdgeInsets.all(
                                                                    10),
                                                            itemCount: _singleton
                                                                .shopNowItems
                                                                .length,
                                                            itemBuilder:
                                                                (context,
                                                                    index) {
                                                              return GestureDetector(
                                                                child:
                                                                    GridItemWidget(
                                                                  item: _singleton
                                                                          .shopNowItems[
                                                                      index],
                                                                  showRandomColor:
                                                                      false,
                                                                ),
                                                                onTap:
                                                                    () async {
                                                                  _isTappingAffiliateApp
                                                                          .value =
                                                                      true;
                                                                  String?
                                                                      getApp =
                                                                      _singleton
                                                                          .shopNowItems[
                                                                              index]
                                                                          .title;
                                                                  String
                                                                      getUser =
                                                                      getUserName ??
                                                                          "";

                                                                  String?
                                                                      token =
                                                                      await NotificationService
                                                                          .getDocumentIDsAndData();

                                                                  if (await canLaunch(
                                                                      _singleton
                                                                              .shopNowItems[index]
                                                                              .affiliateLink ??
                                                                          "")) {
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                        "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                    _isTappingAffiliateApp
                                                                            .value =
                                                                        false;
                                                                    await launch(
                                                                        _singleton.shopNowItems[index].affiliateLink ??
                                                                            "");
                                                                  } else {
                                                                    Constants.showToast(
                                                                        "Try Again After SomeTimes",
                                                                        ToastGravity
                                                                            .BOTTOM);
                                                                    _isTappingAffiliateApp
                                                                            .value =
                                                                        false;
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                        "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                    throw 'Could not launch $getApp';
                                                                  }
                                                                },
                                                              );
                                                            },
                                                            physics:
                                                                NeverScrollableScrollPhysics(),
                                                            shrinkWrap:
                                                                true, // Important to wrap in a SingleChildScrollView
                                                          ),
                                                        ),
                                                      ),
                                                      ValueListenableBuilder<
                                                          bool>(
                                                        valueListenable:
                                                            _isTappingAffiliateApp,
                                                        builder: (context,
                                                            isCreating, child) {
                                                          if (isCreating) {
                                                            return Container(
                                                              // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                              child: Center(
                                                                child:
                                                                    CircularProgressIndicator(),
                                                              ),
                                                            );
                                                          }
                                                          return SizedBox
                                                              .shrink();
                                                        },
                                                      ),
                                                    ],
                                                  );
                                                },
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'News For You', false, 3),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                height: 40.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondary,
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    bottomLeft:
                                                        Radius.circular(0),
                                                    bottomRight:
                                                        Radius.circular(0),
                                                  ),
                                                ),
                                                child: SingleChildScrollView(
                                                  child: Column(
                                                    children: [
                                                      Container(
                                                        height: 10.h,
                                                        width: 90.w,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondary1
                                                              .withOpacity(0.6),
                                                          borderRadius:
                                                              BorderRadius.all(
                                                                  Radius
                                                                      .circular(
                                                                          10.0)),
                                                        ),
                                                        child: Stack(children: [
                                                          Positioned.fill(
                                                            child: Align(
                                                              alignment: Alignment
                                                                  .bottomLeft,
                                                              child:
                                                                  Image.asset(
                                                                'images/final/Dashboard/addvertisement1.png',
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      top: 0.0,
                                                                      right:
                                                                          10),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .centerRight,
                                                                child:
                                                                    Container(
                                                                  height: 10.h,
                                                                  width: 50.w,
                                                                  child: Column(
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .spaceAround,
                                                                    children: [
                                                                      Text(
                                                                          "Get Instant",
                                                                          style: Theme.of(context)
                                                                              .textTheme
                                                                              .titleLarge
                                                                              ?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                      Text(
                                                                          "Cashback!",
                                                                          style: Theme.of(context)
                                                                              .textTheme
                                                                              .titleLarge
                                                                              ?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                        ]),
                                                      ),
                                                      Container(
                                                        height: 20.h,
                                                        width: 90.w,
                                                        child: Stack(children: [
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                top: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment:
                                                                    Alignment
                                                                        .topLeft,
                                                                child: Text(
                                                                    "Invite Friends & Earn",
                                                                    style: Theme.of(
                                                                            context)
                                                                        .textTheme
                                                                        .titleSmall
                                                                        ?.copyWith(
                                                                            color:
                                                                                Constants.primary,
                                                                            fontWeight: FontWeight.bold)),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                bottom: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .centerLeft,
                                                                child: RichText(
                                                                  text:
                                                                      TextSpan(
                                                                    text:
                                                                        "For every user you invite and signs up, you can Earn Upto ",
                                                                    style: Theme.of(
                                                                            context)
                                                                        .textTheme
                                                                        .titleSmall
                                                                        ?.copyWith(
                                                                            color:
                                                                                Constants.primary,
                                                                            fontWeight: FontWeight.bold),
                                                                    children: [
                                                                      TextSpan(
                                                                        text:
                                                                            "₹100",
                                                                        style:
                                                                            TextStyle(
                                                                          fontWeight:
                                                                              FontWeight.bold,
                                                                        ),
                                                                      ),
                                                                      TextSpan(
                                                                        text:
                                                                            ".",
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .only(
                                                                top: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .bottomLeft,
                                                                child: InkWell(
                                                                  splashColor:
                                                                      FlutterFlowTheme.of(
                                                                              context)
                                                                          .secondary,
                                                                  onTap: () {
                                                                    shareApp(
                                                                        context);
                                                                  },
                                                                  child:
                                                                      Container(
                                                                    height: 5.h,
                                                                    width: 40.w,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: FlutterFlowTheme.of(
                                                                              context)
                                                                          .primary,
                                                                      borderRadius:
                                                                          BorderRadius.all(
                                                                              Radius.circular(10.0)),
                                                                    ),
                                                                    child:
                                                                        Center(
                                                                      child: Text(
                                                                          "Share",
                                                                          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                                                                              color: Constants.secondary,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold)),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                        ]),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              );
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                );
              } catch (e) {
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Center(
                    child: Text("Problem in Adding Pricing Details..."),
                  ),
                );
              }
            }
          } else {
            isReffererPricingPresent = false;
            return Container(
              color: Constants.secondary,
              height: 100.h,
              child: Stack(
                children: [
                  // Portion A (Background)
                  Container(
                      height: 60.h,
                      child: Stack(
                        children: [
                          RefreshIndicator(
                            onRefresh: _handleRefresh,
                            child: CustomScrollView(
                              slivers: [
                                SliverToBoxAdapter(
                                  child: Center(
                                    child: Container(
                                      height: 10.h,
                                      width: 100.w,
                                      decoration: BoxDecoration(
                                        color: Constants.secondary,
                                        borderRadius: BorderRadius.only(
                                          bottomLeft: Radius.circular(0),
                                          bottomRight: Radius.circular(0),
                                        ),
                                      ),
                                      child: Stack(children: [
                                        Positioned.fill(
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                left: 10.0, right: 0),
                                            child: Align(
                                              alignment: Alignment.centerLeft,
                                              child: Consumer(builder:
                                                  (context, ref, child) {
                                                double? getNetBals =
                                                    ref.watch(getUserNetBal);

                                                // getNetBals = 0;

                                                return Container(
                                                  width: 100.w,
                                                  child: SingleChildScrollView(
                                                    child: Column(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceEvenly,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        // Consumer(builder:
                                                        //     (context, ref,
                                                        //         child) {
                                                        //   double? getNetBals =
                                                        //       ref.watch(
                                                        //           getUserNetBal);
                                                        //
                                                        //   getNetBals = 0;

                                                        // return
                                                        Text(
                                                            '₹' +
                                                                getNetBals
                                                                    .toString(),
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: Theme.of(
                                                                    context)
                                                                .textTheme
                                                                .headlineLarge),
                                                        // }),
                                                        Text(
                                                          getNetBals.toString() ==
                                                                  "0.0"
                                                              ? "Lets Start Earning"
                                                              : "Is your Saved Earnings",
                                                          textAlign:
                                                              TextAlign.start,
                                                          style:
                                                              Theme.of(context)
                                                                  .textTheme
                                                                  .titleSmall,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                );
                                              }),
                                            ),
                                          ),

                                          // Add more Positioned widgets for additional images
                                        ),
                                      ]),
                                    ),
                                  ),
                                ),
                                makeTitleHeader('My Goals', true, 0),

                                SliverToBoxAdapter(
                                  child: StreamBuilder<QuerySnapshot>(
                                    stream: firestore
                                        .collection('users')
                                        .doc(ref
                                            .read(UserDashListProvider.notifier)
                                            .getDocId)
                                        .collection('goals')
                                        .snapshots(),
                                    builder: (BuildContext context,
                                        AsyncSnapshot<QuerySnapshot> snapshot) {
                                      if (snapshot.hasError) {
                                        return Center(
                                          child:
                                              Text('Error: ${snapshot.error}'),
                                        );
                                      }

                                      if (snapshot.connectionState ==
                                          ConnectionState.waiting) {
                                        return Center(
                                          child: SizedBox(
                                            child: CircularProgressIndicator(),
                                            height: 20,
                                            width: 20,
                                          ),
                                        );
                                      }

                                      ref
                                          .read(UserDashListProvider.notifier)
                                          .goalDocuments = snapshot.data!.docs;

                                      //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions

                                      //---------------------

                                      goalList = snapshot.data!.docs
                                          .map((doc) {
                                            final data = doc.data()
                                                as Map<String, dynamic>;
                                            final goalTitle = data['goalTitle'];
                                            final goalTarget =
                                                data['goalTarget'];
                                            final goalPriority =
                                                data['goalPriority'];
                                            final goalToDelete =
                                                data['goalToDelete'];
                                            // final goalIconName = data['goalIcon'];

                                            return Goal(
                                                goalTitle,
                                                goalPriority,
                                                goalTarget,
                                                0.0,
                                                "",
                                                goalToDelete,
                                                doc.id,
                                                Colors.transparent,
                                                Icons.add);
                                          })
                                          .whereType<Goal>()
                                          .toList();

                                      //----------------------------------

                                      print("goals stream build called");
                                      return Container(
                                        child: HorizontalGridView1(
                                          data: snapshot.data!.docs,
                                          getMobile: widget.getMobile,
                                          dataList: dataList,
                                          isAdmin: false,
                                        ),
                                      );
                                    },
                                  ),
                                ),
                                (isShowMeatSection ?? true)
                                    ? makeTitleHeader('Meat Basket', false, 1)
                                    : SliverToBoxAdapter(
                                        child: SizedBox(
                                        height: 0,
                                      )),
                                (isShowMeatSection ?? true)
                                    ? SliverToBoxAdapter(
                                        child: Container(
                                          color: Constants.secondary,
                                          height: 22.h,
                                          child: Padding(
                                            padding: const EdgeInsets.all(0.0),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Row(
                                                    children: [
                                                      Expanded(
                                                        child: GestureDetector(
                                                          child: Card(
                                                            color: Constants
                                                                .secondary2,
                                                            elevation: 4,
                                                            shape:
                                                                RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          12),
                                                            ),
                                                            child: Column(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .center,
                                                              children: [
                                                                ClipOval(
                                                                  child: Image
                                                                      .asset(
                                                                    items[0][
                                                                        'image']!,
                                                                    height: 80,
                                                                    width: 80,
                                                                    fit: BoxFit
                                                                        .cover,
                                                                  ),
                                                                ),
                                                                SizedBox(
                                                                    height: 10),
                                                                Text(
                                                                  items[0][
                                                                      'title']!,
                                                                  style:
                                                                      TextStyle(
                                                                    fontSize:
                                                                        15,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                          onTap: () {
                                                            Navigator.push(
                                                              context,
                                                              MaterialPageRoute(
                                                                builder: (context) => DetailScreen(
                                                                    title: items[0]
                                                                            [
                                                                            'title'] ??
                                                                        "",
                                                                    isReffererPricingPresent:
                                                                        isReffererPricingPresent ??
                                                                            false),
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                      Expanded(
                                                        child: GestureDetector(
                                                          onTap: () {
                                                            Navigator.push(
                                                              context,
                                                              MaterialPageRoute(
                                                                builder: (context) => DetailScreen(
                                                                    title: items[
                                                                            1][
                                                                        'title']!,
                                                                    isReffererPricingPresent:
                                                                        isReffererPricingPresent ??
                                                                            false),
                                                              ),
                                                            );
                                                          },
                                                          child: Card(
                                                            color: Constants
                                                                .secondary2,
                                                            elevation: 4,
                                                            shape:
                                                                RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          12),
                                                            ),
                                                            child: Column(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .center,
                                                              children: [
                                                                ClipOval(
                                                                  child: Image
                                                                      .asset(
                                                                    items[1][
                                                                        'image']!,
                                                                    height: 80,
                                                                    width: 80,
                                                                    fit: BoxFit
                                                                        .cover,
                                                                  ),
                                                                ),
                                                                SizedBox(
                                                                    height: 10),
                                                                Text(
                                                                  items[1][
                                                                      'title']!,
                                                                  style:
                                                                      TextStyle(
                                                                    fontSize:
                                                                        15,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold,
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                  Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 8.0,
                                                                  left: 8.0,
                                                                  right: 8.0),
                                                          child: Container(
                                                            decoration:
                                                                BoxDecoration(
                                                              gradient:
                                                                  LinearGradient(
                                                                colors: [
                                                                  Constants
                                                                      .primary1,
                                                                  Constants
                                                                      .secondary4
                                                                ],
                                                                begin: Alignment
                                                                    .topLeft,
                                                                end: Alignment
                                                                    .bottomRight,
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            child:
                                                                ElevatedButton(
                                                              style:
                                                                  ElevatedButton
                                                                      .styleFrom(
                                                                backgroundColor:
                                                                    Colors
                                                                        .transparent,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              10.0), // Set the border radius here
                                                                ), // Set the background color here
                                                              ),
                                                              onPressed: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                            OrderedMeatList(
                                                                      getReffererType:
                                                                          ref.read(UserDashListProvider.notifier).getReffererType ??
                                                                              "0",
                                                                    ),
                                                                  ),
                                                                ).then((value) {
                                                                  //todo:- below code refresh firebase records automatically when come back to same screen
                                                                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                });
                                                              },
                                                              child: Text(
                                                                  "My Orders",
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          color: Constants
                                                                              .secondary,
                                                                          overflow: TextOverflow
                                                                              .ellipsis,
                                                                          fontWeight:
                                                                              FontWeight.bold)

                                                                  // TextStyle(
                                                                  //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                  ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      )
                                    : SliverToBoxAdapter(
                                        child: SizedBox(
                                        height: 0,
                                      )),

                                makeTitleHeader('Recent Transactions', true, 2),

                                //todo:- 26.1.24 second approach
                                SliverToBoxAdapter(
                                  child: StreamBuilder<List<Transactionss>>(
                                    stream: ref
                                        .read(UserDashListProvider.notifier)
                                        .transactionsStream,
                                    builder: (context, snapshot) {
                                      if (snapshot.connectionState ==
                                          ConnectionState.waiting) {
                                        return Center(
                                            child: SizedBox(
                                          child: CircularProgressIndicator(),
                                          height: 20,
                                          width: 20,
                                        ));
                                      } else if (snapshot.hasError) {
                                        return Text('Error: ${snapshot.error}');
                                      } else {
                                        // Use the snapshot.data to build your UI
                                        dataList = snapshot.data;

                                        // If dataList is null or empty, you can handle it accordingly
                                        if (dataList == null ||
                                            dataList!.isEmpty) {
                                          return Center(
                                            child: Column(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.center,
                                              children: [
                                                InkWell(
                                                  child: Image.asset(
                                                    'images/final/SecurityCode/MPin.png',
                                                    width: 150,
                                                    height: 150,
                                                  ),
                                                  onTap: () {
                                                    Navigator.push(
                                                      context,
                                                      PageRouteBuilder(
                                                        transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                    400),
                                                        pageBuilder:
                                                            (_, __, ___) =>
                                                                SaveMoney(
                                                          getMobile:
                                                              widget.getMobile,
                                                          getUserName: ref
                                                              .read(
                                                                  UserDashListProvider
                                                                      .notifier)
                                                              .getUser,
                                                          getGoalDocId: "",
                                                          getTransData:
                                                              dataList,
                                                          getPaymentService:
                                                              PaymentService
                                                                  .maakaMoney,
                                                        ),
                                                        transitionsBuilder: (_,
                                                            animation,
                                                            __,
                                                            child) {
                                                          return SlideTransition(
                                                            position:
                                                                Tween<Offset>(
                                                              begin:
                                                                  Offset(0, 1),
                                                              // You can adjust the start position
                                                              end: Offset
                                                                  .zero, // You can adjust the end position
                                                            ).animate(
                                                                    animation),
                                                            child: child,
                                                          );
                                                        },
                                                      ),
                                                    );
                                                  },
                                                ),
                                                SizedBox(height: 16),
                                                Text(
                                                  "Tap to Start Saving Money!",
                                                  style: TextStyle(
                                                      fontSize: 20,
                                                      fontWeight:
                                                          FontWeight.bold),
                                                  textAlign: TextAlign.center,
                                                ),
                                                SizedBox(height: 16),
                                                Text(
                                                  "Cheers to Smart financial moves and Savings Plans.",
                                                  textAlign: TextAlign.center,
                                                ),
                                              ],
                                            ),
                                          );
                                        }

                                        // Your logic to build the UI using the dataList
                                        // ...
                                        print(
                                            "transaction stream build called");
                                        return ListView.builder(
                                          shrinkWrap: true,
                                          physics:
                                              NeverScrollableScrollPhysics(),
                                          itemCount: dataList?.length,
                                          itemBuilder: (context, index) {
                                            if (index > 2) {
                                              return SizedBox
                                                  .shrink(); // Return an empty widget for transactions beyond the last three
                                            }

                                            final document = dataList?[index];

                                            final amount = document?.amount;
                                            final transType =
                                                document?.isDeposit;

                                            final date = document?.date;
                                            final mobile = document?.mobile;
                                            final docId = document?.docId;
                                            final interest = document?.interest;
                                            final timeStamp =
                                                document?.timmeStamp;

                                            // Replace this with your Timestamp object
                                            Timestamp timestamp = timeStamp ??
                                                Timestamp(000, 000);
                                            // Convert Timestamp to DateTime
                                            DateTime dateTime =
                                                timestamp.toDate();

                                            // Format date and time
                                            String formattedDateTime =
                                                DateFormat('dd-MM-yyyy h:mm a')
                                                    .format(dateTime);

                                            //todo:-  adding estimated time for withdrawal request from current time

                                            if (transType == false &&
                                                amount == 0) {
                                              DateTime estimatedDateTime =
                                                  dateTime.add(
                                                      Duration(minutes: 20));
                                              formattedDateTime =
                                                  DateFormat('h:mm a').format(
                                                      estimatedDateTime);
                                            }

                                            String getFinInt = interest == null
                                                ? 0.0.toString()
                                                : interest.toStringAsFixed(2);

                                            return Container(
                                              color: Constants.secondary
                                                  .withOpacity(0.95),
                                              child: Padding(
                                                padding:
                                                    const EdgeInsets.all(5),
                                                child: Card(
                                                  shape: RoundedRectangleBorder(
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            6.0),
                                                  ),
                                                  color: amount == 0
                                                      ? Constants.secondary
                                                      : Constants.secondary,
                                                  elevation: 4.0,
                                                  child: ListTile(
                                                    leading: Card(
                                                      color: transType == true
                                                          ? FlutterFlowTheme.of(
                                                                  context)
                                                              .primary
                                                          : FlutterFlowTheme.of(
                                                                  context)
                                                              .secondary1,
                                                      clipBehavior: Clip
                                                          .antiAliasWithSaveLayer,
                                                      elevation: 5.0,
                                                      shape:
                                                          RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8.0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .all(8.0),
                                                        child: Icon(
                                                          transType == true
                                                              ? amount == 0
                                                                  ? Icons
                                                                      .lock_clock
                                                                  : Icons
                                                                      .arrow_forward
                                                              : amount == 0
                                                                  ? Icons
                                                                      .lock_clock
                                                                  : Icons
                                                                      .arrow_back,
                                                          color: Constants
                                                              .secondary,
                                                          size: 24.0,
                                                        ),
                                                      ),
                                                    ),
                                                    title: Text(
                                                      transType == true
                                                          ? amount == 0
                                                              ? "Processing Payment"
                                                              : "Deposit"
                                                          : amount == 0
                                                              ? "Processing Request"
                                                              : "Withdrawn",
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .bodyLarge
                                                          ?.copyWith(
                                                              color: amount == 0
                                                                  ? Constants
                                                                      .primary
                                                                  : Constants
                                                                      .primary,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .bold,
                                                              overflow:
                                                                  TextOverflow
                                                                      .ellipsis),
                                                    ),
                                                    subtitle: Text(
                                                      transType == true
                                                          ? amount == 0
                                                              ? formattedDateTime
                                                                  .toString()
                                                                  .toUpperCase()
                                                              : formattedDateTime
                                                                  .toString()
                                                                  .toUpperCase()
                                                          : amount == 0
                                                              ? "Receive Money before - $formattedDateTime"
                                                              : formattedDateTime
                                                                  .toString()
                                                                  .toUpperCase(),
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .bodyMedium
                                                          ?.copyWith(
                                                              color: amount == 0
                                                                  ? Constants
                                                                      .secondary3
                                                                  : Colors
                                                                      .black,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .bold,
                                                              overflow:
                                                                  TextOverflow
                                                                      .ellipsis),
                                                    ),
                                                    trailing: Container(
                                                      child: Column(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .end,
                                                        children: [
                                                          amount == 0
                                                              ? Text("")
                                                              : Text(
                                                                  transType ==
                                                                          true
                                                                      ? "+" +
                                                                          '$amount' +
                                                                          ' ₹'
                                                                      : "" +
                                                                          '$amount' +
                                                                          ' ₹',
                                                                  style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                      color: transType ==
                                                                              true
                                                                          ? Constants
                                                                              .deposite
                                                                          : Constants
                                                                              .withdrawal,
                                                                      overflow:
                                                                          TextOverflow
                                                                              .ellipsis,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .bold),
                                                                ),
                                                          amount == 0
                                                              ? Text("")
                                                              : Visibility(
                                                                  visible:
                                                                      transType ==
                                                                              true
                                                                          ? true
                                                                          : false,
                                                                  child: Text(
                                                                    transType ==
                                                                            true
                                                                        ? "+" +
                                                                            '$getFinInt' +
                                                                            ' ₹'
                                                                        : '',
                                                                    style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                        color: transType ==
                                                                                true
                                                                            ? Colors
                                                                                .grey
                                                                            : Colors
                                                                                .red,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold),
                                                                  ),
                                                                ),
                                                        ],
                                                      ),
                                                    ),
                                                    onTap: () {},
                                                  ),
                                                ),
                                              ),
                                            );
                                          },
                                        );
                                      }
                                    },
                                  ),
                                ),
                              ],
                            ),
                          ),
                          (isLoading ?? false)
                              ? isRefresh == true
                                  ? Container()
                                  : Container(
                                      color: Colors.transparent,
                                      child: Center(
                                          child: CircularProgressIndicator(
                                        color: isRefresh == true
                                            ? Colors.transparent
                                            : FlutterFlowTheme.of(context)
                                                .primary,
                                      )),
                                    )
                              : Container()
                        ],
                      )),
                  // Portion B (Overlay)
                  Positioned(
                    bottom: 0,
                    left: 0,
                    right: 0,
                    child: GestureDetector(
                      onVerticalDragUpdate: _onVerticalDragUpdate,
                      onVerticalDragEnd: _onVerticalDragEnd,
                      behavior: HitTestBehavior.translucent,
                      child: ValueListenableBuilder<double>(
                        valueListenable: portionBHeightNotifier,
                        builder: (context, portionBHeight, child) {
                          return Container(
                            height: portionBHeight,
                            decoration: BoxDecoration(
                              color: Colors.lightBlue.withOpacity(0.15),
                              borderRadius: new BorderRadius.only(
                                topLeft: Radius.circular(35),
                                topRight: Radius.circular(35),
                              ),
                            ), // Replace with your overlay color
                            child: Column(
                              children: [
                                SizedBox(
                                  height: 1.h,
                                ),
                                Container(
                                  height: 1.h,
                                  width: 15.w,
                                  decoration: BoxDecoration(
                                    color: Constants.secondary,
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: const EdgeInsets.only(top: 20.0),
                                    child: CustomScrollView(
                                      // physics: portionBHeight == MediaQuery.of(context).size.height
                                      //     ? AlwaysScrollableScrollPhysics()
                                      //     : NeverScrollableScrollPhysics(),
                                      physics: NeverScrollableScrollPhysics(),
                                      slivers: [
                                        makeTitleHeader('Shopify', false, 4),
                                        SliverToBoxAdapter(
                                          child: Center(
                                            child: Container(
                                              alignment: Alignment.center,
                                              height: 17.h,
                                              width: 100.w,
                                              decoration: BoxDecoration(
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .secondary,
                                                borderRadius: BorderRadius.only(
                                                  bottomLeft:
                                                      Radius.circular(0),
                                                  bottomRight:
                                                      Radius.circular(0),
                                                ),
                                              ),
                                              child: StreamBuilder(
                                                stream: FirebaseFirestore
                                                    .instance
                                                    .collection('banners')
                                                    .snapshots(),
                                                builder: (context,
                                                    AsyncSnapshot<QuerySnapshot>
                                                        snapshot) {
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                        child:
                                                            CircularProgressIndicator());
                                                  }

                                                  if (snapshot.data!.docs ==
                                                          null ||
                                                      snapshot
                                                          .data!.docs.isEmpty) {
                                                    return Center(
                                                      child: Column(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                        children: [
                                                          InkWell(
                                                            child: Image.asset(
                                                              'images/final/SecurityCode/MPin.png',
                                                              width: 80,
                                                              height: 80,
                                                            ),
                                                            onTap: () {},
                                                          ),
                                                          Text(
                                                            "New Offers are About to Load!",
                                                            style: TextStyle(
                                                                fontSize: 20,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .bold),
                                                            textAlign: TextAlign
                                                                .center,
                                                          ),
                                                          Text(
                                                            "Cheers to Smart Buying Plans.",
                                                            textAlign: TextAlign
                                                                .center,
                                                          ),
                                                        ],
                                                      ),
                                                    );
                                                  }

                                                  return GridView.builder(
                                                    physics:
                                                        NeverScrollableScrollPhysics(),
                                                    padding:
                                                        const EdgeInsets.all(
                                                            8.0),
                                                    gridDelegate:
                                                        SliverGridDelegateWithFixedCrossAxisCount(
                                                      crossAxisCount: 3,
                                                      crossAxisSpacing: 8.0,
                                                      mainAxisSpacing: 8.0,
                                                      childAspectRatio:
                                                          1.0, // Adjust this to change item size ratio
                                                    ),
                                                    itemCount: snapshot
                                                        .data!.docs.length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      if (index > 2) {
                                                        isProductCountExceeds =
                                                            true;
                                                        return SizedBox
                                                            .shrink(); // Return an empty widget for transactions beyond the last three
                                                      } else {
                                                        isProductCountExceeds =
                                                            false;
                                                      }

                                                      var doc = snapshot
                                                          .data!.docs[index];
                                                      List<
                                                          dynamic> imageUrls = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'fileUrls') ??
                                                              false
                                                          ? doc['fileUrls']
                                                          : [];

                                                      String getTitle = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'title') ??
                                                              false
                                                          ? doc['title']
                                                          : "";

                                                      String getDescription = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'description') ??
                                                              false
                                                          ? doc['description']
                                                          : "";

                                                      String getAmount = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'amount') ??
                                                              false
                                                          ? doc['amount']
                                                          : "";

                                                      String getMinBargainAmount = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'minBargainAmount') ??
                                                              false
                                                          ? doc[
                                                              'minBargainAmount']
                                                          : "";

                                                      String getProdDetails = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'productDetails') ??
                                                              false
                                                          ? doc[
                                                              'productDetails']
                                                          : "";

                                                      String getProdSpec = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'productSpec') ??
                                                              false
                                                          ? doc['productSpec']
                                                          : "";

                                                      String getAffiliate = (doc
                                                                          .data()
                                                                      as Map<
                                                                          String,
                                                                          dynamic>?)
                                                                  ?.containsKey(
                                                                      'affiliateLink') ??
                                                              false
                                                          ? doc['affiliateLink']
                                                          : "";

                                                      return GridTile(
                                                        child: GestureDetector(
                                                          onTap: () {
                                                            Navigator.push(
                                                              context,
                                                              MaterialPageRoute(
                                                                builder:
                                                                    (context) =>
                                                                        ProductDetailScreen(
                                                                  title:
                                                                      getTitle,
                                                                  description:
                                                                      getDescription,
                                                                  affiliateLink:
                                                                      getAffiliate,
                                                                  prodDetails:
                                                                      getProdDetails,
                                                                  prodSpec:
                                                                      getProdSpec,
                                                                  imageUrls:
                                                                      imageUrls,
                                                                  amount:
                                                                      getAmount,
                                                                  userName: ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .getUser ??
                                                                      "",
                                                                  getAdminType: ref
                                                                          .read(
                                                                              UserDashListProvider.notifier)
                                                                          .getAdminType ??
                                                                      "",
                                                                  minBargainAmount:
                                                                      getMinBargainAmount,
                                                                  getHeroTag:
                                                                      'imageHero$index',
                                                                ),
                                                              ),
                                                            );
                                                          },
                                                          child: Container(
                                                            decoration:
                                                                BoxDecoration(
                                                              color: FlutterFlowTheme
                                                                      .of(
                                                                          context)
                                                                  .secondary
                                                                  .withOpacity(
                                                                      0.4),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          15.0),
                                                            ),
                                                            child: Column(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .spaceEvenly,
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                Expanded(
                                                                  flex: 5,
                                                                  child:
                                                                      Container(
                                                                    // Adjust the height to make it smaller
                                                                    width:
                                                                        100.w,
                                                                    // Adjust the width to make it smaller
                                                                    child:
                                                                        ClipRRect(
                                                                      borderRadius: BorderRadius.only(
                                                                          topLeft: Radius.circular(
                                                                              15),
                                                                          topRight: Radius.circular(
                                                                              15),
                                                                          bottomLeft: Radius.circular(
                                                                              15),
                                                                          bottomRight:
                                                                              Radius.circular(15)),
                                                                      child: imageUrls
                                                                              .isNotEmpty
                                                                          ? Hero(
                                                                              tag: 'imageHero$index',
                                                                              child: Image.network(
                                                                                imageUrls[0],
                                                                                fit: BoxFit.fitWidth,
                                                                                loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                                                                                  if (loadingProgress == null) {
                                                                                    return child;
                                                                                  } else {
                                                                                    return Center(
                                                                                      child: CircularProgressIndicator(
                                                                                        value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                                                      ),
                                                                                    );
                                                                                  }
                                                                                },
                                                                              ),
                                                                            )
                                                                          : Container(
                                                                              color: Colors.grey),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  flex: 3,
                                                                  child: Column(
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    children: [
                                                                      Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                                8.0),
                                                                        child:
                                                                            Row(
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.start,
                                                                          children: [
                                                                            Expanded(
                                                                              child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                                8.0),
                                                                        child:
                                                                            Row(
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.start,
                                                                          children: [
                                                                            Expanded(
                                                                              child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            height: 10.h,
                                            width: 100.w,
                                            decoration: BoxDecoration(
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              borderRadius: BorderRadius.only(
                                                bottomLeft: Radius.circular(0),
                                                bottomRight: Radius.circular(0),
                                              ),
                                            ),
                                            child: Padding(
                                              padding:
                                                  const EdgeInsets.all(8.0),
                                              child: Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceEvenly,
                                                children: [
                                                  Expanded(
                                                    child: Container(
                                                      child: ElevatedButton(
                                                        style: ElevatedButton
                                                            .styleFrom(
                                                          backgroundColor:
                                                              Constants.primary,
                                                          shape:
                                                              RoundedRectangleBorder(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        10.0), // Set the border radius here
                                                          ), // Set the background color here
                                                        ),
                                                        onPressed: () async {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  ProductListScreen(
                                                                userName: ref
                                                                        .read(UserDashListProvider
                                                                            .notifier)
                                                                        .getUser ??
                                                                    "",
                                                              ),
                                                            ),
                                                          ).then((value) {
                                                            //todo:- below code refresh firebase records automatically when come back to same screen
                                                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          });
                                                        },
                                                        child: Text('More',
                                                            style: Theme.of(
                                                                    context)
                                                                .textTheme
                                                                .bodyMedium
                                                                ?.copyWith(
                                                                    color: Constants
                                                                        .secondary,
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold)),
                                                      ),
                                                      height: 5.h,
                                                      width: 50.w,
                                                    ),
                                                  ),
                                                  SizedBox(
                                                    width: 10,
                                                  ),
                                                  Expanded(
                                                    child: Container(
                                                      child: ElevatedButton(
                                                        style: ElevatedButton
                                                            .styleFrom(
                                                          backgroundColor:
                                                              Constants.primary,
                                                          shape:
                                                              RoundedRectangleBorder(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        10.0), // Set the border radius here
                                                          ), // Set the background color here
                                                        ),
                                                        onPressed: () async {
                                                          // Navigator.push(
                                                          //   context,
                                                          //   MaterialPageRoute(
                                                          //     builder: (context) =>
                                                          //         ProductListScreen(
                                                          //       userName: ref
                                                          //               .read(
                                                          //                   UserDashListProvider
                                                          //                       .notifier)
                                                          //               .getUser ??
                                                          //           "",
                                                          //     ),
                                                          //   ),
                                                          // ).then((value) {
                                                          //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                          //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          // });

                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  AffiliateListScreen(
                                                                      userName:
                                                                          ref.read(UserDashListProvider.notifier).getUser ??
                                                                              ""),
                                                            ),
                                                          ).then((value) {
                                                            //todo:- below code refresh firebase records automatically when come back to same screen
                                                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          });
                                                        },
                                                        child: Text(
                                                          'Shop Now',
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold),
                                                        ),
                                                      ),
                                                      height: 5.h,
                                                      width: 50.w,
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'Quick Access', false, 1),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            color: Constants.secondary,
                                            height: 15.h,
                                            child: Padding(
                                              padding:
                                                  const EdgeInsets.all(0.0),
                                              child: Card(
                                                color: Constants.secondary,
                                                elevation: 0,
                                                shape: RoundedRectangleBorder(
                                                  borderRadius:
                                                      BorderRadius.circular(0),
                                                  side: BorderSide(
                                                      color: Colors.transparent,
                                                      width: 1),
                                                ),
                                                child: Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceAround,
                                                  children: [
                                                    ReusableCertificateSection(
                                                      getText: "Save ₹",
                                                      getImage: "saveMoney",
                                                      getTextColor:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      getIconColor:
                                                          Constants.secondary,
                                                      getBackgroundColor:
                                                          Constants.primary,
                                                      onTap: () {
                                                        // Navigator.push(
                                                        //   context,
                                                        //   PageRouteBuilder(
                                                        //     transitionDuration:
                                                        //         Duration(milliseconds: 400),
                                                        //     pageBuilder: (_, __, ___) =>
                                                        //         SaveMoney(
                                                        //       getMobile: widget.getMobile,
                                                        //       getUserName: ref
                                                        //           .read(UserDashListProvider
                                                        //               .notifier)
                                                        //           .getUser,
                                                        //       getGoalDocId: "",
                                                        //       getTransData: dataList,
                                                        //     ),
                                                        //     transitionsBuilder:
                                                        //         (_, animation, __, child) {
                                                        //       return SlideTransition(
                                                        //         position: Tween<Offset>(
                                                        //           begin: Offset(0, 1),
                                                        //           // You can adjust the start position
                                                        //           end: Offset
                                                        //               .zero, // You can adjust the end position
                                                        //         ).animate(animation),
                                                        //         child: child,
                                                        //       );
                                                        //     },
                                                        //   ),
                                                        // );

                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder: (_, __,
                                                                    ___) =>
                                                                GoalsHistory1(
                                                              getDocId: ref
                                                                  .read(UserDashListProvider
                                                                      .notifier)
                                                                  .getDocId,
                                                              getMobile: widget
                                                                  .getMobile,
                                                              dataList:
                                                                  dataList ??
                                                                      [],
                                                            ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Request",
                                                      getImage: "moneyReq",
                                                      getTextColor:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      getIconColor:
                                                          Colors.black,
                                                      getBackgroundColor:
                                                          Constants.secondary1,
                                                      onTap: () {
                                                        double?
                                                            getFinalGoalAchievedAmount =
                                                            findGoalAchievedAmount();

                                                        isSavAmntReq = true;
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder: (_, __,
                                                                    ___) =>
                                                                RequestMoney(
                                                              getMobile: widget
                                                                  .getMobile,
                                                              isSavingReq:
                                                                  isSavAmntReq,
                                                              getUserName: ref
                                                                  .read(UserDashListProvider
                                                                      .notifier)
                                                                  .getUser,
                                                              getReqAmnt: "",
                                                              getGoalDocId: "",
                                                              getGoalTargetAmnt:
                                                                  "",
                                                              goalAmount:
                                                                  getFinalGoalAchievedAmount ??
                                                                      0.0,
                                                            ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Goals",

                                                      ///Offers
                                                      getImage: "Goal",
                                                      getTextColor:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      getIconColor: Colors.red,
                                                      getBackgroundColor:
                                                          Constants.primary,
                                                      onTap: () async {
                                                        //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
                                                        // Tuple2<List<Goal>, String>
                                                        //     getGoalDetails =
                                                        //     await updateGoalProvider();

                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder: (_, __,
                                                                    ___) =>
                                                                GoalsHistory1(
                                                              getDocId: ref
                                                                  .read(UserDashListProvider
                                                                      .notifier)
                                                                  .getDocId,
                                                              getMobile: widget
                                                                  .getMobile,
                                                              dataList:
                                                                  dataList ??
                                                                      [],
                                                            ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );

                                                        // Navigator.push(
                                                        //   context,
                                                        //   MaterialPageRoute(
                                                        //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
                                                        //   ),
                                                        // ).then((value) {
                                                        //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                        //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        // });
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Rewards",
                                                      getImage: "cashback",
                                                      getTextColor:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .primary,
                                                      getIconColor:
                                                          Colors.black,
                                                      getBackgroundColor:
                                                          Constants.secondary1,
                                                      onTap: () {
                                                        isSavAmntReq = false;
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                        400),
                                                            pageBuilder: (_, __,
                                                                    ___) =>
                                                                CashbackDetails(
                                                              getMobile: widget
                                                                  .getMobile,
                                                              isSavingReq:
                                                                  isSavAmntReq,
                                                            ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                    __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    // Add more ReusableCertificateSection widgets as needed
                                                  ],
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'Shop and Earn', true, 3),
                                        SliverToBoxAdapter(
                                          child: LayoutBuilder(
                                            builder: (context, constraints) {
                                              return Stack(
                                                alignment: Alignment.center,
                                                children: [
                                                  Center(
                                                    child: Container(
                                                      width: double.infinity,
                                                      // Take full width
                                                      decoration: BoxDecoration(
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .secondary,
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          bottomLeft:
                                                              Radius.circular(
                                                                  0),
                                                          bottomRight:
                                                              Radius.circular(
                                                                  0),
                                                        ),
                                                      ),
                                                      child: GridView.builder(
                                                        gridDelegate:
                                                            SliverGridDelegateWithFixedCrossAxisCount(
                                                          crossAxisCount: 2,
                                                          crossAxisSpacing: 10,
                                                          mainAxisSpacing: 10,
                                                          childAspectRatio:
                                                              3 / 2,
                                                        ),
                                                        padding:
                                                            EdgeInsets.all(10),
                                                        itemCount: _singleton
                                                            .shopNowItems
                                                            .length,
                                                        itemBuilder:
                                                            (context, index) {
                                                          return GestureDetector(
                                                            child:
                                                                GridItemWidget(
                                                              item: _singleton
                                                                      .shopNowItems[
                                                                  index],
                                                              showRandomColor:
                                                                  false,
                                                            ),
                                                            onTap: () async {
                                                              _isTappingAffiliateApp
                                                                  .value = true;
                                                              String? getApp =
                                                                  _singleton
                                                                      .shopNowItems[
                                                                          index]
                                                                      .title;
                                                              String getUser =
                                                                  getUserName ??
                                                                      "";

                                                              String? token =
                                                                  await NotificationService
                                                                      .getDocumentIDsAndData();

                                                              if (await canLaunch(_singleton
                                                                      .shopNowItems[
                                                                          index]
                                                                      .affiliateLink ??
                                                                  "")) {
                                                                await NotificationService
                                                                    .postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                        "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                _isTappingAffiliateApp
                                                                        .value =
                                                                    false;
                                                                await launch(_singleton
                                                                        .shopNowItems[
                                                                            index]
                                                                        .affiliateLink ??
                                                                    "");
                                                              } else {
                                                                Constants.showToast(
                                                                    "Try Again After SomeTimes",
                                                                    ToastGravity
                                                                        .BOTTOM);
                                                                _isTappingAffiliateApp
                                                                        .value =
                                                                    false;
                                                                await NotificationService
                                                                    .postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                        "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                throw 'Could not launch $getApp';
                                                              }
                                                            },
                                                          );
                                                        },
                                                        physics:
                                                            NeverScrollableScrollPhysics(),
                                                        shrinkWrap:
                                                            true, // Important to wrap in a SingleChildScrollView
                                                      ),
                                                    ),
                                                  ),
                                                  ValueListenableBuilder<bool>(
                                                    valueListenable:
                                                        _isTappingAffiliateApp,
                                                    builder: (context,
                                                        isCreating, child) {
                                                      if (isCreating) {
                                                        return Container(
                                                          // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                          child: Center(
                                                            child:
                                                                CircularProgressIndicator(),
                                                          ),
                                                        );
                                                      }
                                                      return SizedBox.shrink();
                                                    },
                                                  ),
                                                ],
                                              );
                                            },
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'News For You', false, 3),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            height: 40.h,
                                            width: 100.w,
                                            decoration: BoxDecoration(
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              borderRadius: BorderRadius.only(
                                                bottomLeft: Radius.circular(0),
                                                bottomRight: Radius.circular(0),
                                              ),
                                            ),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Container(
                                                    height: 10.h,
                                                    width: 90.w,
                                                    decoration: BoxDecoration(
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .secondary1
                                                              .withOpacity(0.6),
                                                      borderRadius:
                                                          BorderRadius.all(
                                                              Radius.circular(
                                                                  10.0)),
                                                    ),
                                                    child: Stack(children: [
                                                      Positioned.fill(
                                                        child: Align(
                                                          alignment: Alignment
                                                              .bottomLeft,
                                                          child: Image.asset(
                                                            'images/final/Dashboard/addvertisement1.png',
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 0.0,
                                                                  right: 10),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .centerRight,
                                                            child: Container(
                                                              height: 10.h,
                                                              width: 50.w,
                                                              child: Column(
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceAround,
                                                                children: [
                                                                  Text(
                                                                      "Get Instant",
                                                                      style: Theme.of(
                                                                              context)
                                                                          .textTheme
                                                                          .titleLarge
                                                                          ?.copyWith(
                                                                              color: Constants.secondary,
                                                                              fontWeight: FontWeight.bold)),
                                                                  Text(
                                                                      "Cashback!",
                                                                      style: Theme.of(
                                                                              context)
                                                                          .textTheme
                                                                          .titleLarge
                                                                          ?.copyWith(
                                                                              color: Constants.secondary,
                                                                              fontWeight: FontWeight.bold)),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                    ]),
                                                  ),
                                                  Container(
                                                    height: 20.h,
                                                    width: 90.w,
                                                    child: Stack(children: [
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                            top: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .topLeft,
                                                            child: Text(
                                                                "Invite Friends & Earn",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .titleSmall
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .primary,
                                                                        fontWeight:
                                                                            FontWeight.bold)),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                            bottom: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .centerLeft,
                                                            child: RichText(
                                                              text: TextSpan(
                                                                text:
                                                                    "For every user you invite and signs up, you can Earn Upto ",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .titleSmall
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .primary,
                                                                        fontWeight:
                                                                            FontWeight.bold),
                                                                children: [
                                                                  TextSpan(
                                                                    text:
                                                                        "₹100",
                                                                    style:
                                                                        TextStyle(
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .bold,
                                                                    ),
                                                                  ),
                                                                  TextSpan(
                                                                    text: ".",
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                            top: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .bottomLeft,
                                                            child: InkWell(
                                                              splashColor:
                                                                  FlutterFlowTheme.of(
                                                                          context)
                                                                      .secondary,
                                                              onTap: () {
                                                                shareApp(
                                                                    context);
                                                              },
                                                              child: Container(
                                                                height: 5.h,
                                                                width: 40.w,
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                          context)
                                                                      .primary,
                                                                  borderRadius:
                                                                      BorderRadius.all(
                                                                          Radius.circular(
                                                                              10.0)),
                                                                ),
                                                                child: Center(
                                                                  child: Text(
                                                                      "Share",
                                                                      style: Theme.of(
                                                                              context)
                                                                          .textTheme
                                                                          .bodyMedium
                                                                          ?.copyWith(
                                                                              color: Constants.secondary,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold)),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                    ]),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          }
        } catch (e) {
          return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Center(
              child: Text("Error Fetching Data..."),
            ),
          );
        }
      } else if ((ref.read(UserDashListProvider.notifier).getReffererType ??
              "0") ==
          "2") {
        // isReffererPricingPresent = false;

        //based on bottom navigation selection, change ui
        if (_selectedFoodCustNavIndex == 0) {
          return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Stack(
              children: [
                // Portion A (Background)
                Container(
                    height: 100.h,
                    child: Stack(
                      children: [
                        RefreshIndicator(
                          onRefresh: _handleRefresh,
                          child: CustomScrollView(
                            slivers: [
                              (isShowFoodSection ?? true)
                                  ? SliverToBoxAdapter(
                                      child: Container(
                                          alignment: Alignment.centerLeft,
                                          color: Constants.secondary,
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 20, left: 8.0, right: 8.0),
                                            child: Row(
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                Expanded(
                                                  child: Text(
                                                    "What are you going \n to eat Today?",

                                                    // style: Theme.of(context).textTheme.titleLarge,
                                                    style: TextStyle(
                                                        fontFamily:
                                                            'Encode Sans Condensed',
                                                        // Apply Open Sans only for this Text widget
                                                        fontSize: 25,
                                                        fontWeight:
                                                            FontWeight.bold,
                                                        letterSpacing: 2.5),
                                                    maxLines: 2,
                                                  ),
                                                ),
                                              ],
                                            ),
                                          )),
                                    )
                                  : SliverToBoxAdapter(
                                      child: SizedBox(
                                      height: 0,
                                    )),
                              // (isShowFoodSection ?? true)
                              //     ? makeTitleHeader('', true, 6)
                              //     : SliverToBoxAdapter(
                              //         child: SizedBox(
                              //         height: 0,
                              //       )),

                              (isShowFoodSection ?? true)
                                  ? SliverToBoxAdapter(
                                      child: Center(
                                        child: GestureDetector(
                                          onTap: () {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                builder: (context) =>
                                                    FoodCategoryScreen(
                                                  selectedCategoryIndex:
                                                      _selectedCategoryIndex
                                                              .value ??
                                                          0,
                                                ),
                                              ),
                                            ).then((_) {
                                              _selectedCategoryIndex.value = 0;
                                              _searchQuery.value = "";
                                            });
                                          },
                                          child: Container(
                                            alignment: Alignment.center,
                                            height: 15.h,
                                            width: 100.w,
                                            decoration: BoxDecoration(
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .secondary,
                                              borderRadius: BorderRadius.only(
                                                bottomLeft: Radius.circular(0),
                                                bottomRight: Radius.circular(0),
                                              ),
                                            ),
                                            child: Padding(
                                              padding:
                                                  const EdgeInsets.all(10.0),
                                              child: Container(
                                                height: 6.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: Constants
                                                      .colorFoodCSecondaryWhite,
                                                  // Light gray background
                                                  borderRadius:
                                                      BorderRadius.circular(30),
                                                  // Smooth corners
                                                  boxShadow: [
                                                    BoxShadow(
                                                      color: Constants
                                                          .colorFoodCSecondaryGrey2,
                                                      // Light shadow effect
                                                      blurRadius: 10,
                                                      spreadRadius: 2,
                                                      offset: Offset(0,
                                                          4), // Slight downward shadow
                                                    ),
                                                  ],
                                                ),

                                                child: Center(
                                                  child: Row(
                                                    children: [
                                                      Expanded(
                                                        flex: 3,
                                                        child: Icon(
                                                            Icons.search,
                                                            color: Constants
                                                                .colorFoodCPrimary),
                                                      ),
                                                      Expanded(
                                                        flex: 7,
                                                        child: Text(
                                                          "Search More Food",
                                                          style: TextStyle(
                                                            fontFamily:
                                                                'Encode Sans Condensed',
                                                            letterSpacing: 4.5,
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                // child: TextField(
                                                //     decoration: InputDecoration(
                                                //       hintStyle: TextStyle(
                                                //         fontFamily:
                                                //             'Encode Sans Condensed',
                                                //       ),
                                                //       hintText:
                                                //           'Search Your Favourite Food!',
                                                //       prefixIcon: Icon(
                                                //           Icons.search,
                                                //           color: Constants
                                                //               .colorFoodCPrimary),
                                                //       border: InputBorder.none,
                                                //       // Remove default border
                                                //       contentPadding:
                                                //           EdgeInsets.symmetric(
                                                //               vertical: 15,
                                                //               horizontal: 20),
                                                //     ),
                                                //     onChanged: (value) {
                                                //       _searchQuery.value = value;
                                                //       _selectedCategoryIndex
                                                //           .value = 0;
                                                //     }),
                                              ),
                                            ),

                                            //  ListView.builder(
                                            //
                                            //   scrollDirection: Axis.vertical,
                                            //   itemCount: _categories.length,
                                            //   itemBuilder: (context, index) {
                                            //     String category =
                                            //         _categories[index];
                                            //     String categoryId =
                                            //         _categoryMapping.entries
                                            //             .firstWhere((element) =>
                                            //                 element.value ==
                                            //                 category)
                                            //             .key;
                                            //
                                            //      categoryProducts =
                                            //         ref
                                            //             .read(
                                            //                 adminDashListProvider
                                            //                     .notifier)
                                            //             .foodList
                                            //             ?.where((product) =>
                                            //                 product
                                            //                     .productCategory ==
                                            //                 categoryId)
                                            //             .toList();
                                            //
                                            //     if (categoryProducts == null) {
                                            //       return Container();
                                            //     }
                                            //
                                            //     return Column(
                                            //       crossAxisAlignment:
                                            //           CrossAxisAlignment.start,
                                            //       children: [
                                            //         (categoryProducts ?? []).isEmpty
                                            //             ? Container()
                                            //             : Column(
                                            //                 crossAxisAlignment:
                                            //                     CrossAxisAlignment
                                            //                         .start,
                                            //                 children: [
                                            //                   Padding(
                                            //                     padding:
                                            //                         const EdgeInsets
                                            //                             .only(
                                            //                             left:
                                            //                                 8.0),
                                            //                     child: Text(
                                            //                         category,
                                            //                         style: Theme.of(
                                            //                                 context)
                                            //                             .textTheme
                                            //                             .titleLarge),
                                            //                   ),
                                            //                   SizedBox(
                                            //                     height: 30.h,
                                            //                     // Set static height for the GridView
                                            //                     child: GridView
                                            //                         .builder(
                                            //                       shrinkWrap:
                                            //                           true,
                                            //                       physics:
                                            //                           NeverScrollableScrollPhysics(),
                                            //                       padding:
                                            //                           const EdgeInsets
                                            //                               .all(
                                            //                               8.0),
                                            //                       gridDelegate:
                                            //                           SliverGridDelegateWithFixedCrossAxisCount(
                                            //                         crossAxisCount:
                                            //                             2,
                                            //                         crossAxisSpacing:
                                            //                             8.0,
                                            //                         mainAxisSpacing:
                                            //                             8.0,
                                            //                         childAspectRatio:
                                            //                             0.8, // Adjust ratio as needed
                                            //                       ),
                                            //                       itemCount:
                                            //                           categoryProducts
                                            //                               ?.length,
                                            //                       itemBuilder:
                                            //                           (context,
                                            //                               index) {
                                            //                         FoodList?
                                            //                             product =
                                            //                             categoryProducts?[
                                            //                                 index];
                                            //
                                            //                         String?
                                            //                             getAmount =
                                            //                             product?.amount ??
                                            //                                 "";
                                            //                         String?
                                            //                             getTitle =
                                            //                             product?.title ??
                                            //                                 "";
                                            //                         String?
                                            //                             getDocId =
                                            //                             product?.docID ??
                                            //                                 "";
                                            //                         String?
                                            //                             getDescription =
                                            //                             product?.description ??
                                            //                                 "";
                                            //                         final List<
                                            //                                 dynamic>
                                            //                             imageUrls =
                                            //                             (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A"))
                                            //                                 .fileUrls ?? [];
                                            //
                                            //                         return SizedBox(
                                            //                           height: 250,
                                            //                           // Set a fixed height for each grid item
                                            //                           child:
                                            //                               GridTile(
                                            //                             child:
                                            //                                 GestureDetector(
                                            //                               onTap:
                                            //                                   () {
                                            //                                 Navigator
                                            //                                     .push(
                                            //                                   context,
                                            //                                   MaterialPageRoute(
                                            //                                     builder: (context) => FoodDetailScreen(
                                            //                                       title: getTitle,
                                            //                                       description: getDescription,
                                            //                                       affiliateLink: "",
                                            //                                       prodDetails: "getProdDetails",
                                            //                                       prodSpec: "getProdSpec",
                                            //                                       imageUrls: imageUrls,
                                            //                                       amount: getAmount,
                                            //                                       userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                            //                                       getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                            //                                       minBargainAmount: "",
                                            //                                       getHeroTag: 'imageHero$index',
                                            //                                     ),
                                            //                                   ),
                                            //                                 );
                                            //                               },
                                            //                               child:
                                            //                                   Container(
                                            //                                 decoration:
                                            //                                     BoxDecoration(
                                            //                                   color:
                                            //                                       _singleton.lighten(
                                            //                                     Constants.secondary2,
                                            //                                     amount: _singleton.generateRandomColorDouble(),
                                            //                                   ),
                                            //                                   borderRadius:
                                            //                                       BorderRadius.circular(15.0),
                                            //                                 ),
                                            //                                 child:
                                            //                                     Column(
                                            //                                   mainAxisAlignment:
                                            //                                       MainAxisAlignment.spaceBetween,
                                            //                                   crossAxisAlignment:
                                            //                                       CrossAxisAlignment.start,
                                            //                                   children: [
                                            //                                     Expanded(
                                            //                                       flex: 3,
                                            //                                       child: ClipRRect(
                                            //                                         borderRadius: const BorderRadius.only(
                                            //                                           topLeft: Radius.circular(15),
                                            //                                           topRight: Radius.circular(15),
                                            //                                         ),
                                            //                                         child:  (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls.isNotEmpty
                                            //                                             ? Hero(
                                            //                                                 tag: 'imageHero$index$getTitle$getAmount',
                                            //                                                 child: Image.network(
                                            //                                                   (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0],
                                            //                                                   fit: BoxFit.cover,
                                            //                                                   width: double.infinity,
                                            //                                                   height: double.infinity,
                                            //                                                   loadingBuilder: (context, child, loadingProgress) {
                                            //                                                     if (loadingProgress == null) return child;
                                            //                                                     return Center(
                                            //                                                       child: CircularProgressIndicator(
                                            //                                                         value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                            //                                                       ),
                                            //                                                     );
                                            //                                                   },
                                            //                                                 ),
                                            //                                               )
                                            //                                             : Container(color: Colors.grey),
                                            //                                       ),
                                            //                                     ),
                                            //                                     Padding(
                                            //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                                            //                                       child: Text(
                                            //                                         product?.title ?? "",
                                            //                                         style: Theme.of(context).textTheme.titleSmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                            //                                       ),
                                            //                                     ),
                                            //                                     Padding(
                                            //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 2.0),
                                            //                                       child: Text(
                                            //                                         "Rs. $getAmount",
                                            //                                         style: Theme.of(context).textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                            //                                       ),
                                            //                                     ),
                                            //                                     Visibility(
                                            //                                       visible: Constants.isAdmin,
                                            //                                       child: Padding(
                                            //                                         padding: const EdgeInsets.only(top: 8.0),
                                            //                                         child: Row(
                                            //                                           children: [
                                            //                                             IconButton(
                                            //                                               icon: Icon(Icons.delete, color: Constants.secondary3),
                                            //                                               onPressed: () {
                                            //                                                 // Delete action
                                            //                                               },
                                            //                                             ),
                                            //                                             IconButton(
                                            //                                               onPressed: () async {
                                            //                                                 _singleton.showAlertDialog(
                                            //                                                   context: context,
                                            //                                                   title: "Are you sure?",
                                            //                                                   message: "Do you want to Post Notification for this Product?",
                                            //                                                   onCancelPressed: () {},
                                            //                                                   onOkPressed: () async {
                                            //                                                     Response? getResult = await NotificationService.postNotificationWithImage(
                                            //                                                       "Get $getTitle for Rs.$getAmount ✨",
                                            //                                                       "Try bargaining for the best prices on your favorite products 🪑💰🔦🛵⚽️",
                                            //                                                       (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0] ?? null,
                                            //                                                     );
                                            //
                                            //                                                     getResult?.statusCode == 200 ? Constants.showToast("Posted Notification to Maaka Users", ToastGravity.BOTTOM) : Constants.showToast("Problem in sending Notification!", ToastGravity.BOTTOM);
                                            //                                                   },
                                            //                                                 );
                                            //                                               },
                                            //                                               icon: Icon(Icons.notification_add, color: Constants.secondary3),
                                            //                                             ),
                                            //                                           ],
                                            //                                         ),
                                            //                                       ),
                                            //                                     ),
                                            //                                   ],
                                            //                                 ),
                                            //                               ),
                                            //                             ),
                                            //                           ),
                                            //                         );
                                            //                       },
                                            //                     ),
                                            //                   ),
                                            //                 ],
                                            //               ),
                                            //       ],
                                            //     );
                                            //
                                            //     //todo:- food section
                                            //    // return Center(
                                            //    //    child: GestureDetector(
                                            //    //      onTap: () {
                                            //    //        _selectedIndexNotifier.value = index;
                                            //    //        _scrollToIndex(index);
                                            //    //      },
                                            //    //      child: ValueListenableBuilder<int>(
                                            //    //        valueListenable: _selectedIndexNotifier,
                                            //    //        builder: (context, selectedIndex, child) {
                                            //    //          bool isSelected = index == selectedIndex;
                                            //    //          return AnimatedContainer(
                                            //    //            duration: const Duration(milliseconds: 300),
                                            //    //            curve: Curves.easeInOut,
                                            //    //            child: Padding(
                                            //    //              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                            //    //              child: Transform.scale(
                                            //    //                scale: isSelected ? 1.2 : 0.9,
                                            //    //                child: Opacity(
                                            //    //                  opacity: isSelected ? 1.0 : 0.6,
                                            //    //                  child: Stack(
                                            //    //                    clipBehavior: Clip.none,
                                            //    //                    children: [
                                            //    //                      Container(
                                            //    //                        width: 160,
                                            //    //                        height: 220,
                                            //    //                        decoration: BoxDecoration(
                                            //    //                          color: Colors.white,
                                            //    //                          borderRadius: BorderRadius.circular(12),
                                            //    //                          boxShadow: [
                                            //    //                            BoxShadow(
                                            //    //                              color: Colors.grey.withOpacity(0.4),
                                            //    //                              blurRadius: 10,
                                            //    //                              spreadRadius: 3,
                                            //    //                            )
                                            //    //                          ],
                                            //    //                        ),
                                            //    //                        child: Padding(
                                            //    //                          padding: const EdgeInsets.only(top: 0.0),
                                            //    //                          child: Column(
                                            //    //                            mainAxisAlignment: MainAxisAlignment.end,
                                            //    //                            children: [
                                            //    //                              Text(
                                            //    //                                "name",
                                            //    //                                style: TextStyle(
                                            //    //                                  color: isSelected ? Colors.black : Colors.grey,
                                            //    //                                  fontSize: isSelected ? 18 : 14,
                                            //    //                                  fontWeight: FontWeight.bold,
                                            //    //                                ),
                                            //    //                              ),
                                            //    //                              const SizedBox(height: 4),
                                            //    //                              Text(
                                            //    //                                '₹400',
                                            //    //                                style: const TextStyle(
                                            //    //                                  fontSize: 16,
                                            //    //                                  fontWeight: FontWeight.bold,
                                            //    //                                  color: Colors.green,
                                            //    //                                ),
                                            //    //                              ),
                                            //    //                              Text(
                                            //    //                                '₹550',
                                            //    //                                style: const TextStyle(
                                            //    //                                  fontSize: 14,
                                            //    //                                  color: Colors.red,
                                            //    //                                  decoration: TextDecoration.lineThrough,
                                            //    //                                ),
                                            //    //                              ),
                                            //    //                              const SizedBox(height: 10),
                                            //    //                            ],
                                            //    //                          ),
                                            //    //                        ),
                                            //    //                      ),
                                            //    //                      Positioned(
                                            //    //                        top: -20,
                                            //    //                        left: 20,
                                            //    //                        child: Container(
                                            //    //                          width: 100,
                                            //    //                          height: 100,
                                            //    //                          decoration: BoxDecoration(
                                            //    //                            boxShadow: [
                                            //    //                              BoxShadow(
                                            //    //                                color: Colors.grey.withOpacity(0.3),
                                            //    //                                blurRadius: 10,
                                            //    //                                spreadRadius: 2,
                                            //    //                              ),
                                            //    //                            ],
                                            //    //                          ),
                                            //    //                          child: ClipRRect(
                                            //    //                            borderRadius: BorderRadius.circular(50),
                                            //    //                            child: Image.asset(
                                            //    //                              "foodItems[index].imagePath",
                                            //    //                              fit: BoxFit.cover,
                                            //    //                            ),
                                            //    //                          ),
                                            //    //                        ),
                                            //    //                      ),
                                            //    //                    ],
                                            //    //                  ),
                                            //    //                ),
                                            //    //              ),
                                            //    //            ),
                                            //    //          );
                                            //    //        },
                                            //    //      ),
                                            //    //    ),
                                            //    //  );
                                            //   },
                                            // )
                                          ),
                                        ),
                                      ),
                                    )
                                  : SliverToBoxAdapter(
                                      child: SizedBox(
                                      height: 0,
                                    )),

                              (isShowFoodSection ?? true)
                                  ? SliverToBoxAdapter(
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(10.0),
                                          child: Container(
                                            color: Colors.white,
                                            height: 10.h,
                                            child: Center(
                                              child: Container(
                                                height: 5.h,
                                                child:
                                                    ValueListenableBuilder<int>(
                                                  valueListenable:
                                                      _selectedCategoryIndex,
                                                  builder: (context,
                                                      selectedIndex, child) {
                                                    return ListView.builder(
                                                      scrollDirection:
                                                          Axis.horizontal,
                                                      itemCount:
                                                          _categoryMapping
                                                              .length,
                                                      itemBuilder:
                                                          (context, index) {
                                                        String category =
                                                            _categoryMapping
                                                                    .values
                                                                    .toList()[
                                                                index];
                                                        return GestureDetector(
                                                          onTap: () {
                                                            _selectedCategoryIndex
                                                                .value = index;
                                                            _searchQuery.value =
                                                                "";
                                                          },
                                                          child: Container(
                                                            padding:
                                                                const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        16,
                                                                    vertical:
                                                                        8),
                                                            margin:
                                                                const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        5),
                                                            decoration:
                                                                BoxDecoration(
                                                              color: index ==
                                                                      selectedIndex
                                                                  ? Constants
                                                                      .colorFoodCPrimary
                                                                  : Colors
                                                                      .grey[50],
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          15),
                                                              // border: Border.all(
                                                              //     color: Colors.grey),
                                                              // Light gray background
                                                              // Smooth corners
                                                              // boxShadow: [
                                                              //   BoxShadow(
                                                              //     color: Colors.black.withOpacity(
                                                              //         0.1), // Light shadow effect
                                                              //     blurRadius: 10,
                                                              //     spreadRadius: 2,
                                                              //     offset: Offset(0,
                                                              //         4), // Slight downward shadow
                                                              //   ),
                                                              // ],
                                                            ),
                                                            child: Center(
                                                              child: Text(
                                                                category,
                                                                style:
                                                                    TextStyle(
                                                                  color: index ==
                                                                          selectedIndex
                                                                      ? Colors
                                                                          .white
                                                                      : Colors
                                                                          .black,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        );
                                                      },
                                                    );
                                                  },
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    )
                                  : SliverToBoxAdapter(
                                      child: SizedBox(
                                      height: 0,
                                    )),

                              (isShowFoodSection ?? true)
                                  ? SliverToBoxAdapter(
                                      child: Center(
                                        child: Container(
                                          alignment: Alignment.center,
                                          height: 100.h,
                                          width: 100.w,
                                          decoration: BoxDecoration(
                                            color: FlutterFlowTheme.of(context)
                                                .secondary,
                                            borderRadius: BorderRadius.only(
                                              bottomLeft: Radius.circular(0),
                                              bottomRight: Radius.circular(0),
                                            ),
                                          ),
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 10.0),
                                            child:
                                                ValueListenableBuilder<String>(
                                              valueListenable: _searchQuery,
                                              builder: (context, query, child) {
                                                return ValueListenableBuilder<
                                                    int>(
                                                  valueListenable:
                                                      _selectedCategoryIndex,
                                                  builder: (context,
                                                      selectedIndex, child) {
                                                    // List<FoodList> filteredItems =
                                                    //     _getFilteredItems();

                                                    List<
                                                        FoodList>? filteredItems = query
                                                            .isNotEmpty
                                                        ? ref
                                                            .read(
                                                                UserDashListProvider
                                                                    .notifier)
                                                            .categoryProducts
                                                            ?.where((item) => (item
                                                                        .title ??
                                                                    "")
                                                                .toLowerCase()
                                                                .contains(query
                                                                    .toLowerCase()))
                                                            .toList()
                                                        : _getFoodItemsByProdCode(
                                                            _categoryMapping
                                                                    .keys
                                                                    .toList()[
                                                                selectedIndex]);

                                                    return ListView.builder(
                                                      itemCount:
                                                          _categoryMapping
                                                              .length,
                                                      itemBuilder: (context,
                                                          sectionIndex) {
                                                        var categoryKeys =
                                                            _categoryMapping
                                                                .keys
                                                                .toList();
                                                        String prodCode =
                                                            categoryKeys[
                                                                sectionIndex];

                                                        print(ref
                                                            .read(
                                                                UserDashListProvider
                                                                    .notifier)
                                                            .categoryProducts);

                                                        // categoryProducts = ref
                                                        //     .read(adminDashListProvider
                                                        //     .notifier)
                                                        //     .foodList;

                                                        // List<FoodList>? sectionItems =
                                                        // _getFoodItemsByProdCode(
                                                        //     prodCode);
                                                        // if ((sectionItems ?? []).isEmpty)
                                                        //   return const SizedBox.shrink();

                                                        List<FoodList>
                                                            sectionItems =
                                                            (filteredItems ??
                                                                    [])
                                                                .where((item) =>
                                                                    item.productCategory ==
                                                                    prodCode)
                                                                .toList();
                                                        if (sectionItems
                                                            .isEmpty)
                                                          return const SizedBox
                                                              .shrink();

                                                        return Column(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                      .all(8.0),
                                                              child: Text(
                                                                '${_categoryMapping[prodCode]} ',
                                                                style: const TextStyle(
                                                                    fontFamily:
                                                                        'Encode Sans Condensed',
                                                                    fontSize:
                                                                        20,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .bold),
                                                              ),
                                                            ),
                                                            SizedBox(
                                                              height: 300,
                                                              child: ListView
                                                                  .builder(
                                                                controller:
                                                                    _scrollControllers[
                                                                        sectionIndex],
                                                                scrollDirection:
                                                                    Axis.horizontal,
                                                                itemCount:
                                                                    sectionItems
                                                                        ?.length,
                                                                padding: const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        80),
                                                                itemBuilder:
                                                                    (context,
                                                                        index) {
                                                                  return Center(
                                                                    child:
                                                                        GestureDetector(
                                                                      onTap:
                                                                          () {
                                                                        _selectedIndexNotifiers[sectionIndex]!.value =
                                                                            index;
                                                                        _scrollToIndex(
                                                                            sectionIndex,
                                                                            index);

                                                                        FoodList?
                                                                            product =
                                                                            sectionItems?[index];

                                                                        String?
                                                                            getAmount =
                                                                            product?.amount ??
                                                                                "";
                                                                        String?
                                                                            getTitle =
                                                                            product?.title ??
                                                                                "";
                                                                        String?
                                                                            getDocId =
                                                                            product?.docID ??
                                                                                "";
                                                                        String?
                                                                            getDescription =
                                                                            product?.description ??
                                                                                "";
                                                                        final List<dynamic>
                                                                            imageUrls =
                                                                            product?.fileUrls ??
                                                                                [];

                                                                        Navigator
                                                                            .push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                            builder: (context) =>
                                                                                FoodDetailScreen(
                                                                              title: getTitle,
                                                                              description: getDescription,
                                                                              affiliateLink: "",
                                                                              prodDetails: "getProdDetails",
                                                                              prodSpec: "getProdSpec",
                                                                              imageUrls: imageUrls,
                                                                              amount: getAmount,
                                                                              userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                              getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                              minBargainAmount: "",
                                                                              getHeroTag: 'imageHero$index',
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                      child: ValueListenableBuilder<
                                                                          int>(
                                                                        valueListenable:
                                                                            _selectedIndexNotifiers[sectionIndex]!,
                                                                        builder: (context,
                                                                            selectedIndex,
                                                                            child) {
                                                                          bool
                                                                              isSelected =
                                                                              index == selectedIndex;
                                                                          return AnimatedContainer(
                                                                            duration:
                                                                                const Duration(milliseconds: 300),
                                                                            curve:
                                                                                Curves.easeInOut,
                                                                            child:
                                                                                Padding(
                                                                              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                              child: Transform.scale(
                                                                                scale: isSelected ? 1.2 : 0.9,
                                                                                child: Opacity(
                                                                                  opacity: isSelected ? 1.0 : 0.6,
                                                                                  child: Container(
                                                                                    width: 160,
                                                                                    height: 220,
                                                                                    decoration: BoxDecoration(
                                                                                      color: Colors.white,
                                                                                      borderRadius: BorderRadius.circular(12),
                                                                                      boxShadow: [
                                                                                        BoxShadow(
                                                                                          color: Colors.grey.withOpacity(0.4),
                                                                                          blurRadius: 10,
                                                                                          spreadRadius: 3,
                                                                                        )
                                                                                      ],
                                                                                    ),
                                                                                    child: Stack(
                                                                                      children: [
                                                                                        Padding(
                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                          child: Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                                            children: [
                                                                                              Expanded(
                                                                                                child: Container(
                                                                                                  color: Colors.white,
                                                                                                  child: Center(
                                                                                                    child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                        ? Hero(
                                                                                                            tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                            child: FutureBuilder(
                                                                                                              future: precacheImage(
                                                                                                                NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                                context,
                                                                                                              ),
                                                                                                              builder: (context, snapshot) {
                                                                                                                if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                                  return CircleAvatar(
                                                                                                                    radius: 80,
                                                                                                                    backgroundColor: Colors.white,
                                                                                                                    child: CircularProgressIndicator(),
                                                                                                                  );
                                                                                                                } else {
                                                                                                                  return CircleAvatar(
                                                                                                                    radius: 80,
                                                                                                                    backgroundImage: NetworkImage(
                                                                                                                      sectionItems?[index].fileUrls[0] ?? '',
                                                                                                                    ),
                                                                                                                    backgroundColor: Colors.white,
                                                                                                                  );
                                                                                                                }
                                                                                                              },
                                                                                                            ),
                                                                                                          )
                                                                                                        : CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundColor: Colors.grey,
                                                                                                          ),
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                              Text(
                                                                                                sectionItems?[index].title ?? "",
                                                                                                style: TextStyle(
                                                                                                  color: isSelected ? Colors.black : Colors.grey,
                                                                                                  fontSize: isSelected ? 18 : 14,
                                                                                                  fontWeight: FontWeight.w900,
                                                                                                  fontFamily: 'Encode Sans Condensed',
                                                                                                ),
                                                                                              ),
                                                                                              Text(
                                                                                                '₹${sectionItems?[index].amount}',
                                                                                                style: TextStyle(
                                                                                                  fontSize: 16,
                                                                                                  color: Constants.colorFoodCPrimary,
                                                                                                  fontWeight: FontWeight.bold,
                                                                                                ),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        // Heart Icon in Top-Right
                                                                                        Positioned(
                                                                                          top: 8,
                                                                                          right: 8,
                                                                                          child: Container(
                                                                                            decoration: BoxDecoration(
                                                                                              shape: BoxShape.circle,
                                                                                              border: Border.all(color: Colors.transparent, width: 2),
                                                                                              color: Colors.white.withOpacity(0.1),
                                                                                            ),
                                                                                            padding: EdgeInsets.all(4),
                                                                                            child: Icon(
                                                                                              isSelected ? Icons.favorite : null,
                                                                                              color: isSelected ? Colors.redAccent : null,
                                                                                              size: 20,
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        },
                                                                      ),
                                                                    ),
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          ],
                                                        );
                                                      },
                                                      physics:
                                                          BouncingScrollPhysics(),
                                                    );
                                                  },
                                                );
                                              },
                                            ),
                                          ),

                                          //  ListView.builder(
                                          //
                                          //   scrollDirection: Axis.vertical,
                                          //   itemCount: _categories.length,
                                          //   itemBuilder: (context, index) {
                                          //     String category =
                                          //         _categories[index];
                                          //     String categoryId =
                                          //         _categoryMapping.entries
                                          //             .firstWhere((element) =>
                                          //                 element.value ==
                                          //                 category)
                                          //             .key;
                                          //
                                          //      categoryProducts =
                                          //         ref
                                          //             .read(
                                          //                 adminDashListProvider
                                          //                     .notifier)
                                          //             .foodList
                                          //             ?.where((product) =>
                                          //                 product
                                          //                     .productCategory ==
                                          //                 categoryId)
                                          //             .toList();
                                          //
                                          //     if (categoryProducts == null) {
                                          //       return Container();
                                          //     }
                                          //
                                          //     return Column(
                                          //       crossAxisAlignment:
                                          //           CrossAxisAlignment.start,
                                          //       children: [
                                          //         (categoryProducts ?? []).isEmpty
                                          //             ? Container()
                                          //             : Column(
                                          //                 crossAxisAlignment:
                                          //                     CrossAxisAlignment
                                          //                         .start,
                                          //                 children: [
                                          //                   Padding(
                                          //                     padding:
                                          //                         const EdgeInsets
                                          //                             .only(
                                          //                             left:
                                          //                                 8.0),
                                          //                     child: Text(
                                          //                         category,
                                          //                         style: Theme.of(
                                          //                                 context)
                                          //                             .textTheme
                                          //                             .titleLarge),
                                          //                   ),
                                          //                   SizedBox(
                                          //                     height: 30.h,
                                          //                     // Set static height for the GridView
                                          //                     child: GridView
                                          //                         .builder(
                                          //                       shrinkWrap:
                                          //                           true,
                                          //                       physics:
                                          //                           NeverScrollableScrollPhysics(),
                                          //                       padding:
                                          //                           const EdgeInsets
                                          //                               .all(
                                          //                               8.0),
                                          //                       gridDelegate:
                                          //                           SliverGridDelegateWithFixedCrossAxisCount(
                                          //                         crossAxisCount:
                                          //                             2,
                                          //                         crossAxisSpacing:
                                          //                             8.0,
                                          //                         mainAxisSpacing:
                                          //                             8.0,
                                          //                         childAspectRatio:
                                          //                             0.8, // Adjust ratio as needed
                                          //                       ),
                                          //                       itemCount:
                                          //                           categoryProducts
                                          //                               ?.length,
                                          //                       itemBuilder:
                                          //                           (context,
                                          //                               index) {
                                          //                         FoodList?
                                          //                             product =
                                          //                             categoryProducts?[
                                          //                                 index];
                                          //
                                          //                         String?
                                          //                             getAmount =
                                          //                             product?.amount ??
                                          //                                 "";
                                          //                         String?
                                          //                             getTitle =
                                          //                             product?.title ??
                                          //                                 "";
                                          //                         String?
                                          //                             getDocId =
                                          //                             product?.docID ??
                                          //                                 "";
                                          //                         String?
                                          //                             getDescription =
                                          //                             product?.description ??
                                          //                                 "";
                                          //                         final List<
                                          //                                 dynamic>
                                          //                             imageUrls =
                                          //                             (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A"))
                                          //                                 .fileUrls ?? [];
                                          //
                                          //                         return SizedBox(
                                          //                           height: 250,
                                          //                           // Set a fixed height for each grid item
                                          //                           child:
                                          //                               GridTile(
                                          //                             child:
                                          //                                 GestureDetector(
                                          //                               onTap:
                                          //                                   () {
                                          //                                 Navigator
                                          //                                     .push(
                                          //                                   context,
                                          //                                   MaterialPageRoute(
                                          //                                     builder: (context) => FoodDetailScreen(
                                          //                                       title: getTitle,
                                          //                                       description: getDescription,
                                          //                                       affiliateLink: "",
                                          //                                       prodDetails: "getProdDetails",
                                          //                                       prodSpec: "getProdSpec",
                                          //                                       imageUrls: imageUrls,
                                          //                                       amount: getAmount,
                                          //                                       userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                          //                                       getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                          //                                       minBargainAmount: "",
                                          //                                       getHeroTag: 'imageHero$index',
                                          //                                     ),
                                          //                                   ),
                                          //                                 );
                                          //                               },
                                          //                               child:
                                          //                                   Container(
                                          //                                 decoration:
                                          //                                     BoxDecoration(
                                          //                                   color:
                                          //                                       _singleton.lighten(
                                          //                                     Constants.secondary2,
                                          //                                     amount: _singleton.generateRandomColorDouble(),
                                          //                                   ),
                                          //                                   borderRadius:
                                          //                                       BorderRadius.circular(15.0),
                                          //                                 ),
                                          //                                 child:
                                          //                                     Column(
                                          //                                   mainAxisAlignment:
                                          //                                       MainAxisAlignment.spaceBetween,
                                          //                                   crossAxisAlignment:
                                          //                                       CrossAxisAlignment.start,
                                          //                                   children: [
                                          //                                     Expanded(
                                          //                                       flex: 3,
                                          //                                       child: ClipRRect(
                                          //                                         borderRadius: const BorderRadius.only(
                                          //                                           topLeft: Radius.circular(15),
                                          //                                           topRight: Radius.circular(15),
                                          //                                         ),
                                          //                                         child:  (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls.isNotEmpty
                                          //                                             ? Hero(
                                          //                                                 tag: 'imageHero$index$getTitle$getAmount',
                                          //                                                 child: Image.network(
                                          //                                                   (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0],
                                          //                                                   fit: BoxFit.cover,
                                          //                                                   width: double.infinity,
                                          //                                                   height: double.infinity,
                                          //                                                   loadingBuilder: (context, child, loadingProgress) {
                                          //                                                     if (loadingProgress == null) return child;
                                          //                                                     return Center(
                                          //                                                       child: CircularProgressIndicator(
                                          //                                                         value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                          //                                                       ),
                                          //                                                     );
                                          //                                                   },
                                          //                                                 ),
                                          //                                               )
                                          //                                             : Container(color: Colors.grey),
                                          //                                       ),
                                          //                                     ),
                                          //                                     Padding(
                                          //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                                          //                                       child: Text(
                                          //                                         product?.title ?? "",
                                          //                                         style: Theme.of(context).textTheme.titleSmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                          //                                       ),
                                          //                                     ),
                                          //                                     Padding(
                                          //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 2.0),
                                          //                                       child: Text(
                                          //                                         "Rs. $getAmount",
                                          //                                         style: Theme.of(context).textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                          //                                       ),
                                          //                                     ),
                                          //                                     Visibility(
                                          //                                       visible: Constants.isAdmin,
                                          //                                       child: Padding(
                                          //                                         padding: const EdgeInsets.only(top: 8.0),
                                          //                                         child: Row(
                                          //                                           children: [
                                          //                                             IconButton(
                                          //                                               icon: Icon(Icons.delete, color: Constants.secondary3),
                                          //                                               onPressed: () {
                                          //                                                 // Delete action
                                          //                                               },
                                          //                                             ),
                                          //                                             IconButton(
                                          //                                               onPressed: () async {
                                          //                                                 _singleton.showAlertDialog(
                                          //                                                   context: context,
                                          //                                                   title: "Are you sure?",
                                          //                                                   message: "Do you want to Post Notification for this Product?",
                                          //                                                   onCancelPressed: () {},
                                          //                                                   onOkPressed: () async {
                                          //                                                     Response? getResult = await NotificationService.postNotificationWithImage(
                                          //                                                       "Get $getTitle for Rs.$getAmount ✨",
                                          //                                                       "Try bargaining for the best prices on your favorite products 🪑💰🔦🛵⚽️",
                                          //                                                       (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0] ?? null,
                                          //                                                     );
                                          //
                                          //                                                     getResult?.statusCode == 200 ? Constants.showToast("Posted Notification to Maaka Users", ToastGravity.BOTTOM) : Constants.showToast("Problem in sending Notification!", ToastGravity.BOTTOM);
                                          //                                                   },
                                          //                                                 );
                                          //                                               },
                                          //                                               icon: Icon(Icons.notification_add, color: Constants.secondary3),
                                          //                                             ),
                                          //                                           ],
                                          //                                         ),
                                          //                                       ),
                                          //                                     ),
                                          //                                   ],
                                          //                                 ),
                                          //                               ),
                                          //                             ),
                                          //                           ),
                                          //                         );
                                          //                       },
                                          //                     ),
                                          //                   ),
                                          //                 ],
                                          //               ),
                                          //       ],
                                          //     );
                                          //
                                          //     //todo:- food section
                                          //    // return Center(
                                          //    //    child: GestureDetector(
                                          //    //      onTap: () {
                                          //    //        _selectedIndexNotifier.value = index;
                                          //    //        _scrollToIndex(index);
                                          //    //      },
                                          //    //      child: ValueListenableBuilder<int>(
                                          //    //        valueListenable: _selectedIndexNotifier,
                                          //    //        builder: (context, selectedIndex, child) {
                                          //    //          bool isSelected = index == selectedIndex;
                                          //    //          return AnimatedContainer(
                                          //    //            duration: const Duration(milliseconds: 300),
                                          //    //            curve: Curves.easeInOut,
                                          //    //            child: Padding(
                                          //    //              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                          //    //              child: Transform.scale(
                                          //    //                scale: isSelected ? 1.2 : 0.9,
                                          //    //                child: Opacity(
                                          //    //                  opacity: isSelected ? 1.0 : 0.6,
                                          //    //                  child: Stack(
                                          //    //                    clipBehavior: Clip.none,
                                          //    //                    children: [
                                          //    //                      Container(
                                          //    //                        width: 160,
                                          //    //                        height: 220,
                                          //    //                        decoration: BoxDecoration(
                                          //    //                          color: Colors.white,
                                          //    //                          borderRadius: BorderRadius.circular(12),
                                          //    //                          boxShadow: [
                                          //    //                            BoxShadow(
                                          //    //                              color: Colors.grey.withOpacity(0.4),
                                          //    //                              blurRadius: 10,
                                          //    //                              spreadRadius: 3,
                                          //    //                            )
                                          //    //                          ],
                                          //    //                        ),
                                          //    //                        child: Padding(
                                          //    //                          padding: const EdgeInsets.only(top: 0.0),
                                          //    //                          child: Column(
                                          //    //                            mainAxisAlignment: MainAxisAlignment.end,
                                          //    //                            children: [
                                          //    //                              Text(
                                          //    //                                "name",
                                          //    //                                style: TextStyle(
                                          //    //                                  color: isSelected ? Colors.black : Colors.grey,
                                          //    //                                  fontSize: isSelected ? 18 : 14,
                                          //    //                                  fontWeight: FontWeight.bold,
                                          //    //                                ),
                                          //    //                              ),
                                          //    //                              const SizedBox(height: 4),
                                          //    //                              Text(
                                          //    //                                '₹400',
                                          //    //                                style: const TextStyle(
                                          //    //                                  fontSize: 16,
                                          //    //                                  fontWeight: FontWeight.bold,
                                          //    //                                  color: Colors.green,
                                          //    //                                ),
                                          //    //                              ),
                                          //    //                              Text(
                                          //    //                                '₹550',
                                          //    //                                style: const TextStyle(
                                          //    //                                  fontSize: 14,
                                          //    //                                  color: Colors.red,
                                          //    //                                  decoration: TextDecoration.lineThrough,
                                          //    //                                ),
                                          //    //                              ),
                                          //    //                              const SizedBox(height: 10),
                                          //    //                            ],
                                          //    //                          ),
                                          //    //                        ),
                                          //    //                      ),
                                          //    //                      Positioned(
                                          //    //                        top: -20,
                                          //    //                        left: 20,
                                          //    //                        child: Container(
                                          //    //                          width: 100,
                                          //    //                          height: 100,
                                          //    //                          decoration: BoxDecoration(
                                          //    //                            boxShadow: [
                                          //    //                              BoxShadow(
                                          //    //                                color: Colors.grey.withOpacity(0.3),
                                          //    //                                blurRadius: 10,
                                          //    //                                spreadRadius: 2,
                                          //    //                              ),
                                          //    //                            ],
                                          //    //                          ),
                                          //    //                          child: ClipRRect(
                                          //    //                            borderRadius: BorderRadius.circular(50),
                                          //    //                            child: Image.asset(
                                          //    //                              "foodItems[index].imagePath",
                                          //    //                              fit: BoxFit.cover,
                                          //    //                            ),
                                          //    //                          ),
                                          //    //                        ),
                                          //    //                      ),
                                          //    //                    ],
                                          //    //                  ),
                                          //    //                ),
                                          //    //              ),
                                          //    //            ),
                                          //    //          );
                                          //    //        },
                                          //    //      ),
                                          //    //    ),
                                          //    //  );
                                          //   },
                                          // )
                                        ),
                                      ),
                                    )
                                  : SliverToBoxAdapter(
                                      child: SizedBox(
                                      height: 0,
                                    )),
                            ],
                          ),
                        ),
                        (isLoading ?? false)
                            ? isRefresh == true
                                ? Container()
                                : Container(
                                    color: Colors.transparent,
                                    child: Center(
                                        child: CircularProgressIndicator(
                                      color: isRefresh == true
                                          ? Colors.transparent
                                          : FlutterFlowTheme.of(context)
                                              .primary,
                                    )),
                                  )
                            : Container()
                      ],
                    )),
              ],
            ),
          );
        } else {
          return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Stack(
              children: [
                // Portion A (Background)
                Container(
                    height: 100.h,
                    child: Stack(
                      children: [
                        RefreshIndicator(
                          onRefresh: _handleRefresh,
                          child: CustomScrollView(
                            slivers: [
                              (isShowFoodSection ?? true)
                                  ? SliverToBoxAdapter(
                                      child: StreamBuilder<QuerySnapshot>(
                                        stream: firestore
                                            .collection('users')
                                            .doc(ref
                                                .read(UserDashListProvider
                                                    .notifier)
                                                .getDocId)
                                            .collection('foodorder')
                                            .snapshots(),
                                        builder: (BuildContext context,
                                            AsyncSnapshot<QuerySnapshot>
                                                snapshot) {
                                          if (snapshot.hasError) {
                                            return Center(
                                              child: Text(
                                                  'Error: ${snapshot.error}'),
                                            );
                                          }

                                          if (snapshot.connectionState ==
                                              ConnectionState.waiting) {
                                            return Center(
                                              child: SizedBox(
                                                child:
                                                    CircularProgressIndicator(),
                                                height: 20,
                                                width: 20,
                                              ),
                                            );
                                          }

                                          orderedFood = snapshot.data!.docs
                                              .map((doc) {
                                                final data = doc.data()
                                                    as Map<String, dynamic>;
                                                final foodType =
                                                    data['foodType'];
                                                final area = data['area'];
                                                final totalPrice =
                                                    data['totalPrice'];
                                                final deliveryDate =
                                                    data['deliveryDate'];
                                                final deliveryTime =
                                                    data['deliveryTime'];
                                                final orderStatus =
                                                    data['orderStatus'];
                                                final paymentStatus =
                                                    data['paymentStatus'];
                                                final foodQuantity =
                                                    data['foodQuantity'];

                                                return FoodDetailsList(
                                                    foodName: foodType,
                                                    area: area,
                                                    totalPrice: totalPrice,
                                                    deliveryDate: deliveryDate,
                                                    deliveryTime: deliveryTime,
                                                    paymentStatus:
                                                        paymentStatus,
                                                    orderStatus: orderStatus,
                                                    foodQuantity: foodQuantity);
                                              })
                                              .whereType<FoodDetailsList>()
                                              .toList();

                                          //----------------------------------

                                          print("goals stream build called");
                                          return ListView.builder(
                                            shrinkWrap: true,
                                            physics:
                                                NeverScrollableScrollPhysics(),
                                            itemCount: orderedFood?.length,
                                            itemBuilder: (context, index) {
                                              final document =
                                                  orderedFood?[index];
                                              String? meatType =
                                                  document?.foodName;

                                              String? foodQuantity =
                                                  document?.foodQuantity;

                                              String? orderStatus =
                                                  document?.orderStatus;
                                              String? paymentStatus =
                                                  document?.paymentStatus;
                                              String? totalPrice =
                                                  document?.totalPrice;

                                              return Padding(
                                                padding:
                                                    const EdgeInsets.all(8.0),
                                                child: Container(
                                                    decoration: BoxDecoration(
                                                      color: Colors.grey[50],
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              15),
                                                      // border: Border.all(
                                                      //     color: Colors.grey),
                                                      // Light gray background
                                                      // Smooth corners
                                                      boxShadow: [
                                                        BoxShadow(
                                                          color: Colors.black
                                                              .withOpacity(0.1),
                                                          // Light shadow effect
                                                          blurRadius: 10,
                                                          spreadRadius: 2,
                                                          offset: Offset(0,
                                                              4), // Slight downward shadow
                                                        ),
                                                      ],
                                                    ),
                                                    child: Padding(
                                                      padding:
                                                          const EdgeInsets.all(
                                                              5.0),
                                                      child: Column(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Row(
                                                            // mainAxisAlignment: MainAxisAlignment.end,
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    (orderStatus ==
                                                                                "Delivered" &&
                                                                            paymentStatus ==
                                                                                "Not Paid")
                                                                        ? "Payment Pending"
                                                                        : (orderStatus == "Delivered" &&
                                                                                paymentStatus ==
                                                                                    "Paid")
                                                                            ? "Completed"
                                                                            : "Not Delivered",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: (orderStatus == "Delivered" && paymentStatus == "Not Paid")
                                                                            ? Colors.red
                                                                            : (orderStatus == "Delivered" && paymentStatus == "Paid")
                                                                                ? Constants.secondary3
                                                                                : Constants.secondary3,
                                                                        fontWeight: FontWeight.bold,
                                                                        fontSize: 16.0,
                                                                        letterSpacing: 0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  "${index + 1}",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyLarge
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    "Food:",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: Colors
                                                                            .grey
                                                                            .shade600,
                                                                        fontWeight: FontWeight
                                                                            .bold,
                                                                        fontSize:
                                                                            12.0,
                                                                        letterSpacing:
                                                                            0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  meatType ??
                                                                      "No Name",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    "Quantity:",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: Colors
                                                                            .grey
                                                                            .shade600,
                                                                        fontWeight:
                                                                            FontWeight
                                                                                .bold,
                                                                        fontSize:
                                                                            12.0,
                                                                        letterSpacing:
                                                                            0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  foodQuantity ??
                                                                      "No Name",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    "Delivery status:",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: Colors
                                                                            .grey
                                                                            .shade600,
                                                                        fontWeight:
                                                                            FontWeight
                                                                                .bold,
                                                                        fontSize:
                                                                            12.0,
                                                                        letterSpacing:
                                                                            0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  orderStatus ??
                                                                      "No Name",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    "Payment status:",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: Colors
                                                                            .grey
                                                                            .shade600,
                                                                        fontWeight:
                                                                            FontWeight
                                                                                .bold,
                                                                        fontSize:
                                                                            12.0,
                                                                        letterSpacing:
                                                                            0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  paymentStatus ??
                                                                      "No Name",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                    "Payable Amount:",
                                                                    overflow:
                                                                        TextOverflow
                                                                            .ellipsis,
                                                                    style: TextStyle(
                                                                        color: Colors
                                                                            .grey
                                                                            .shade600,
                                                                        fontWeight:
                                                                            FontWeight
                                                                                .bold,
                                                                        fontSize:
                                                                            12.0,
                                                                        letterSpacing:
                                                                            0.5)),
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  totalPrice ??
                                                                      "No Name",
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          fontWeight: FontWeight
                                                                              .bold,
                                                                          overflow:
                                                                              TextOverflow.ellipsis),
                                                                  textAlign:
                                                                      TextAlign
                                                                          .end,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 5,
                                                          ),
                                                          paymentStatus ==
                                                                  "Paid"
                                                              ? Container()
                                                              : Row(
                                                                  mainAxisAlignment:
                                                                      MainAxisAlignment
                                                                          .end,
                                                                  children: [
                                                                    ElevatedButton(
                                                                      style: ElevatedButton
                                                                          .styleFrom(
                                                                        backgroundColor:
                                                                            Constants.colorFoodCPrimary,
                                                                        shape:
                                                                            RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.circular(10.0), // Set the border radius here
                                                                        ), // Set the background color here
                                                                      ),
                                                                      onPressed:
                                                                          () {
                                                                        Navigator
                                                                            .push(
                                                                          context,
                                                                          PageRouteBuilder(
                                                                            transitionDuration:
                                                                                Duration(milliseconds: 400),
                                                                            pageBuilder: (_, __, ___) =>
                                                                                SaveMoney(
                                                                              getMobile: "",
                                                                              getUserName: ref.read(UserDashListProvider.notifier).getUser,
                                                                              getGoalDocId: "",
                                                                              getTransData: [],
                                                                              getPaymentService: PaymentService.meatBasket,
                                                                              getPayableAmount: totalPrice ?? "",
                                                                            ),
                                                                            transitionsBuilder: (_,
                                                                                animation,
                                                                                __,
                                                                                child) {
                                                                              return SlideTransition(
                                                                                position: Tween<Offset>(
                                                                                  begin: Offset(0, 1),
                                                                                  // You can adjust the start position
                                                                                  end: Offset.zero, // You can adjust the end position
                                                                                ).animate(animation),
                                                                                child: child,
                                                                              );
                                                                            },
                                                                          ),
                                                                        );
                                                                      },
                                                                      child: Text(
                                                                          "Pay   ${totalPrice}",
                                                                          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                                                                              color: Constants.secondary,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold,
                                                                              fontSize: 15)

                                                                          // TextStyle(
                                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                          ),
                                                                    ),
                                                                    Spacer(),
                                                                    ElevatedButton(
                                                                      style: ElevatedButton
                                                                          .styleFrom(
                                                                        backgroundColor:
                                                                            Constants.colorFoodCPrimary,
                                                                        shape:
                                                                            RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.circular(10.0), // Set the border radius here
                                                                        ), // Set the background color here
                                                                      ),
                                                                      onPressed:
                                                                          () async {
                                                                        final Uri
                                                                            launchUri =
                                                                            Uri(
                                                                          scheme:
                                                                              'tel',
                                                                          path:
                                                                              Constants.adminNo1,
                                                                        );
                                                                        await launchUrl(
                                                                            launchUri);
                                                                      },
                                                                      child:
                                                                          Icon(
                                                                        Icons
                                                                            .call,
                                                                        color: FlutterFlowTheme.of(context)
                                                                            .primaryBtnText,
                                                                        size:
                                                                            24.0,
                                                                      ),
                                                                    ),
                                                                  ],
                                                                )
                                                        ],
                                                      ),
                                                    )),
                                              );
                                            },
                                          );
                                        },
                                      ),
                                    )
                                  : SliverToBoxAdapter(
                                      child: SizedBox(
                                      height: 0,
                                    )),
                            ],
                          ),
                        ),
                        (isLoading ?? false)
                            ? isRefresh == true
                                ? Container()
                                : Container(
                                    color: Colors.transparent,
                                    child: Center(
                                        child: CircularProgressIndicator(
                                      color: isRefresh == true
                                          ? Colors.transparent
                                          : FlutterFlowTheme.of(context)
                                              .primary,
                                    )),
                                  )
                            : Container()
                      ],
                    )),
              ],
            ),
          );
        }
      } else if (((ref.read(UserDashListProvider.notifier).getReffererType ??
          "0") ==
          "6")) {
        //todo:- as of now showing same ui for both meat user and food user

        if ((ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
            "1") {
          _selectedOptionCategory.value = 0;
        } else {
          _selectedOptionCategory.value = 1;
        }

        //todo:- meat user ui

        //todo:- check if user's refferer is meat shop owner and owner account still available, if so show owner pricing details instead maaka pricing details

        String documentId = Constants.getRefferer ?? "9941445471";
        DocumentReference docRef = FirebaseFirestore.instance
            .collection('AreaMeatPrices')
            .doc(documentId);

        try {
          DocumentSnapshot docSnapshot = await docRef.get();

          if (docSnapshot.exists &&
              docSnapshot.data() is Map<String, dynamic>) {
            Map<String, dynamic> data =
            docSnapshot.data() as Map<String, dynamic>;

            if (data.containsKey(documentId)) {
              isReffererPricingPresent = true;
              return Container(
                color: Constants.secondary,
                height: 100.h,
                child: SingleChildScrollView(
                  child: Column(
                    children: [
                      Padding(
                        padding: const EdgeInsets.only(left: 10, right: 10),
                        child: Container(
                          color: Colors.white,
                          height: 10.h,
                          child: Center(
                            child: Container(
                              height: 5.h,
                              child: ValueListenableBuilder<int>(
                                valueListenable: _selectedOptionCategory,
                                builder: (context, selectedIndex, child) {
                                  return ListView.builder(
                                    scrollDirection: Axis.horizontal,
                                    itemCount: _ToggleOptionCategory.length,
                                    itemBuilder: (context, index) {
                                      String category = _ToggleOptionCategory
                                          .values
                                          .toList()[index];
                                      return GestureDetector(
                                        onTap: () {
                                          _selectedOptionCategory.value = index;
                                        },
                                        child: Container(
                                          width: index == selectedIndex
                                              ? 40.w
                                              : 30.w,
                                          padding: const EdgeInsets.symmetric(
                                              horizontal: 16, vertical: 8),
                                          margin: const EdgeInsets.symmetric(
                                              horizontal: 5),
                                          decoration: BoxDecoration(
                                            // color: index == selectedIndex
                                            //     ? Constants.colorFoodCPrimary
                                            //     : Colors.grey[200],
                                            border: Border.all(
                                              color: index == selectedIndex
                                                  ? Constants.colorFoodCPrimary
                                                  : Colors.grey[200] ??
                                                  Colors.grey,
                                              // Change border color here
                                              width: 2, // Border width
                                            ),
                                            borderRadius:
                                            BorderRadius.circular(15),
                                          ),
                                          child: Center(
                                            child: Container(
                                              width: 40.w,
                                              child: Text(
                                                textAlign: TextAlign.center,
                                                category,
                                                style: TextStyle(
                                                  color: index == selectedIndex
                                                      ? Constants
                                                      .colorMeatCPrimary
                                                      : Colors.black,
                                                  fontWeight: FontWeight.bold,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                },
                              ),
                            ),
                          ),
                        ),
                      ),
                      ValueListenableBuilder<int>(
                        valueListenable: _selectedOptionCategory,
                        builder: (context, selectedIndex, child) {
                          if (selectedIndex == 0) {
//meat screen
                            return Container(
                              height: 100.h,
                              // Replace with your overlay color
                              child: RefreshIndicator(
                                onRefresh: _handleRefresh,
                                child: Column(
                                  children: [
                                    Container(
                                      height: 100.h,
                                      child: CustomScrollView(
                                        // physics: portionBHeight == MediaQuery.of(context).size.height
                                        //     ? AlwaysScrollableScrollPhysics()
                                        //     : NeverScrollableScrollPhysics(),
                                        // physics: NeverScrollableScrollPhysics(),
                                        slivers: [
                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                            child: Container(
                                                alignment:
                                                Alignment.centerLeft,
                                                color:
                                                Constants.secondary,
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets
                                                      .only(
                                                      top: 20,
                                                      left: 8.0,
                                                      right: 8.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                    children: [
                                                      Expanded(
                                                        child: Text(
                                                          "Fresh Chicken & Mutton,\nPure Delight!",

                                                          // style: Theme.of(context).textTheme.titleLarge,
                                                          style: TextStyle(
                                                              fontFamily: 'Encode Sans Condensed',
                                                              // Apply Open Sans only for this Text widget
                                                              fontSize: 25,
                                                              fontWeight: FontWeight.bold,
                                                              letterSpacing: 2.5),
                                                          maxLines: 2,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                )),
                                          )
                                              : SliverToBoxAdapter(
                                              child: SizedBox(
                                                height: 0,
                                              )),

                                          //--converting meat design

                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                            child: Center(
                                              child: Padding(
                                                padding:
                                                const EdgeInsets.all(
                                                    0.0),
                                                child: Container(
                                                  color: Colors.white,
                                                  height: 10.h,
                                                  child: Center(
                                                    child: Container(
                                                      height: 5.h,
                                                      child:
                                                      ValueListenableBuilder<
                                                          int>(
                                                        valueListenable:
                                                        _selectedMeatCategoryIndex,
                                                        builder: (context,
                                                            selectedIndex,
                                                            child) {
                                                          return ListView
                                                              .builder(
                                                            scrollDirection:
                                                            Axis.horizontal,
                                                            itemCount:
                                                            _categoryMeatMapping
                                                                .length,
                                                            itemBuilder:
                                                                (context,
                                                                index) {
                                                              String
                                                              category =
                                                              _categoryMeatMapping
                                                                  .values
                                                                  .toList()[index];
                                                              return GestureDetector(
                                                                onTap:
                                                                    () {
                                                                  _selectedMeatCategoryIndex.value =
                                                                      index;
                                                                  // _searchQuery
                                                                  //     .value = "";
                                                                },
                                                                child:
                                                                Container(
                                                                  padding: const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                      16,
                                                                      vertical:
                                                                      8),
                                                                  margin: const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                      5),
                                                                  decoration:
                                                                  BoxDecoration(
                                                                    // color: index == selectedIndex
                                                                    //     ? Constants.colorFoodCPrimary
                                                                    //     : Colors.grey[200],
                                                                    border:
                                                                    Border.all(
                                                                      color: index == selectedIndex
                                                                          ? Colors.transparent
                                                                          : Colors.grey[200] ?? Colors.grey,
                                                                      // Change border color here
                                                                      width:
                                                                      2, // Border width
                                                                    ),

                                                                    gradient:
                                                                    LinearGradient(
                                                                      colors: index == selectedIndex
                                                                          ? [
                                                                        Constants.colorMeatCPrimary,
                                                                        Constants.secondary4
                                                                      ]
                                                                          : [
                                                                        Colors.transparent ?? Colors.grey,
                                                                        Colors.transparent ?? Colors.grey
                                                                      ],
                                                                      begin:
                                                                      Alignment.topLeft,
                                                                      end:
                                                                      Alignment.bottomRight,
                                                                    ),
                                                                    borderRadius:
                                                                    BorderRadius.circular(15),
                                                                    // border: Border.all(
                                                                    //     color: Colors.grey),
                                                                    // Light gray background
                                                                    // Smooth corners
                                                                    // boxShadow: [
                                                                    //   BoxShadow(
                                                                    //     color: Colors.black.withOpacity(
                                                                    //         0.1), // Light shadow effect
                                                                    //     blurRadius: 10,
                                                                    //     spreadRadius: 2,
                                                                    //     offset: Offset(0,
                                                                    //         4), // Slight downward shadow
                                                                    //   ),
                                                                    // ],
                                                                  ),
                                                                  child:
                                                                  Center(
                                                                    child:
                                                                    Container(
                                                                      width:
                                                                      40.w,
                                                                      child:
                                                                      Text(
                                                                        textAlign: TextAlign.center,
                                                                        category,
                                                                        style: TextStyle(
                                                                          color: index == selectedIndex ? Colors.white : Colors.black,
                                                                          fontWeight: FontWeight.bold,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          )
                                              : SliverToBoxAdapter(
                                              child: SizedBox(
                                                height: 0,
                                              )),

                                          (isShowFoodSection ?? true)
                                              ? SliverToBoxAdapter(
                                            child: Center(
                                              child: Container(
                                                alignment:
                                                Alignment.center,
                                                height: 25.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color:
                                                  FlutterFlowTheme.of(
                                                      context)
                                                      .secondary,
                                                  borderRadius:
                                                  BorderRadius.only(
                                                    bottomLeft:
                                                    Radius.circular(
                                                        0),
                                                    bottomRight:
                                                    Radius.circular(
                                                        0),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets
                                                      .only(
                                                      top: 10.0),
                                                  child:
                                                  ValueListenableBuilder<
                                                      int>(
                                                    valueListenable:
                                                    _selectedMeatCategoryIndex,
                                                    builder: (context,
                                                        selectedIndex,
                                                        child) {
                                                      return ListView
                                                          .builder(
                                                        scrollDirection:
                                                        Axis.horizontal,
                                                        itemCount: selectedIndex ==
                                                            0
                                                            ? chickenMeatTypes
                                                            .length
                                                            : muttonMeatTypes
                                                            .length,
                                                        padding:
                                                        const EdgeInsets
                                                            .symmetric(
                                                            horizontal:
                                                            10),
                                                        itemBuilder:
                                                            (context,
                                                            index) {
                                                          return Center(
                                                            child:
                                                            Padding(
                                                              padding:
                                                              const EdgeInsets
                                                                  .all(
                                                                  10.0),
                                                              child: GestureDetector(
                                                                  onTap: () {
                                                                    if (selectedIndex ==
                                                                        0) {
                                                                      Navigator.push(
                                                                        context,
                                                                        MaterialPageRoute(
                                                                          builder: (context) => DetailScreen(title: chickenMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                                        ),
                                                                      );
                                                                    } else {
                                                                      Navigator.push(
                                                                        context,
                                                                        MaterialPageRoute(
                                                                          builder: (context) => DetailScreen(title: muttonMeatTypes[index].item3 ?? "", isReffererPricingPresent: isReffererPricingPresent ?? false),
                                                                        ),
                                                                      );
                                                                    }
                                                                  },
                                                                  child: Container(
                                                                    width:
                                                                    100.w / 2.5,
                                                                    height:
                                                                    220,
                                                                    decoration:
                                                                    BoxDecoration(
                                                                      color:
                                                                      Colors.white,
                                                                      borderRadius:
                                                                      BorderRadius.circular(12),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color: Colors.grey.withOpacity(0.4),
                                                                          blurRadius: 8,
                                                                          spreadRadius: 2,
                                                                          offset: Offset(2, 4),
                                                                        )
                                                                      ],
                                                                    ),
                                                                    child:
                                                                    Stack(
                                                                      children: [
                                                                        Padding(
                                                                          padding: const EdgeInsets.all(8.0),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  color: Colors.white,
                                                                                  child: Center(
                                                                                      child: Hero(
                                                                                        tag: 'imageHerodsfsad',
                                                                                        child: Image.asset(
                                                                                          selectedIndex == 0 ? chickenMeatTypes[0].item2 : muttonMeatTypes[0].item2,
                                                                                          height: 80,
                                                                                          width: 80,
                                                                                          fit: BoxFit.cover,
                                                                                        ),
                                                                                      )),
                                                                                ),
                                                                              ),
                                                                              Text(
                                                                                selectedIndex == 0 ? chickenMeatTypes[index].item1 ?? "" : muttonMeatTypes[index].item1 ?? "",
                                                                                style: TextStyle(
                                                                                  color: Colors.black,
                                                                                  fontSize: 18,
                                                                                  fontWeight: FontWeight.w900,
                                                                                  fontFamily: 'Encode Sans Condensed',
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        // Heart Icon in Top-Right
                                                                        Positioned(
                                                                          top: 8,
                                                                          right: 8,
                                                                          child: Container(
                                                                            decoration: BoxDecoration(
                                                                              shape: BoxShape.circle,
                                                                              border: Border.all(color: Colors.transparent, width: 2),
                                                                              color: Colors.white.withOpacity(0.1),
                                                                            ),
                                                                            padding: EdgeInsets.all(4),
                                                                            child: Icon(
                                                                              Icons.favorite,
                                                                              color: Colors.redAccent,
                                                                              size: 20,
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  )),
                                                            ),
                                                          );
                                                        },
                                                      );
                                                    },
                                                  ),
                                                ),

                                                //  ListView.builder(
                                                //
                                                //   scrollDirection: Axis.vertical,
                                                //   itemCount: _categories.length,
                                                //   itemBuilder: (context, index) {
                                                //     String category =
                                                //         _categories[index];
                                                //     String categoryId =
                                                //         _categoryMapping.entries
                                                //             .firstWhere((element) =>
                                                //                 element.value ==
                                                //                 category)
                                                //             .key;
                                                //
                                                //      categoryProducts =
                                                //         ref
                                                //             .read(
                                                //                 adminDashListProvider
                                                //                     .notifier)
                                                //             .foodList
                                                //             ?.where((product) =>
                                                //                 product
                                                //                     .productCategory ==
                                                //                 categoryId)
                                                //             .toList();
                                                //
                                                //     if (categoryProducts == null) {
                                                //       return Container();
                                                //     }
                                                //
                                                //     return Column(
                                                //       crossAxisAlignment:
                                                //           CrossAxisAlignment.start,
                                                //       children: [
                                                //         (categoryProducts ?? []).isEmpty
                                                //             ? Container()
                                                //             : Column(
                                                //                 crossAxisAlignment:
                                                //                     CrossAxisAlignment
                                                //                         .start,
                                                //                 children: [
                                                //                   Padding(
                                                //                     padding:
                                                //                         const EdgeInsets
                                                //                             .only(
                                                //                             left:
                                                //                                 8.0),
                                                //                     child: Text(
                                                //                         category,
                                                //                         style: Theme.of(
                                                //                                 context)
                                                //                             .textTheme
                                                //                             .titleLarge),
                                                //                   ),
                                                //                   SizedBox(
                                                //                     height: 30.h,
                                                //                     // Set static height for the GridView
                                                //                     child: GridView
                                                //                         .builder(
                                                //                       shrinkWrap:
                                                //                           true,
                                                //                       physics:
                                                //                           NeverScrollableScrollPhysics(),
                                                //                       padding:
                                                //                           const EdgeInsets
                                                //                               .all(
                                                //                               8.0),
                                                //                       gridDelegate:
                                                //                           SliverGridDelegateWithFixedCrossAxisCount(
                                                //                         crossAxisCount:
                                                //                             2,
                                                //                         crossAxisSpacing:
                                                //                             8.0,
                                                //                         mainAxisSpacing:
                                                //                             8.0,
                                                //                         childAspectRatio:
                                                //                             0.8, // Adjust ratio as needed
                                                //                       ),
                                                //                       itemCount:
                                                //                           categoryProducts
                                                //                               ?.length,
                                                //                       itemBuilder:
                                                //                           (context,
                                                //                               index) {
                                                //                         FoodList?
                                                //                             product =
                                                //                             categoryProducts?[
                                                //                                 index];
                                                //
                                                //                         String?
                                                //                             getAmount =
                                                //                             product?.amount ??
                                                //                                 "";
                                                //                         String?
                                                //                             getTitle =
                                                //                             product?.title ??
                                                //                                 "";
                                                //                         String?
                                                //                             getDocId =
                                                //                             product?.docID ??
                                                //                                 "";
                                                //                         String?
                                                //                             getDescription =
                                                //                             product?.description ??
                                                //                                 "";
                                                //                         final List<
                                                //                                 dynamic>
                                                //                             imageUrls =
                                                //                             (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A"))
                                                //                                 .fileUrls ?? [];
                                                //
                                                //                         return SizedBox(
                                                //                           height: 250,
                                                //                           // Set a fixed height for each grid item
                                                //                           child:
                                                //                               GridTile(
                                                //                             child:
                                                //                                 GestureDetector(
                                                //                               onTap:
                                                //                                   () {
                                                //                                 Navigator
                                                //                                     .push(
                                                //                                   context,
                                                //                                   MaterialPageRoute(
                                                //                                     builder: (context) => FoodDetailScreen(
                                                //                                       title: getTitle,
                                                //                                       description: getDescription,
                                                //                                       affiliateLink: "",
                                                //                                       prodDetails: "getProdDetails",
                                                //                                       prodSpec: "getProdSpec",
                                                //                                       imageUrls: imageUrls,
                                                //                                       amount: getAmount,
                                                //                                       userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                //                                       getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                //                                       minBargainAmount: "",
                                                //                                       getHeroTag: 'imageHero$index',
                                                //                                     ),
                                                //                                   ),
                                                //                                 );
                                                //                               },
                                                //                               child:
                                                //                                   Container(
                                                //                                 decoration:
                                                //                                     BoxDecoration(
                                                //                                   color:
                                                //                                       _singleton.lighten(
                                                //                                     Constants.secondary2,
                                                //                                     amount: _singleton.generateRandomColorDouble(),
                                                //                                   ),
                                                //                                   borderRadius:
                                                //                                       BorderRadius.circular(15.0),
                                                //                                 ),
                                                //                                 child:
                                                //                                     Column(
                                                //                                   mainAxisAlignment:
                                                //                                       MainAxisAlignment.spaceBetween,
                                                //                                   crossAxisAlignment:
                                                //                                       CrossAxisAlignment.start,
                                                //                                   children: [
                                                //                                     Expanded(
                                                //                                       flex: 3,
                                                //                                       child: ClipRRect(
                                                //                                         borderRadius: const BorderRadius.only(
                                                //                                           topLeft: Radius.circular(15),
                                                //                                           topRight: Radius.circular(15),
                                                //                                         ),
                                                //                                         child:  (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls.isNotEmpty
                                                //                                             ? Hero(
                                                //                                                 tag: 'imageHero$index$getTitle$getAmount',
                                                //                                                 child: Image.network(
                                                //                                                   (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0],
                                                //                                                   fit: BoxFit.cover,
                                                //                                                   width: double.infinity,
                                                //                                                   height: double.infinity,
                                                //                                                   loadingBuilder: (context, child, loadingProgress) {
                                                //                                                     if (loadingProgress == null) return child;
                                                //                                                     return Center(
                                                //                                                       child: CircularProgressIndicator(
                                                //                                                         value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                //                                                       ),
                                                //                                                     );
                                                //                                                   },
                                                //                                                 ),
                                                //                                               )
                                                //                                             : Container(color: Colors.grey),
                                                //                                       ),
                                                //                                     ),
                                                //                                     Padding(
                                                //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                                                //                                       child: Text(
                                                //                                         product?.title ?? "",
                                                //                                         style: Theme.of(context).textTheme.titleSmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                                //                                       ),
                                                //                                     ),
                                                //                                     Padding(
                                                //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 2.0),
                                                //                                       child: Text(
                                                //                                         "Rs. $getAmount",
                                                //                                         style: Theme.of(context).textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                                //                                       ),
                                                //                                     ),
                                                //                                     Visibility(
                                                //                                       visible: Constants.isAdmin,
                                                //                                       child: Padding(
                                                //                                         padding: const EdgeInsets.only(top: 8.0),
                                                //                                         child: Row(
                                                //                                           children: [
                                                //                                             IconButton(
                                                //                                               icon: Icon(Icons.delete, color: Constants.secondary3),
                                                //                                               onPressed: () {
                                                //                                                 // Delete action
                                                //                                               },
                                                //                                             ),
                                                //                                             IconButton(
                                                //                                               onPressed: () async {
                                                //                                                 _singleton.showAlertDialog(
                                                //                                                   context: context,
                                                //                                                   title: "Are you sure?",
                                                //                                                   message: "Do you want to Post Notification for this Product?",
                                                //                                                   onCancelPressed: () {},
                                                //                                                   onOkPressed: () async {
                                                //                                                     Response? getResult = await NotificationService.postNotificationWithImage(
                                                //                                                       "Get $getTitle for Rs.$getAmount ✨",
                                                //                                                       "Try bargaining for the best prices on your favorite products 🪑💰🔦🛵⚽️",
                                                //                                                       (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0] ?? null,
                                                //                                                     );
                                                //
                                                //                                                     getResult?.statusCode == 200 ? Constants.showToast("Posted Notification to Maaka Users", ToastGravity.BOTTOM) : Constants.showToast("Problem in sending Notification!", ToastGravity.BOTTOM);
                                                //                                                   },
                                                //                                                 );
                                                //                                               },
                                                //                                               icon: Icon(Icons.notification_add, color: Constants.secondary3),
                                                //                                             ),
                                                //                                           ],
                                                //                                         ),
                                                //                                       ),
                                                //                                     ),
                                                //                                   ],
                                                //                                 ),
                                                //                               ),
                                                //                             ),
                                                //                           ),
                                                //                         );
                                                //                       },
                                                //                     ),
                                                //                   ),
                                                //                 ],
                                                //               ),
                                                //       ],
                                                //     );
                                                //
                                                //     //todo:- food section
                                                //    // return Center(
                                                //    //    child: GestureDetector(
                                                //    //      onTap: () {
                                                //    //        _selectedIndexNotifier.value = index;
                                                //    //        _scrollToIndex(index);
                                                //    //      },
                                                //    //      child: ValueListenableBuilder<int>(
                                                //    //        valueListenable: _selectedIndexNotifier,
                                                //    //        builder: (context, selectedIndex, child) {
                                                //    //          bool isSelected = index == selectedIndex;
                                                //    //          return AnimatedContainer(
                                                //    //            duration: const Duration(milliseconds: 300),
                                                //    //            curve: Curves.easeInOut,
                                                //    //            child: Padding(
                                                //    //              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                //    //              child: Transform.scale(
                                                //    //                scale: isSelected ? 1.2 : 0.9,
                                                //    //                child: Opacity(
                                                //    //                  opacity: isSelected ? 1.0 : 0.6,
                                                //    //                  child: Stack(
                                                //    //                    clipBehavior: Clip.none,
                                                //    //                    children: [
                                                //    //                      Container(
                                                //    //                        width: 160,
                                                //    //                        height: 220,
                                                //    //                        decoration: BoxDecoration(
                                                //    //                          color: Colors.white,
                                                //    //                          borderRadius: BorderRadius.circular(12),
                                                //    //                          boxShadow: [
                                                //    //                            BoxShadow(
                                                //    //                              color: Colors.grey.withOpacity(0.4),
                                                //    //                              blurRadius: 10,
                                                //    //                              spreadRadius: 3,
                                                //    //                            )
                                                //    //                          ],
                                                //    //                        ),
                                                //    //                        child: Padding(
                                                //    //                          padding: const EdgeInsets.only(top: 0.0),
                                                //    //                          child: Column(
                                                //    //                            mainAxisAlignment: MainAxisAlignment.end,
                                                //    //                            children: [
                                                //    //                              Text(
                                                //    //                                "name",
                                                //    //                                style: TextStyle(
                                                //    //                                  color: isSelected ? Colors.black : Colors.grey,
                                                //    //                                  fontSize: isSelected ? 18 : 14,
                                                //    //                                  fontWeight: FontWeight.bold,
                                                //    //                                ),
                                                //    //                              ),
                                                //    //                              const SizedBox(height: 4),
                                                //    //                              Text(
                                                //    //                                '₹400',
                                                //    //                                style: const TextStyle(
                                                //    //                                  fontSize: 16,
                                                //    //                                  fontWeight: FontWeight.bold,
                                                //    //                                  color: Colors.green,
                                                //    //                                ),
                                                //    //                              ),
                                                //    //                              Text(
                                                //    //                                '₹550',
                                                //    //                                style: const TextStyle(
                                                //    //                                  fontSize: 14,
                                                //    //                                  color: Colors.red,
                                                //    //                                  decoration: TextDecoration.lineThrough,
                                                //    //                                ),
                                                //    //                              ),
                                                //    //                              const SizedBox(height: 10),
                                                //    //                            ],
                                                //    //                          ),
                                                //    //                        ),
                                                //    //                      ),
                                                //    //                      Positioned(
                                                //    //                        top: -20,
                                                //    //                        left: 20,
                                                //    //                        child: Container(
                                                //    //                          width: 100,
                                                //    //                          height: 100,
                                                //    //                          decoration: BoxDecoration(
                                                //    //                            boxShadow: [
                                                //    //                              BoxShadow(
                                                //    //                                color: Colors.grey.withOpacity(0.3),
                                                //    //                                blurRadius: 10,
                                                //    //                                spreadRadius: 2,
                                                //    //                              ),
                                                //    //                            ],
                                                //    //                          ),
                                                //    //                          child: ClipRRect(
                                                //    //                            borderRadius: BorderRadius.circular(50),
                                                //    //                            child: Image.asset(
                                                //    //                              "foodItems[index].imagePath",
                                                //    //                              fit: BoxFit.cover,
                                                //    //                            ),
                                                //    //                          ),
                                                //    //                        ),
                                                //    //                      ),
                                                //    //                    ],
                                                //    //                  ),
                                                //    //                ),
                                                //    //              ),
                                                //    //            ),
                                                //    //          );
                                                //    //        },
                                                //    //      ),
                                                //    //    ),
                                                //    //  );
                                                //   },
                                                // )
                                              ),
                                            ),
                                          )
                                              : SliverToBoxAdapter(
                                              child: SizedBox(
                                                height: 0,
                                              )),
                                        ],
                                      ),
                                    ),
                                    // Container(
                                    //     color: Constants.secondary,
                                    //     height: 10.h,
                                    //     child: Padding(
                                    //       padding:
                                    //       const EdgeInsets.only(
                                    //           top: 20),
                                    //       child:
                                    //       SingleChildScrollView(
                                    //         child: Column(
                                    //           children: [
                                    //
                                    //             Row(
                                    //               mainAxisAlignment:
                                    //               MainAxisAlignment
                                    //                   .spaceEvenly,
                                    //               children: [
                                    //                 Expanded(
                                    //                   child:
                                    //                   Padding(
                                    //                     padding: const EdgeInsets
                                    //                         .only(
                                    //                         top:
                                    //                         8.0,
                                    //                         left:
                                    //                         10.0,
                                    //                         right:
                                    //                         10.0),
                                    //                     child:
                                    //                     GestureDetector(
                                    //                       onTap:
                                    //                           () {
                                    //                         Navigator
                                    //                             .push(
                                    //                           context,
                                    //                           MaterialPageRoute(
                                    //                             builder: (context) =>
                                    //                                 OrderedMeatList(
                                    //                                   getReffererType: ref.read(UserDashListProvider.notifier).getReffererType ?? "0",
                                    //                                 ),
                                    //                           ),
                                    //                         ).then(
                                    //                                 (value) {
                                    //                               //todo:- below code refresh firebase records automatically when come back to same screen
                                    //                               // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                    //                             });
                                    //                       },
                                    //                       child:
                                    //                       Container(
                                    //                         height:
                                    //                         5.h,
                                    //                         decoration:
                                    //                         BoxDecoration(
                                    //                           gradient:
                                    //                           LinearGradient(
                                    //                             colors: [
                                    //                               Constants.colorMeatCPrimary,
                                    //                               Constants.secondary4
                                    //                             ],
                                    //                             begin:
                                    //                             Alignment.topLeft,
                                    //                             end:
                                    //                             Alignment.bottomRight,
                                    //                           ),
                                    //                           borderRadius:
                                    //                           BorderRadius.circular(20.0),
                                    //                         ),
                                    //                         child:
                                    //                         Center(
                                    //                           child: Text(
                                    //                               "My Orders",
                                    //                               style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontFamily: 'Encode Sans Condensed', fontSize: 15, color: Colors.white, fontWeight: FontWeight.bold)
                                    //
                                    //                             // TextStyle(
                                    //                             //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                    //                           ),
                                    //                         ),
                                    //                       ),
                                    //                     ),
                                    //                   ),
                                    //                 ),
                                    //               ],
                                    //             ),
                                    //           ],
                                    //         ),
                                    //       ),
                                    //     ),
                                    //   ),
                                  ],
                                ),
                              ),
                            );
                          } else if (selectedIndex == 1){
                            //grocerys screen
                            return Container(
                                height: 100.h,
                                child: Stack(
                                  children: [
                                    Column(
                                      children: [

                                        Container(
                                          color:
                                          Colors.white,
                                          height: 10.h,
                                          child: Center(
                                            child:
                                            Container(
                                              height: 5.h,
                                              child:
                                              ValueListenableBuilder<
                                                  int>(
                                                valueListenable:
                                                _selectedGroceryCategoryIndex,
                                                builder: (context,
                                                    selectedIndex,
                                                    child) {
                                                  return ListView
                                                      .builder(
                                                    scrollDirection:
                                                    Axis.horizontal,
                                                    itemCount:
                                                    _groceryCategoryMapping.length,
                                                    itemBuilder:
                                                        (context,
                                                        index) {
                                                      String
                                                      category =
                                                      _groceryCategoryMapping.values.toList()[index];
                                                      return GestureDetector(
                                                        onTap:
                                                            () {
                                                          _selectedGroceryCategoryIndex.value = index;

                                                        },
                                                        child:
                                                        Container(
                                                          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                          margin: const EdgeInsets.symmetric(horizontal: 5),
                                                          decoration: BoxDecoration(
                                                            color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                            borderRadius: BorderRadius.circular(15),
                                                            // border: Border.all(
                                                            //     color: Colors.grey),
                                                            // Light gray background
                                                            // Smooth corners
                                                            // boxShadow: [
                                                            //   BoxShadow(
                                                            //     color: Colors.black.withOpacity(
                                                            //         0.1), // Light shadow effect
                                                            //     blurRadius: 10,
                                                            //     spreadRadius: 2,
                                                            //     offset: Offset(0,
                                                            //         4), // Slight downward shadow
                                                            //   ),
                                                            // ],
                                                          ),
                                                          child: Center(
                                                            child: Text(
                                                              category,
                                                              style: TextStyle(
                                                                color: index == selectedIndex ? Colors.white : Colors.black,
                                                                fontWeight: FontWeight.bold,
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                        Expanded(
                                          child: Container(
                                            alignment:
                                            Alignment
                                                .center,
                                            height: 50.h,
                                            width: 100.w,
                                            decoration:
                                            BoxDecoration(
                                              color: FlutterFlowTheme.of(
                                                  context)
                                                  .secondary,
                                              borderRadius:
                                              BorderRadius
                                                  .only(
                                                bottomLeft:
                                                Radius.circular(
                                                    0),
                                                bottomRight:
                                                Radius.circular(
                                                    0),
                                              ),
                                            ),
                                            child: Padding(
                                              padding:
                                              const EdgeInsets
                                                  .only(
                                                  top:
                                                  10.0),
                                              child:
                                              ValueListenableBuilder<
                                                  int>(
                                                valueListenable:
                                                _selectedGroceryCategoryIndex,
                                                builder: (context,
                                                    selectedIndex,
                                                    child) {
                                                  // List<FoodList> filteredItems =
                                                  //     _getFilteredItems();

                                                  List<GroceryList>? filteredItems = _getGroceryItemsByProdCode(_groceryCategoryMapping.keys.toList()[selectedIndex]);

                                                  return ListView
                                                      .builder(
                                                    itemCount:
                                                    _groceryCategoryMapping.length,
                                                    itemBuilder:
                                                        (context, sectionIndex) {
                                                      var categoryKeys = _groceryCategoryMapping.keys.toList();
                                                      String prodCode = categoryKeys[sectionIndex];

                                                      print(ref.read(UserDashListProvider.notifier).categoryGroceryProducts);

                                                      // categoryProducts = ref
                                                      //     .read(adminDashListProvider
                                                      //     .notifier)
                                                      //     .foodList;

                                                      // List<FoodList>? sectionItems =
                                                      // _getFoodItemsByProdCode(
                                                      //     prodCode);
                                                      // if ((sectionItems ?? []).isEmpty)
                                                      //   return const SizedBox.shrink();

                                                      List<GroceryList> sectionItems = (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                      if (sectionItems.isEmpty)
                                                        return const SizedBox.shrink();

                                                      return Column(
                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                        children: [
                                                          Padding(
                                                            padding: const EdgeInsets.all(8.0),
                                                            child: Text(
                                                              '${_groceryCategoryMapping[prodCode]} ',
                                                              style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                            ),
                                                          ),
                                                          SizedBox(
                                                            height: 300,
                                                            child: ListView.builder(
                                                              controller: _scrollControllers[sectionIndex],
                                                              scrollDirection: Axis.horizontal,
                                                              itemCount: sectionItems?.length,
                                                              padding: const EdgeInsets.symmetric(horizontal: 80),
                                                              itemBuilder: (context, index) {
                                                                return Center(
                                                                  child: GestureDetector(
                                                                    onTap: () {
                                                                      _selectedIndexNotifiers[sectionIndex]!.value = index;
                                                                      _scrollToIndex(sectionIndex, index);

                                                                      GroceryList? product = sectionItems?[index];

                                                                      String? getAmount = product?.amount ?? "";
                                                                      String? getTitle = product?.title ?? "";
                                                                      String? getDocId = product?.docID ?? "";
                                                                      String? getDescription = product?.description ?? "";
                                                                      final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                      Navigator.push(
                                                                        context,
                                                                        MaterialPageRoute(
                                                                          builder: (context) => FoodDetailScreen(
                                                                            title: getTitle,
                                                                            description: getDescription,
                                                                            affiliateLink: "",
                                                                            prodDetails: "getProdDetails",
                                                                            prodSpec: "getProdSpec",
                                                                            imageUrls: imageUrls,
                                                                            amount: getAmount,
                                                                            userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                            getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                            minBargainAmount: "",
                                                                            getHeroTag: 'imageHero$index',
                                                                          ),
                                                                        ),
                                                                      );
                                                                    },
                                                                    child: ValueListenableBuilder<int>(
                                                                      valueListenable: _selectedIndexNotifiers[sectionIndex]!,
                                                                      builder: (context, selectedIndex, child) {
                                                                        bool isSelected = index == selectedIndex;
                                                                        return AnimatedContainer(
                                                                          duration: const Duration(milliseconds: 300),
                                                                          curve: Curves.easeInOut,
                                                                          child: Padding(
                                                                            padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                            child: Transform.scale(
                                                                              scale: isSelected ? 1.2 : 0.9,
                                                                              child: Opacity(
                                                                                opacity: isSelected ? 1.0 : 0.6,
                                                                                child: Container(
                                                                                  width: 160,
                                                                                  height: 220,
                                                                                  decoration: BoxDecoration(
                                                                                    color: Colors.white,
                                                                                    borderRadius: BorderRadius.circular(12),
                                                                                    boxShadow: [
                                                                                      BoxShadow(
                                                                                        color: Colors.grey.withOpacity(0.4),
                                                                                        blurRadius: 8,
                                                                                        spreadRadius: 2,
                                                                                        offset: Offset(2, 4),
                                                                                      )
                                                                                    ],
                                                                                  ),
                                                                                  child: Stack(
                                                                                    children: [
                                                                                      Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.end,
                                                                                          children: [
                                                                                            Expanded(
                                                                                              child: Container(
                                                                                                color: Colors.white,
                                                                                                child: Center(
                                                                                                  child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                      ? Hero(
                                                                                                    tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                    child: FutureBuilder(
                                                                                                      future: precacheImage(
                                                                                                        NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                        context,
                                                                                                      ),
                                                                                                      builder: (context, snapshot) {
                                                                                                        if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundColor: Colors.white,
                                                                                                            child: CircularProgressIndicator(),
                                                                                                          );
                                                                                                        } else {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundImage: NetworkImage(
                                                                                                              sectionItems?[index].fileUrls[0] ?? '',
                                                                                                            ),
                                                                                                            backgroundColor: Colors.white,
                                                                                                          );
                                                                                                        }
                                                                                                      },
                                                                                                    ),
                                                                                                  )
                                                                                                      : CircleAvatar(
                                                                                                    radius: 80,
                                                                                                    backgroundColor: Colors.grey,
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              sectionItems?[index].title ?? "",
                                                                                              style: TextStyle(
                                                                                                color: isSelected ? Colors.black : Colors.grey,
                                                                                                fontSize: isSelected ? 18 : 14,
                                                                                                fontWeight: FontWeight.w900,
                                                                                                fontFamily: 'Encode Sans Condensed',
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              '₹${sectionItems?[index].amount}',
                                                                                              style: TextStyle(
                                                                                                fontSize: 16,
                                                                                                color: Constants.colorFoodCPrimary,
                                                                                                fontWeight: FontWeight.bold,
                                                                                              ),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                      // Heart Icon in Top-Right
                                                                                      Positioned(
                                                                                        top: 8,
                                                                                        right: 8,
                                                                                        child: Container(
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            border: Border.all(color: Colors.transparent, width: 2),
                                                                                            color: Colors.white.withOpacity(0.1),
                                                                                          ),
                                                                                          padding: EdgeInsets.all(4),
                                                                                          child: Icon(
                                                                                            isSelected ? Icons.favorite : null,
                                                                                            color: isSelected ? Colors.redAccent : null,
                                                                                            size: 20,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                              physics: BouncingScrollPhysics(),
                                                            ),
                                                          ),
                                                        ],
                                                      );
                                                    },
                                                    physics:
                                                    BouncingScrollPhysics(),
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                    (isLoading ?? false)
                                        ? isRefresh == true
                                        ? Container()
                                        : Container(
                                      color: Colors
                                          .transparent,
                                      child: Center(
                                          child: CircularProgressIndicator(
                                            color: isRefresh ==
                                                true
                                                ? Colors
                                                .transparent
                                                : FlutterFlowTheme.of(context)
                                                .primary,
                                          )),
                                    )
                                        : Container()
                                  ],
                                ));

                          } else{
                            //food screen
                            return Container(
                                height: 100.h,
                                child: Stack(
                                  children: [
                                    RefreshIndicator(
                                      onRefresh: _handleRefresh,
                                      child: Column(
                                        children: [
                                          Container(
                                            height: 70.h,
                                            child: CustomScrollView(
                                              slivers: [
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Container(
                                                      alignment: Alignment
                                                          .centerLeft,
                                                      color: Constants
                                                          .secondary,
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .only(
                                                            top: 20,
                                                            left: 8.0,
                                                            right:
                                                            8.0),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                          children: [
                                                            Expanded(
                                                              child: Text(
                                                                "What are you going \n to eat Today?",

                                                                // style: Theme.of(context).textTheme.titleLarge,
                                                                style: TextStyle(
                                                                    fontFamily: 'Encode Sans Condensed',
                                                                    // Apply Open Sans only for this Text widget
                                                                    fontSize: 25,
                                                                    fontWeight: FontWeight.bold,
                                                                    letterSpacing: 2.5),
                                                                maxLines:
                                                                2,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      )),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child:
                                                    GestureDetector(
                                                      onTap: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder:
                                                                (context) =>
                                                                FoodCategoryScreen(
                                                                  selectedCategoryIndex:
                                                                  _selectedCategoryIndex.value ??
                                                                      0,
                                                                ),
                                                          ),
                                                        ).then((_) {
                                                          _selectedCategoryIndex
                                                              .value = 0;
                                                          _searchQuery
                                                              .value = "";
                                                        });
                                                      },
                                                      child: Container(
                                                        alignment:
                                                        Alignment
                                                            .center,
                                                        height: 15.h,
                                                        width: 100.w,
                                                        decoration:
                                                        BoxDecoration(
                                                          color: FlutterFlowTheme.of(
                                                              context)
                                                              .secondary,
                                                          borderRadius:
                                                          BorderRadius
                                                              .only(
                                                            bottomLeft: Radius
                                                                .circular(
                                                                0),
                                                            bottomRight: Radius
                                                                .circular(
                                                                0),
                                                          ),
                                                        ),
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .all(
                                                              10.0),
                                                          child:
                                                          Container(
                                                            height: 6.h,
                                                            width: 100.w,
                                                            decoration:
                                                            BoxDecoration(
                                                              color: Constants
                                                                  .colorFoodCSecondaryWhite,
                                                              // Light gray background
                                                              borderRadius:
                                                              BorderRadius.circular(
                                                                  30),
                                                              // Smooth corners
                                                              boxShadow: [
                                                                BoxShadow(
                                                                  color: Constants
                                                                      .colorFoodCSecondaryGrey2,
                                                                  // Light shadow effect
                                                                  blurRadius:
                                                                  10,
                                                                  spreadRadius:
                                                                  2,
                                                                  offset: Offset(
                                                                      0,
                                                                      4), // Slight downward shadow
                                                                ),
                                                              ],
                                                            ),
                                                            child: Center(
                                                              child: Row(
                                                                children: [
                                                                  Expanded(
                                                                    flex:
                                                                    3,
                                                                    child: Icon(
                                                                        Icons.search,
                                                                        color: Constants.colorFoodCPrimary),
                                                                  ),
                                                                  Expanded(
                                                                    flex:
                                                                    7,
                                                                    child:
                                                                    Text(
                                                                      "Search More Food",
                                                                      style:
                                                                      TextStyle(
                                                                        fontFamily: 'Encode Sans Condensed',
                                                                        letterSpacing: 4.5,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child: Padding(
                                                      padding:
                                                      const EdgeInsets
                                                          .all(10.0),
                                                      child: Container(
                                                        color:
                                                        Colors.white,
                                                        height: 10.h,
                                                        child: Center(
                                                          child:
                                                          Container(
                                                            height: 5.h,
                                                            child:
                                                            ValueListenableBuilder<
                                                                int>(
                                                              valueListenable:
                                                              _selectedCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                return ListView
                                                                    .builder(
                                                                  scrollDirection:
                                                                  Axis.horizontal,
                                                                  itemCount:
                                                                  _categoryMapping.length,
                                                                  itemBuilder:
                                                                      (context,
                                                                      index) {
                                                                    String
                                                                    category =
                                                                    _categoryMapping.values.toList()[index];
                                                                    return GestureDetector(
                                                                      onTap:
                                                                          () {
                                                                        _selectedCategoryIndex.value = index;
                                                                        _searchQuery.value = "";
                                                                      },
                                                                      child:
                                                                      Container(
                                                                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                                                                        margin: const EdgeInsets.symmetric(horizontal: 5),
                                                                        decoration: BoxDecoration(
                                                                          color: index == selectedIndex ? Constants.colorFoodCPrimary : Colors.grey[200],
                                                                          borderRadius: BorderRadius.circular(15),
                                                                          // border: Border.all(
                                                                          //     color: Colors.grey),
                                                                          // Light gray background
                                                                          // Smooth corners
                                                                          // boxShadow: [
                                                                          //   BoxShadow(
                                                                          //     color: Colors.black.withOpacity(
                                                                          //         0.1), // Light shadow effect
                                                                          //     blurRadius: 10,
                                                                          //     spreadRadius: 2,
                                                                          //     offset: Offset(0,
                                                                          //         4), // Slight downward shadow
                                                                          //   ),
                                                                          // ],
                                                                        ),
                                                                        child: Center(
                                                                          child: Text(
                                                                            category,
                                                                            style: TextStyle(
                                                                              color: index == selectedIndex ? Colors.white : Colors.black,
                                                                              fontWeight: FontWeight.bold,
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                              },
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                                (isShowFoodSection ?? true)
                                                    ? SliverToBoxAdapter(
                                                  child: Center(
                                                    child: Container(
                                                      alignment: Alignment
                                                          .center,
                                                      height: 50.h,
                                                      width: 100.w,
                                                      decoration:
                                                      BoxDecoration(
                                                        color: FlutterFlowTheme
                                                            .of(context)
                                                            .secondary,
                                                        borderRadius:
                                                        BorderRadius
                                                            .only(
                                                          bottomLeft: Radius
                                                              .circular(
                                                              0),
                                                          bottomRight:
                                                          Radius
                                                              .circular(
                                                              0),
                                                        ),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .only(
                                                            top:
                                                            10.0),
                                                        child:
                                                        ValueListenableBuilder<
                                                            String>(
                                                          valueListenable:
                                                          _searchQuery,
                                                          builder:
                                                              (context,
                                                              query,
                                                              child) {
                                                            return ValueListenableBuilder<
                                                                int>(
                                                              valueListenable:
                                                              _selectedCategoryIndex,
                                                              builder: (context,
                                                                  selectedIndex,
                                                                  child) {
                                                                // List<FoodList> filteredItems =
                                                                //     _getFilteredItems();

                                                                List<
                                                                    FoodList>? filteredItems = query
                                                                    .isNotEmpty
                                                                    ? ref
                                                                    .read(UserDashListProvider.notifier)
                                                                    .categoryProducts
                                                                    ?.where((item) => (item.title ?? "").toLowerCase().contains(query.toLowerCase()))
                                                                    .toList()
                                                                    : _getFoodItemsByProdCode(_categoryMapping.keys.toList()[selectedIndex]);

                                                                return ListView
                                                                    .builder(
                                                                  itemCount:
                                                                  _categoryMapping.length,
                                                                  itemBuilder:
                                                                      (context,
                                                                      sectionIndex) {
                                                                    var categoryKeys = _categoryMapping
                                                                        .keys
                                                                        .toList();
                                                                    String
                                                                    prodCode =
                                                                    categoryKeys[sectionIndex];

                                                                    print(ref
                                                                        .read(UserDashListProvider.notifier)
                                                                        .categoryProducts);

                                                                    // categoryProducts = ref
                                                                    //     .read(adminDashListProvider
                                                                    //     .notifier)
                                                                    //     .foodList;

                                                                    // List<FoodList>? sectionItems =
                                                                    // _getFoodItemsByProdCode(
                                                                    //     prodCode);
                                                                    // if ((sectionItems ?? []).isEmpty)
                                                                    //   return const SizedBox.shrink();

                                                                    List<FoodList>
                                                                    sectionItems =
                                                                    (filteredItems ?? []).where((item) => item.productCategory == prodCode).toList();
                                                                    if (sectionItems
                                                                        .isEmpty)
                                                                      return const SizedBox.shrink();

                                                                    return Column(
                                                                      crossAxisAlignment:
                                                                      CrossAxisAlignment.start,
                                                                      children: [
                                                                        Padding(
                                                                          padding: const EdgeInsets.all(8.0),
                                                                          child: Text(
                                                                            '${_categoryMapping[prodCode]} ',
                                                                            style: const TextStyle(fontFamily: 'Encode Sans Condensed', fontSize: 20, fontWeight: FontWeight.bold),
                                                                          ),
                                                                        ),
                                                                        SizedBox(
                                                                          height: 300,
                                                                          child: ListView.builder(
                                                                            controller: _scrollControllers[sectionIndex],
                                                                            scrollDirection: Axis.horizontal,
                                                                            itemCount: sectionItems?.length,
                                                                            padding: const EdgeInsets.symmetric(horizontal: 80),
                                                                            itemBuilder: (context, index) {
                                                                              return Center(
                                                                                child: GestureDetector(
                                                                                  onTap: () {
                                                                                    _selectedIndexNotifiers[sectionIndex]!.value = index;
                                                                                    _scrollToIndex(sectionIndex, index);

                                                                                    FoodList? product = sectionItems?[index];

                                                                                    String? getAmount = product?.amount ?? "";
                                                                                    String? getTitle = product?.title ?? "";
                                                                                    String? getDocId = product?.docID ?? "";
                                                                                    String? getDescription = product?.description ?? "";
                                                                                    final List<dynamic> imageUrls = product?.fileUrls ?? [];

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                        builder: (context) => FoodDetailScreen(
                                                                                          title: getTitle,
                                                                                          description: getDescription,
                                                                                          affiliateLink: "",
                                                                                          prodDetails: "getProdDetails",
                                                                                          prodSpec: "getProdSpec",
                                                                                          imageUrls: imageUrls,
                                                                                          amount: getAmount,
                                                                                          userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                                                                          getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                                                                          minBargainAmount: "",
                                                                                          getHeroTag: 'imageHero$index',
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                  child: ValueListenableBuilder<int>(
                                                                                    valueListenable: _selectedIndexNotifiers[sectionIndex]!,
                                                                                    builder: (context, selectedIndex, child) {
                                                                                      bool isSelected = index == selectedIndex;
                                                                                      return AnimatedContainer(
                                                                                        duration: const Duration(milliseconds: 300),
                                                                                        curve: Curves.easeInOut,
                                                                                        child: Padding(
                                                                                          padding: const EdgeInsets.only(left: 10.0, right: 10),
                                                                                          child: Transform.scale(
                                                                                            scale: isSelected ? 1.2 : 0.9,
                                                                                            child: Opacity(
                                                                                              opacity: isSelected ? 1.0 : 0.6,
                                                                                              child: Container(
                                                                                                width: 160,
                                                                                                height: 220,
                                                                                                decoration: BoxDecoration(
                                                                                                  color: Colors.white,
                                                                                                  borderRadius: BorderRadius.circular(12),
                                                                                                  boxShadow: [
                                                                                                    BoxShadow(
                                                                                                      color: Colors.grey.withOpacity(0.4),
                                                                                                      blurRadius: 8,
                                                                                                      spreadRadius: 2,
                                                                                                      offset: Offset(2, 4),
                                                                                                    )
                                                                                                  ],
                                                                                                ),
                                                                                                child: Stack(
                                                                                                  children: [
                                                                                                    Padding(
                                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                                      child: Column(
                                                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                                                        children: [
                                                                                                          Expanded(
                                                                                                            child: Container(
                                                                                                              color: Colors.white,
                                                                                                              child: Center(
                                                                                                                child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                                    ? Hero(
                                                                                                                  tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                                  child: FutureBuilder(
                                                                                                                    future: precacheImage(
                                                                                                                      NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                                      context,
                                                                                                                    ),
                                                                                                                    builder: (context, snapshot) {
                                                                                                                      if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                                        return CircleAvatar(
                                                                                                                          radius: 80,
                                                                                                                          backgroundColor: Colors.white,
                                                                                                                          child: CircularProgressIndicator(),
                                                                                                                        );
                                                                                                                      } else {
                                                                                                                        return CircleAvatar(
                                                                                                                          radius: 80,
                                                                                                                          backgroundImage: NetworkImage(
                                                                                                                            sectionItems?[index].fileUrls[0] ?? '',
                                                                                                                          ),
                                                                                                                          backgroundColor: Colors.white,
                                                                                                                        );
                                                                                                                      }
                                                                                                                    },
                                                                                                                  ),
                                                                                                                )
                                                                                                                    : CircleAvatar(
                                                                                                                  radius: 80,
                                                                                                                  backgroundColor: Colors.grey,
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          Text(
                                                                                                            sectionItems?[index].title ?? "",
                                                                                                            style: TextStyle(
                                                                                                              color: isSelected ? Colors.black : Colors.grey,
                                                                                                              fontSize: isSelected ? 18 : 14,
                                                                                                              fontWeight: FontWeight.w900,
                                                                                                              fontFamily: 'Encode Sans Condensed',
                                                                                                            ),
                                                                                                          ),
                                                                                                          Text(
                                                                                                            '₹${sectionItems?[index].amount}',
                                                                                                            style: TextStyle(
                                                                                                              fontSize: 16,
                                                                                                              color: Constants.colorFoodCPrimary,
                                                                                                              fontWeight: FontWeight.bold,
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    ),
                                                                                                    // Heart Icon in Top-Right
                                                                                                    Positioned(
                                                                                                      top: 8,
                                                                                                      right: 8,
                                                                                                      child: Container(
                                                                                                        decoration: BoxDecoration(
                                                                                                          shape: BoxShape.circle,
                                                                                                          border: Border.all(color: Colors.transparent, width: 2),
                                                                                                          color: Colors.white.withOpacity(0.1),
                                                                                                        ),
                                                                                                        padding: EdgeInsets.all(4),
                                                                                                        child: Icon(
                                                                                                          isSelected ? Icons.favorite : null,
                                                                                                          color: isSelected ? Colors.redAccent : null,
                                                                                                          size: 20,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ],
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      );
                                                                                    },
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    );
                                                                  },
                                                                  physics:
                                                                  BouncingScrollPhysics(),
                                                                );
                                                              },
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                )
                                                    : SliverToBoxAdapter(
                                                    child: SizedBox(
                                                      height: 0,
                                                    )),
                                              ],
                                            ),
                                          ),

                                          // Container(
                                          //      color: Constants.secondary,
                                          //      height: 10.h,
                                          //      child: Center(
                                          //        child: SingleChildScrollView(
                                          //          child: Column(
                                          //            children: [
                                          //
                                          //              Row(
                                          //                mainAxisAlignment:
                                          //                MainAxisAlignment
                                          //                    .spaceEvenly,
                                          //                children: [
                                          //                  Expanded(
                                          //                    child:
                                          //                    Padding(
                                          //                      padding: const EdgeInsets
                                          //                          .only(
                                          //                          top:
                                          //                          8.0,
                                          //                          left:
                                          //                          10.0,
                                          //                          right:
                                          //                          10.0),
                                          //                      child:
                                          //                      GestureDetector(
                                          //                        onTap:
                                          //                            () {
                                          //                          Navigator.push(
                                          //                            context,
                                          //                            MaterialPageRoute(
                                          //                              builder: (context) => OrderedFoodList(),
                                          //                            ),
                                          //                          ).then((value) {
                                          //                            //todo:- below code refresh firebase records automatically when come back to same screen
                                          //                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                          //                          });
                                          //                        },
                                          //                        child:
                                          //                        Container(
                                          //                          height:
                                          //                          5.h,
                                          //                          decoration:
                                          //                          BoxDecoration(
                                          //                            gradient:
                                          //                            LinearGradient(
                                          //                              colors: [
                                          //                                Constants.colorMeatCPrimary,
                                          //                                Constants.secondary4
                                          //                              ],
                                          //                              begin:
                                          //                              Alignment.topLeft,
                                          //                              end:
                                          //                              Alignment.bottomRight,
                                          //                            ),
                                          //                            borderRadius:
                                          //                            BorderRadius.circular(20.0),
                                          //                          ),
                                          //                          child:
                                          //                          Center(
                                          //                            child: Text(
                                          //                                "My Orders",
                                          //                                style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontFamily: 'Encode Sans Condensed', fontSize: 15, color: Colors.white, fontWeight: FontWeight.bold)
                                          //
                                          //                              // TextStyle(
                                          //                              //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                          //                            ),
                                          //                          ),
                                          //                        ),
                                          //                      ),
                                          //                    ),
                                          //                  ),
                                          //                ],
                                          //              ),
                                          //            ],
                                          //          ),
                                          //        ),
                                          //      ),
                                          //    )
                                        ],
                                      ),
                                    ),
                                    (isLoading ?? false)
                                        ? isRefresh == true
                                        ? Container()
                                        : Container(
                                      color: Colors.transparent,
                                      child: Center(
                                          child:
                                          CircularProgressIndicator(
                                            color: isRefresh == true
                                                ? Colors.transparent
                                                : FlutterFlowTheme.of(
                                                context)
                                                .primary,
                                          )),
                                    )
                                        : Container()
                                  ],
                                ));
                          }
                        },
                      ),
                    ],
                  ),
                ),
              );
            } else {
              //todo:-add area price details for meat shop owner when no details existed and also handle  error message if set method fails
              try {
                isReffererPricingPresent = false;
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Stack(
                    children: [
                      // Portion A (Background)
                      Container(
                          height: 60.h,
                          child: Stack(
                            children: [
                              RefreshIndicator(
                                onRefresh: _handleRefresh,
                                child: CustomScrollView(
                                  slivers: [
                                    SliverToBoxAdapter(
                                      child: Center(
                                        child: Container(
                                          height: 10.h,
                                          width: 100.w,
                                          decoration: BoxDecoration(
                                            color: Constants.secondary,
                                            borderRadius: BorderRadius.only(
                                              bottomLeft: Radius.circular(0),
                                              bottomRight: Radius.circular(0),
                                            ),
                                          ),
                                          child: Stack(children: [
                                            Positioned.fill(
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    left: 10.0, right: 0),
                                                child: Align(
                                                  alignment:
                                                  Alignment.centerLeft,
                                                  child: Consumer(builder:
                                                      (context, ref, child) {
                                                    double? getNetBals = ref
                                                        .watch(getUserNetBal);

                                                    // getNetBals = 0;

                                                    return Container(
                                                      width: 100.w,
                                                      child:
                                                      SingleChildScrollView(
                                                        child: Column(
                                                          mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceEvenly,
                                                          crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                          children: [
                                                            // Consumer(builder:
                                                            //     (context, ref,
                                                            //         child) {
                                                            //   double? getNetBals =
                                                            //       ref.watch(
                                                            //           getUserNetBal);
                                                            //
                                                            //   getNetBals = 0;

                                                            // return
                                                            Text(
                                                                '₹' +
                                                                    getNetBals
                                                                        .toString(),
                                                                textAlign:
                                                                TextAlign
                                                                    .start,
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .headlineLarge),
                                                            // }),
                                                            Text(
                                                              getNetBals.toString() ==
                                                                  "0.0"
                                                                  ? "Lets Start Earning"
                                                                  : "Is your Saved Earnings",
                                                              textAlign:
                                                              TextAlign
                                                                  .start,
                                                              style: Theme.of(
                                                                  context)
                                                                  .textTheme
                                                                  .titleSmall,
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    );
                                                  }),
                                                ),
                                              ),

                                              // Add more Positioned widgets for additional images
                                            ),
                                          ]),
                                        ),
                                      ),
                                    ),
                                    makeTitleHeader('My Goals', true, 0),

                                    SliverToBoxAdapter(
                                      child: StreamBuilder<QuerySnapshot>(
                                        stream: firestore
                                            .collection('users')
                                            .doc(ref
                                            .read(UserDashListProvider
                                            .notifier)
                                            .getDocId)
                                            .collection('goals')
                                            .snapshots(),
                                        builder: (BuildContext context,
                                            AsyncSnapshot<QuerySnapshot>
                                            snapshot) {
                                          if (snapshot.hasError) {
                                            return Center(
                                              child: Text(
                                                  'Error: ${snapshot.error}'),
                                            );
                                          }

                                          if (snapshot.connectionState ==
                                              ConnectionState.waiting) {
                                            return Center(
                                              child: SizedBox(
                                                child:
                                                CircularProgressIndicator(),
                                                height: 20,
                                                width: 20,
                                              ),
                                            );
                                          }

                                          ref
                                              .read(UserDashListProvider
                                              .notifier)
                                              .goalDocuments =
                                              snapshot.data!.docs;

                                          //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions

                                          //---------------------

                                          goalList = snapshot.data!.docs
                                              .map((doc) {
                                            final data = doc.data()
                                            as Map<String, dynamic>;
                                            final goalTitle =
                                            data['goalTitle'];
                                            final goalTarget =
                                            data['goalTarget'];
                                            final goalPriority =
                                            data['goalPriority'];
                                            final goalToDelete =
                                            data['goalToDelete'];
                                            // final goalIconName = data['goalIcon'];

                                            return Goal(
                                                goalTitle,
                                                goalPriority,
                                                goalTarget,
                                                0.0,
                                                "",
                                                goalToDelete,
                                                doc.id,
                                                Colors.transparent,
                                                Icons.add);
                                          })
                                              .whereType<Goal>()
                                              .toList();

                                          //----------------------------------

                                          print("goals stream build called");
                                          return Container(
                                            child: HorizontalGridView1(
                                              data: snapshot.data!.docs,
                                              getMobile: widget.getMobile,
                                              dataList: dataList,
                                              isAdmin: false,
                                            ),
                                          );
                                        },
                                      ),
                                    ),
                                    (isShowMeatSection ?? true)
                                        ? makeTitleHeader(
                                        'Fresh Meat', false, 1)
                                        : SliverToBoxAdapter(
                                        child: SizedBox(
                                          height: 0,
                                        )),
                                    (isShowMeatSection ?? true)
                                        ? SliverToBoxAdapter(
                                      child: Container(
                                        color: _singleton.lighten(
                                            Constants.secondary2,
                                            amount: _singleton
                                                .generateRandomColorDouble()),
                                        height: 22.h,
                                        child: Padding(
                                          padding:
                                          const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  children: [
                                                    Expanded(
                                                      child:
                                                      GestureDetector(
                                                        child: Card(
                                                          color: Constants
                                                              .secondary2,
                                                          elevation: 4,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                12),
                                                          ),
                                                          child: Column(
                                                            mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .center,
                                                            children: [
                                                              ClipOval(
                                                                child: Image
                                                                    .asset(
                                                                  items[0]
                                                                  [
                                                                  'image']!,
                                                                  height:
                                                                  80,
                                                                  width:
                                                                  80,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                  height:
                                                                  10),
                                                              Text(
                                                                items[0][
                                                                'title']!,
                                                                style:
                                                                TextStyle(
                                                                  fontSize:
                                                                  15,
                                                                  fontWeight:
                                                                  FontWeight.bold,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        onTap: () {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) => DetailScreen(
                                                                  title: items[0]['title'] ??
                                                                      "",
                                                                  isReffererPricingPresent:
                                                                  isReffererPricingPresent ??
                                                                      false),
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                    Expanded(
                                                      child:
                                                      GestureDetector(
                                                        onTap: () {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) => DetailScreen(
                                                                  title: items[1]
                                                                  [
                                                                  'title']!,
                                                                  isReffererPricingPresent:
                                                                  isReffererPricingPresent ??
                                                                      false),
                                                            ),
                                                          );
                                                        },
                                                        child: Card(
                                                          color: Constants
                                                              .secondary2,
                                                          elevation: 4,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                12),
                                                          ),
                                                          child: Column(
                                                            mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .center,
                                                            children: [
                                                              ClipOval(
                                                                child: Image
                                                                    .asset(
                                                                  items[1]
                                                                  [
                                                                  'image']!,
                                                                  height:
                                                                  80,
                                                                  width:
                                                                  80,
                                                                  fit: BoxFit
                                                                      .cover,
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                  height:
                                                                  10),
                                                              Text(
                                                                items[1][
                                                                'title']!,
                                                                style:
                                                                TextStyle(
                                                                  fontSize:
                                                                  15,
                                                                  fontWeight:
                                                                  FontWeight.bold,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                                Row(
                                                  mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .only(
                                                            top: 8.0,
                                                            left: 8.0,
                                                            right:
                                                            8.0),
                                                        child: Container(
                                                          decoration:
                                                          BoxDecoration(
                                                            gradient:
                                                            LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                8.0),
                                                          ),
                                                          child:
                                                          ElevatedButton(
                                                            style: ElevatedButton
                                                                .styleFrom(
                                                              backgroundColor:
                                                              Colors
                                                                  .transparent,
                                                              shape:
                                                              RoundedRectangleBorder(
                                                                borderRadius:
                                                                BorderRadius.circular(
                                                                    10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () {
                                                              Navigator
                                                                  .push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                      OrderedMeatList(
                                                                        getReffererType:
                                                                        ref.read(UserDashListProvider.notifier).getReffererType ?? "0",
                                                                      ),
                                                                ),
                                                              ).then(
                                                                      (value) {
                                                                    //todo:- below code refresh firebase records automatically when come back to same screen
                                                                    // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                  });
                                                            },
                                                            child: Text(
                                                                "My Orders",
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                    color: Constants.secondary,
                                                                    overflow: TextOverflow.ellipsis,
                                                                    fontWeight: FontWeight.bold)

                                                              // TextStyle(
                                                              //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    )
                                        : SliverToBoxAdapter(
                                        child: SizedBox(
                                          height: 0,
                                        )),

                                    makeTitleHeader(
                                        'Recent Transactions', true, 2),

                                    //todo:- 26.1.24 second approach
                                    SliverToBoxAdapter(
                                      child: StreamBuilder<List<Transactionss>>(
                                        stream: ref
                                            .read(UserDashListProvider.notifier)
                                            .transactionsStream,
                                        builder: (context, snapshot) {
                                          if (snapshot.connectionState ==
                                              ConnectionState.waiting) {
                                            return Center(
                                                child: SizedBox(
                                                  child:
                                                  CircularProgressIndicator(),
                                                  height: 20,
                                                  width: 20,
                                                ));
                                          } else if (snapshot.hasError) {
                                            return Text(
                                                'Error: ${snapshot.error}');
                                          } else {
                                            // Use the snapshot.data to build your UI
                                            dataList = snapshot.data;

                                            // If dataList is null or empty, you can handle it accordingly
                                            if (dataList == null ||
                                                dataList!.isEmpty) {
                                              return Center(
                                                child: Column(
                                                  mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                                  crossAxisAlignment:
                                                  CrossAxisAlignment.center,
                                                  children: [
                                                    InkWell(
                                                      child: Image.asset(
                                                        'images/final/SecurityCode/MPin.png',
                                                        width: 150,
                                                        height: 150,
                                                      ),
                                                      onTap: () {
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                400),
                                                            pageBuilder:
                                                                (_, __, ___) =>
                                                                SaveMoney(
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  getUserName: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getUser,
                                                                  getGoalDocId: "",
                                                                  getTransData:
                                                                  dataList,
                                                                  getPaymentService:
                                                                  PaymentService
                                                                      .maakaMoney,
                                                                ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    SizedBox(height: 16),
                                                    Text(
                                                      "Tap to Start Saving Money!",
                                                      style: TextStyle(
                                                          fontSize: 20,
                                                          fontWeight:
                                                          FontWeight.bold),
                                                      textAlign:
                                                      TextAlign.center,
                                                    ),
                                                    SizedBox(height: 16),
                                                    Text(
                                                      "Cheers to Smart financial moves and Savings Plans.",
                                                      textAlign:
                                                      TextAlign.center,
                                                    ),
                                                  ],
                                                ),
                                              );
                                            }

                                            // Your logic to build the UI using the dataList
                                            // ...
                                            print(
                                                "transaction stream build called");
                                            return ListView.builder(
                                              shrinkWrap: true,
                                              physics:
                                              NeverScrollableScrollPhysics(),
                                              itemCount: dataList?.length,
                                              itemBuilder: (context, index) {
                                                if (index > 2) {
                                                  return SizedBox
                                                      .shrink(); // Return an empty widget for transactions beyond the last three
                                                }

                                                final document =
                                                dataList?[index];

                                                final amount = document?.amount;
                                                final transType =
                                                    document?.isDeposit;

                                                final date = document?.date;
                                                final mobile = document?.mobile;
                                                final docId = document?.docId;
                                                final interest =
                                                    document?.interest;
                                                final timeStamp =
                                                    document?.timmeStamp;

                                                // Replace this with your Timestamp object
                                                Timestamp timestamp =
                                                    timeStamp ??
                                                        Timestamp(000, 000);
                                                // Convert Timestamp to DateTime
                                                DateTime dateTime =
                                                timestamp.toDate();

                                                // Format date and time
                                                String formattedDateTime =
                                                DateFormat(
                                                    'dd-MM-yyyy h:mm a')
                                                    .format(dateTime);

                                                //todo:-  adding estimated time for withdrawal request from current time

                                                if (transType == false &&
                                                    amount == 0) {
                                                  DateTime estimatedDateTime =
                                                  dateTime.add(Duration(
                                                      minutes: 20));
                                                  formattedDateTime =
                                                      DateFormat('h:mm a')
                                                          .format(
                                                          estimatedDateTime);
                                                }

                                                String getFinInt =
                                                interest == null
                                                    ? 0.0.toString()
                                                    : interest
                                                    .toStringAsFixed(2);

                                                return Container(
                                                  color: Constants.secondary
                                                      .withOpacity(0.95),
                                                  child: Padding(
                                                    padding:
                                                    const EdgeInsets.all(5),
                                                    child: Card(
                                                      shape:
                                                      RoundedRectangleBorder(
                                                        borderRadius:
                                                        BorderRadius
                                                            .circular(6.0),
                                                      ),
                                                      color: amount == 0
                                                          ? Constants.secondary
                                                          : Constants.secondary,
                                                      elevation: 4.0,
                                                      child: ListTile(
                                                        leading: Card(
                                                          color: transType ==
                                                              true
                                                              ? FlutterFlowTheme
                                                              .of(
                                                              context)
                                                              .primary
                                                              : FlutterFlowTheme
                                                              .of(context)
                                                              .secondary1,
                                                          clipBehavior: Clip
                                                              .antiAliasWithSaveLayer,
                                                          elevation: 5.0,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                8.0),
                                                          ),
                                                          child: Padding(
                                                            padding:
                                                            const EdgeInsets
                                                                .all(8.0),
                                                            child: Icon(
                                                              transType == true
                                                                  ? amount == 0
                                                                  ? Icons
                                                                  .lock_clock
                                                                  : Icons
                                                                  .arrow_forward
                                                                  : amount == 0
                                                                  ? Icons
                                                                  .lock_clock
                                                                  : Icons
                                                                  .arrow_back,
                                                              color: Constants
                                                                  .secondary,
                                                              size: 24.0,
                                                            ),
                                                          ),
                                                        ),
                                                        title: Text(
                                                          transType == true
                                                              ? amount == 0
                                                              ? "Processing Payment"
                                                              : "Deposit"
                                                              : amount == 0
                                                              ? "Processing Request"
                                                              : "Withdrawn",
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyLarge
                                                              ?.copyWith(
                                                              color: amount ==
                                                                  0
                                                                  ? Constants
                                                                  .primary
                                                                  : Constants
                                                                  .primary,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis),
                                                        ),
                                                        subtitle: Text(
                                                          transType == true
                                                              ? amount == 0
                                                              ? formattedDateTime
                                                              .toString()
                                                              .toUpperCase()
                                                              : formattedDateTime
                                                              .toString()
                                                              .toUpperCase()
                                                              : amount == 0
                                                              ? "Receive Money before - $formattedDateTime"
                                                              : formattedDateTime
                                                              .toString()
                                                              .toUpperCase(),
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                              color: amount ==
                                                                  0
                                                                  ? Constants
                                                                  .secondary3
                                                                  : Colors
                                                                  .black,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis),
                                                        ),
                                                        trailing: Container(
                                                          child: Column(
                                                            mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                            crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .end,
                                                            children: [
                                                              amount == 0
                                                                  ? Text("")
                                                                  : Text(
                                                                transType ==
                                                                    true
                                                                    ? "+" +
                                                                    '$amount' +
                                                                    ' ₹'
                                                                    : "" +
                                                                    '$amount' +
                                                                    ' ₹',
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .titleSmall
                                                                    ?.copyWith(
                                                                    color: transType == true ? Constants.deposite : Constants.withdrawal,
                                                                    overflow: TextOverflow.ellipsis,
                                                                    fontWeight: FontWeight.bold),
                                                              ),
                                                              amount == 0
                                                                  ? Text("")
                                                                  : Visibility(
                                                                visible: transType ==
                                                                    true
                                                                    ? true
                                                                    : false,
                                                                child:
                                                                Text(
                                                                  transType ==
                                                                      true
                                                                      ? "+" +
                                                                      '$getFinInt' +
                                                                      ' ₹'
                                                                      : '',
                                                                  style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                      color: transType == true
                                                                          ? Colors.grey
                                                                          : Colors.red,
                                                                      overflow: TextOverflow.ellipsis,
                                                                      fontWeight: FontWeight.bold),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        onTap: () {},
                                                      ),
                                                    ),
                                                  ),
                                                );
                                              },
                                            );
                                          }
                                        },
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              (isLoading ?? false)
                                  ? isRefresh == true
                                  ? Container()
                                  : Container(
                                color: Colors.transparent,
                                child: Center(
                                    child: CircularProgressIndicator(
                                      color: isRefresh == true
                                          ? Colors.transparent
                                          : FlutterFlowTheme.of(context)
                                          .primary,
                                    )),
                              )
                                  : Container()
                            ],
                          )),
                      // Portion B (Overlay)
                      Positioned(
                        bottom: 0,
                        left: 0,
                        right: 0,
                        child: GestureDetector(
                          onVerticalDragUpdate: _onVerticalDragUpdate,
                          onVerticalDragEnd: _onVerticalDragEnd,
                          behavior: HitTestBehavior.translucent,
                          child: ValueListenableBuilder<double>(
                            valueListenable: portionBHeightNotifier,
                            builder: (context, portionBHeight, child) {
                              return Container(
                                height: portionBHeight,
                                decoration: BoxDecoration(
                                  color: Colors.lightBlue.withOpacity(0.15),
                                  borderRadius: new BorderRadius.only(
                                    topLeft: Radius.circular(35),
                                    topRight: Radius.circular(35),
                                  ),
                                ), // Replace with your overlay color
                                child: Column(
                                  children: [
                                    SizedBox(
                                      height: 1.h,
                                    ),
                                    Container(
                                      height: 1.h,
                                      width: 15.w,
                                      decoration: BoxDecoration(
                                        color: Constants.secondary,
                                        borderRadius: BorderRadius.circular(10),
                                      ),
                                    ),
                                    Expanded(
                                      child: Padding(
                                        padding:
                                        const EdgeInsets.only(top: 20.0),
                                        child: CustomScrollView(
                                          // physics: portionBHeight == MediaQuery.of(context).size.height
                                          //     ? AlwaysScrollableScrollPhysics()
                                          //     : NeverScrollableScrollPhysics(),
                                          physics:
                                          NeverScrollableScrollPhysics(),
                                          slivers: [
                                            makeTitleHeader(
                                                'Shopify', false, 4),
                                            SliverToBoxAdapter(
                                              child: Center(
                                                child: Container(
                                                  alignment: Alignment.center,
                                                  height: 17.h,
                                                  width: 100.w,
                                                  decoration: BoxDecoration(
                                                    color: FlutterFlowTheme.of(
                                                        context)
                                                        .secondary,
                                                    borderRadius:
                                                    BorderRadius.only(
                                                      bottomLeft:
                                                      Radius.circular(0),
                                                      bottomRight:
                                                      Radius.circular(0),
                                                    ),
                                                  ),
                                                  child: StreamBuilder(
                                                    stream: FirebaseFirestore
                                                        .instance
                                                        .collection('banners')
                                                        .snapshots(),
                                                    builder: (context,
                                                        AsyncSnapshot<
                                                            QuerySnapshot>
                                                        snapshot) {
                                                      if (!snapshot.hasData) {
                                                        return Center(
                                                            child:
                                                            CircularProgressIndicator());
                                                      }

                                                      if (snapshot.data!.docs ==
                                                          null ||
                                                          snapshot.data!.docs
                                                              .isEmpty) {
                                                        return Center(
                                                          child: Column(
                                                            mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                            crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .center,
                                                            children: [
                                                              InkWell(
                                                                child:
                                                                Image.asset(
                                                                  'images/final/SecurityCode/MPin.png',
                                                                  width: 80,
                                                                  height: 80,
                                                                ),
                                                                onTap: () {},
                                                              ),
                                                              Text(
                                                                "New Offers are About to Load!",
                                                                style: TextStyle(
                                                                    fontSize:
                                                                    20,
                                                                    fontWeight:
                                                                    FontWeight
                                                                        .bold),
                                                                textAlign:
                                                                TextAlign
                                                                    .center,
                                                              ),
                                                              Text(
                                                                "Cheers to Smart Buying Plans.",
                                                                textAlign:
                                                                TextAlign
                                                                    .center,
                                                              ),
                                                            ],
                                                          ),
                                                        );
                                                      }

                                                      return GridView.builder(
                                                        physics:
                                                        NeverScrollableScrollPhysics(),
                                                        padding:
                                                        const EdgeInsets
                                                            .all(8.0),
                                                        gridDelegate:
                                                        SliverGridDelegateWithFixedCrossAxisCount(
                                                          crossAxisCount: 3,
                                                          crossAxisSpacing: 8.0,
                                                          mainAxisSpacing: 8.0,
                                                          childAspectRatio:
                                                          1.0, // Adjust this to change item size ratio
                                                        ),
                                                        itemCount: snapshot
                                                            .data!.docs.length,
                                                        itemBuilder:
                                                            (context, index) {
                                                          if (index > 2) {
                                                            isProductCountExceeds =
                                                            true;
                                                            return SizedBox
                                                                .shrink(); // Return an empty widget for transactions beyond the last three
                                                          } else {
                                                            isProductCountExceeds =
                                                            false;
                                                          }

                                                          var doc = snapshot
                                                              .data!
                                                              .docs[index];
                                                          List<dynamic>
                                                          imageUrls =
                                                          (doc.data() as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'fileUrls') ??
                                                              false
                                                              ? doc[
                                                          'fileUrls']
                                                              : [];

                                                          String getTitle = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'title') ??
                                                              false
                                                              ? doc['title']
                                                              : "";

                                                          String getDescription = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'description') ??
                                                              false
                                                              ? doc[
                                                          'description']
                                                              : "";

                                                          String getAmount = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'amount') ??
                                                              false
                                                              ? doc['amount']
                                                              : "";

                                                          String
                                                          getMinBargainAmount =
                                                          (doc.data() as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'minBargainAmount') ??
                                                              false
                                                              ? doc[
                                                          'minBargainAmount']
                                                              : "";

                                                          String getProdDetails = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'productDetails') ??
                                                              false
                                                              ? doc[
                                                          'productDetails']
                                                              : "";

                                                          String getProdSpec = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'productSpec') ??
                                                              false
                                                              ? doc[
                                                          'productSpec']
                                                              : "";

                                                          String getAffiliate = (doc
                                                              .data()
                                                          as Map<
                                                              String,
                                                              dynamic>?)
                                                              ?.containsKey(
                                                              'affiliateLink') ??
                                                              false
                                                              ? doc[
                                                          'affiliateLink']
                                                              : "";

                                                          return GridTile(
                                                            child:
                                                            GestureDetector(
                                                              onTap: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                        ProductDetailScreen(
                                                                          title:
                                                                          getTitle,
                                                                          description:
                                                                          getDescription,
                                                                          affiliateLink:
                                                                          getAffiliate,
                                                                          prodDetails:
                                                                          getProdDetails,
                                                                          prodSpec:
                                                                          getProdSpec,
                                                                          imageUrls:
                                                                          imageUrls,
                                                                          amount:
                                                                          getAmount,
                                                                          userName:
                                                                          ref.read(UserDashListProvider.notifier).getUser ??
                                                                              "",
                                                                          getAdminType:
                                                                          ref.read(UserDashListProvider.notifier).getAdminType ??
                                                                              "",
                                                                          minBargainAmount:
                                                                          getMinBargainAmount,
                                                                          getHeroTag:
                                                                          'imageHero$index',
                                                                        ),
                                                                  ),
                                                                );
                                                              },
                                                              child: Container(
                                                                decoration:
                                                                BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                      context)
                                                                      .secondary
                                                                      .withOpacity(
                                                                      0.4),
                                                                  borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                      15.0),
                                                                ),
                                                                child: Column(
                                                                  mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .spaceEvenly,
                                                                  crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                                  children: [
                                                                    Expanded(
                                                                      flex: 5,
                                                                      child:
                                                                      Container(
                                                                        // Adjust the height to make it smaller
                                                                        width:
                                                                        100.w,
                                                                        // Adjust the width to make it smaller
                                                                        child:
                                                                        ClipRRect(
                                                                          borderRadius: BorderRadius.only(
                                                                              topLeft: Radius.circular(15),
                                                                              topRight: Radius.circular(15),
                                                                              bottomLeft: Radius.circular(15),
                                                                              bottomRight: Radius.circular(15)),
                                                                          child: imageUrls.isNotEmpty
                                                                              ? Hero(
                                                                            tag: 'imageHero$index',
                                                                            child: Image.network(
                                                                              imageUrls[0],
                                                                              fit: BoxFit.fitWidth,
                                                                              loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                                                                                if (loadingProgress == null) {
                                                                                  return child;
                                                                                } else {
                                                                                  return Center(
                                                                                    child: CircularProgressIndicator(
                                                                                      value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                                                    ),
                                                                                  );
                                                                                }
                                                                              },
                                                                            ),
                                                                          )
                                                                              : Container(color: Colors.grey),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    Expanded(
                                                                      flex: 3,
                                                                      child:
                                                                      Column(
                                                                        mainAxisAlignment:
                                                                        MainAxisAlignment.center,
                                                                        children: [
                                                                          Padding(
                                                                            padding:
                                                                            const EdgeInsets.only(left: 8.0),
                                                                            child:
                                                                            Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                          Padding(
                                                                            padding:
                                                                            const EdgeInsets.only(left: 8.0),
                                                                            child:
                                                                            Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      );
                                                    },
                                                  ),
                                                ),
                                              ),
                                            ),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                height: 10.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                      context)
                                                      .secondary,
                                                  borderRadius:
                                                  BorderRadius.only(
                                                    bottomLeft:
                                                    Radius.circular(0),
                                                    bottomRight:
                                                    Radius.circular(0),
                                                  ),
                                                ),
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets.all(8.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                            ElevatedButton
                                                                .styleFrom(
                                                              backgroundColor:
                                                              Constants
                                                                  .primary,
                                                              shape:
                                                              RoundedRectangleBorder(
                                                                borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                    10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                      ProductListScreen(
                                                                        userName: ref
                                                                            .read(UserDashListProvider.notifier)
                                                                            .getUser ??
                                                                            "",
                                                                      ),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text('More',
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                    color: Constants
                                                                        .secondary,
                                                                    overflow:
                                                                    TextOverflow
                                                                        .ellipsis,
                                                                    fontWeight:
                                                                    FontWeight.bold)),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: 10,
                                                      ),
                                                      Expanded(
                                                        child: Container(
                                                          child: ElevatedButton(
                                                            style:
                                                            ElevatedButton
                                                                .styleFrom(
                                                              backgroundColor:
                                                              Constants
                                                                  .primary,
                                                              shape:
                                                              RoundedRectangleBorder(
                                                                borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                    10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed:
                                                                () async {
                                                              // Navigator.push(
                                                              //   context,
                                                              //   MaterialPageRoute(
                                                              //     builder: (context) =>
                                                              //         ProductListScreen(
                                                              //       userName: ref
                                                              //               .read(
                                                              //                   UserDashListProvider
                                                              //                       .notifier)
                                                              //               .getUser ??
                                                              //           "",
                                                              //     ),
                                                              //   ),
                                                              // ).then((value) {
                                                              //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                              //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              // });

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder: (context) =>
                                                                      AffiliateListScreen(
                                                                          userName:
                                                                          ref.read(UserDashListProvider.notifier).getUser ?? ""),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                              'Shop Now',
                                                              style: Theme.of(
                                                                  context)
                                                                  .textTheme
                                                                  .bodyMedium
                                                                  ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                  TextOverflow
                                                                      .ellipsis,
                                                                  fontWeight:
                                                                  FontWeight
                                                                      .bold),
                                                            ),
                                                          ),
                                                          height: 5.h,
                                                          width: 50.w,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'Quick Access', false, 1),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                color: Constants.secondary,
                                                height: 15.h,
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets.all(0.0),
                                                  child: Card(
                                                    color: Constants.secondary,
                                                    elevation: 0,
                                                    shape:
                                                    RoundedRectangleBorder(
                                                      borderRadius:
                                                      BorderRadius.circular(
                                                          0),
                                                      side: BorderSide(
                                                          color: Colors
                                                              .transparent,
                                                          width: 1),
                                                    ),
                                                    child: Row(
                                                      mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceAround,
                                                      children: [
                                                        ReusableCertificateSection(
                                                          getText: "Save ₹",
                                                          getImage: "saveMoney",
                                                          getTextColor:
                                                          FlutterFlowTheme.of(
                                                              context)
                                                              .primary,
                                                          getIconColor:
                                                          Constants
                                                              .secondary,
                                                          getBackgroundColor:
                                                          Constants.primary,
                                                          onTap: () {
                                                            // Navigator.push(
                                                            //   context,
                                                            //   PageRouteBuilder(
                                                            //     transitionDuration:
                                                            //         Duration(milliseconds: 400),
                                                            //     pageBuilder: (_, __, ___) =>
                                                            //         SaveMoney(
                                                            //       getMobile: widget.getMobile,
                                                            //       getUserName: ref
                                                            //           .read(UserDashListProvider
                                                            //               .notifier)
                                                            //           .getUser,
                                                            //       getGoalDocId: "",
                                                            //       getTransData: dataList,
                                                            //     ),
                                                            //     transitionsBuilder:
                                                            //         (_, animation, __, child) {
                                                            //       return SlideTransition(
                                                            //         position: Tween<Offset>(
                                                            //           begin: Offset(0, 1),
                                                            //           // You can adjust the start position
                                                            //           end: Offset
                                                            //               .zero, // You can adjust the end position
                                                            //         ).animate(animation),
                                                            //         child: child,
                                                            //       );
                                                            //     },
                                                            //   ),
                                                            // );

                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                    400),
                                                                pageBuilder: (_,
                                                                    __,
                                                                    ___) =>
                                                                    GoalsHistory1(
                                                                      getDocId: ref
                                                                          .read(UserDashListProvider
                                                                          .notifier)
                                                                          .getDocId,
                                                                      getMobile: widget
                                                                          .getMobile,
                                                                      dataList:
                                                                      dataList ??
                                                                          [],
                                                                    ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                    animation,
                                                                    __,
                                                                    child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                      Offset(
                                                                          0,
                                                                          1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                    child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Request",
                                                          getImage: "moneyReq",
                                                          getTextColor:
                                                          FlutterFlowTheme.of(
                                                              context)
                                                              .primary,
                                                          getIconColor:
                                                          Colors.black,
                                                          getBackgroundColor:
                                                          Constants
                                                              .secondary1,
                                                          onTap: () {
                                                            double?
                                                            getFinalGoalAchievedAmount =
                                                            findGoalAchievedAmount();

                                                            isSavAmntReq = true;
                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                    400),
                                                                pageBuilder: (_,
                                                                    __,
                                                                    ___) =>
                                                                    RequestMoney(
                                                                      getMobile: widget
                                                                          .getMobile,
                                                                      isSavingReq:
                                                                      isSavAmntReq,
                                                                      getUserName: ref
                                                                          .read(UserDashListProvider
                                                                          .notifier)
                                                                          .getUser,
                                                                      getReqAmnt:
                                                                      "",
                                                                      getGoalDocId:
                                                                      "",
                                                                      getGoalTargetAmnt:
                                                                      "",
                                                                      goalAmount:
                                                                      getFinalGoalAchievedAmount ??
                                                                          0.0,
                                                                    ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                    animation,
                                                                    __,
                                                                    child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                      Offset(
                                                                          0,
                                                                          1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                    child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Goals",

                                                          ///Offers
                                                          getImage: "Goal",
                                                          getTextColor:
                                                          FlutterFlowTheme.of(
                                                              context)
                                                              .primary,
                                                          getIconColor:
                                                          Colors.red,
                                                          getBackgroundColor:
                                                          Constants.primary,
                                                          onTap: () async {
                                                            //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
                                                            // Tuple2<List<Goal>, String>
                                                            //     getGoalDetails =
                                                            //     await updateGoalProvider();

                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                    400),
                                                                pageBuilder: (_,
                                                                    __,
                                                                    ___) =>
                                                                    GoalsHistory1(
                                                                      getDocId: ref
                                                                          .read(UserDashListProvider
                                                                          .notifier)
                                                                          .getDocId,
                                                                      getMobile: widget
                                                                          .getMobile,
                                                                      dataList:
                                                                      dataList ??
                                                                          [],
                                                                    ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                    animation,
                                                                    __,
                                                                    child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                      Offset(
                                                                          0,
                                                                          1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                    child,
                                                                  );
                                                                },
                                                              ),
                                                            );

                                                            // Navigator.push(
                                                            //   context,
                                                            //   MaterialPageRoute(
                                                            //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
                                                            //   ),
                                                            // ).then((value) {
                                                            //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                            //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                            // });
                                                          },
                                                        ),
                                                        ReusableCertificateSection(
                                                          getText: "Rewards",
                                                          getImage: "cashback",
                                                          getTextColor:
                                                          FlutterFlowTheme.of(
                                                              context)
                                                              .primary,
                                                          getIconColor:
                                                          Colors.black,
                                                          getBackgroundColor:
                                                          Constants
                                                              .secondary1,
                                                          onTap: () {
                                                            isSavAmntReq =
                                                            false;
                                                            Navigator.push(
                                                              context,
                                                              PageRouteBuilder(
                                                                transitionDuration:
                                                                Duration(
                                                                    milliseconds:
                                                                    400),
                                                                pageBuilder: (_,
                                                                    __,
                                                                    ___) =>
                                                                    CashbackDetails(
                                                                      getMobile: widget
                                                                          .getMobile,
                                                                      isSavingReq:
                                                                      isSavAmntReq,
                                                                    ),
                                                                transitionsBuilder:
                                                                    (_,
                                                                    animation,
                                                                    __,
                                                                    child) {
                                                                  return SlideTransition(
                                                                    position: Tween<
                                                                        Offset>(
                                                                      begin:
                                                                      Offset(
                                                                          0,
                                                                          1),
                                                                      // You can adjust the start position
                                                                      end: Offset
                                                                          .zero, // You can adjust the end position
                                                                    ).animate(
                                                                        animation),
                                                                    child:
                                                                    child,
                                                                  );
                                                                },
                                                              ),
                                                            );
                                                          },
                                                        ),
                                                        // Add more ReusableCertificateSection widgets as needed
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'Shop and Earn', true, 3),
                                            SliverToBoxAdapter(
                                              child: LayoutBuilder(
                                                builder:
                                                    (context, constraints) {
                                                  return Stack(
                                                    alignment: Alignment.center,
                                                    children: [
                                                      Center(
                                                        child: Container(
                                                          width:
                                                          double.infinity,
                                                          // Take full width
                                                          decoration:
                                                          BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                .of(context)
                                                                .secondary,
                                                            borderRadius:
                                                            BorderRadius
                                                                .only(
                                                              bottomLeft: Radius
                                                                  .circular(0),
                                                              bottomRight:
                                                              Radius
                                                                  .circular(
                                                                  0),
                                                            ),
                                                          ),
                                                          child:
                                                          GridView.builder(
                                                            gridDelegate:
                                                            SliverGridDelegateWithFixedCrossAxisCount(
                                                              crossAxisCount: 2,
                                                              crossAxisSpacing:
                                                              10,
                                                              mainAxisSpacing:
                                                              10,
                                                              childAspectRatio:
                                                              3 / 2,
                                                            ),
                                                            padding:
                                                            EdgeInsets.all(
                                                                10),
                                                            itemCount: _singleton
                                                                .shopNowItems
                                                                .length,
                                                            itemBuilder:
                                                                (context,
                                                                index) {
                                                              return GestureDetector(
                                                                child:
                                                                GridItemWidget(
                                                                  item: _singleton
                                                                      .shopNowItems[
                                                                  index],
                                                                  showRandomColor:
                                                                  false,
                                                                ),
                                                                onTap:
                                                                    () async {
                                                                  _isTappingAffiliateApp
                                                                      .value =
                                                                  true;
                                                                  String?
                                                                  getApp =
                                                                      _singleton
                                                                          .shopNowItems[
                                                                      index]
                                                                          .title;
                                                                  String
                                                                  getUser =
                                                                      getUserName ??
                                                                          "";

                                                                  String?
                                                                  token =
                                                                  await NotificationService
                                                                      .getDocumentIDsAndData();

                                                                  if (await canLaunch(
                                                                      _singleton
                                                                          .shopNowItems[index]
                                                                          .affiliateLink ??
                                                                          "")) {
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                        "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                    _isTappingAffiliateApp
                                                                        .value =
                                                                    false;
                                                                    await launch(
                                                                        _singleton.shopNowItems[index].affiliateLink ??
                                                                            "");
                                                                  } else {
                                                                    Constants.showToast(
                                                                        "Try Again After SomeTimes",
                                                                        ToastGravity
                                                                            .BOTTOM);
                                                                    _isTappingAffiliateApp
                                                                        .value =
                                                                    false;
                                                                    await NotificationService.postNotificationRequest(
                                                                        token ??
                                                                            "",
                                                                        "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                        "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                    throw 'Could not launch $getApp';
                                                                  }
                                                                },
                                                              );
                                                            },
                                                            physics:
                                                            NeverScrollableScrollPhysics(),
                                                            shrinkWrap:
                                                            true, // Important to wrap in a SingleChildScrollView
                                                          ),
                                                        ),
                                                      ),
                                                      ValueListenableBuilder<
                                                          bool>(
                                                        valueListenable:
                                                        _isTappingAffiliateApp,
                                                        builder: (context,
                                                            isCreating, child) {
                                                          if (isCreating) {
                                                            return Container(
                                                              // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                              child: Center(
                                                                child:
                                                                CircularProgressIndicator(),
                                                              ),
                                                            );
                                                          }
                                                          return SizedBox
                                                              .shrink();
                                                        },
                                                      ),
                                                    ],
                                                  );
                                                },
                                              ),
                                            ),
                                            makeTitleHeader(
                                                'News For You', false, 3),
                                            SliverToBoxAdapter(
                                              child: Container(
                                                height: 40.h,
                                                width: 100.w,
                                                decoration: BoxDecoration(
                                                  color: FlutterFlowTheme.of(
                                                      context)
                                                      .secondary,
                                                  borderRadius:
                                                  BorderRadius.only(
                                                    bottomLeft:
                                                    Radius.circular(0),
                                                    bottomRight:
                                                    Radius.circular(0),
                                                  ),
                                                ),
                                                child: SingleChildScrollView(
                                                  child: Column(
                                                    children: [
                                                      Container(
                                                        height: 10.h,
                                                        width: 90.w,
                                                        decoration:
                                                        BoxDecoration(
                                                          color: FlutterFlowTheme
                                                              .of(context)
                                                              .secondary1
                                                              .withOpacity(0.6),
                                                          borderRadius:
                                                          BorderRadius.all(
                                                              Radius
                                                                  .circular(
                                                                  10.0)),
                                                        ),
                                                        child: Stack(children: [
                                                          Positioned.fill(
                                                            child: Align(
                                                              alignment: Alignment
                                                                  .bottomLeft,
                                                              child:
                                                              Image.asset(
                                                                'images/final/Dashboard/addvertisement1.png',
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 0.0,
                                                                  right:
                                                                  10),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .centerRight,
                                                                child:
                                                                Container(
                                                                  height: 10.h,
                                                                  width: 50.w,
                                                                  child: Column(
                                                                    mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceAround,
                                                                    children: [
                                                                      Text(
                                                                          "Get Instant",
                                                                          style: Theme.of(context)
                                                                              .textTheme
                                                                              .titleLarge
                                                                              ?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                      Text(
                                                                          "Cashback!",
                                                                          style: Theme.of(context)
                                                                              .textTheme
                                                                              .titleLarge
                                                                              ?.copyWith(color: Constants.secondary, fontWeight: FontWeight.bold)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                        ]),
                                                      ),
                                                      Container(
                                                        height: 20.h,
                                                        width: 90.w,
                                                        child: Stack(children: [
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                top: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment:
                                                                Alignment
                                                                    .topLeft,
                                                                child: Text(
                                                                    "Invite Friends & Earn",
                                                                    style: Theme.of(
                                                                        context)
                                                                        .textTheme
                                                                        .titleSmall
                                                                        ?.copyWith(
                                                                        color:
                                                                        Constants.primary,
                                                                        fontWeight: FontWeight.bold)),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                bottom: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .centerLeft,
                                                                child: RichText(
                                                                  text:
                                                                  TextSpan(
                                                                    text:
                                                                    "For every user you invite and signs up, you can Earn Upto ",
                                                                    style: Theme.of(
                                                                        context)
                                                                        .textTheme
                                                                        .titleSmall
                                                                        ?.copyWith(
                                                                        color:
                                                                        Constants.primary,
                                                                        fontWeight: FontWeight.bold),
                                                                    children: [
                                                                      TextSpan(
                                                                        text:
                                                                        "₹100",
                                                                        style:
                                                                        TextStyle(
                                                                          fontWeight:
                                                                          FontWeight.bold,
                                                                        ),
                                                                      ),
                                                                      TextSpan(
                                                                        text:
                                                                        ".",
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                          Positioned.fill(
                                                            child: Padding(
                                                              padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                top: 10.0,
                                                              ),
                                                              child: Align(
                                                                alignment: Alignment
                                                                    .bottomLeft,
                                                                child: InkWell(
                                                                  splashColor:
                                                                  FlutterFlowTheme.of(
                                                                      context)
                                                                      .secondary,
                                                                  onTap: () {
                                                                    shareApp(
                                                                        context);
                                                                  },
                                                                  child:
                                                                  Container(
                                                                    height: 5.h,
                                                                    width: 40.w,
                                                                    decoration:
                                                                    BoxDecoration(
                                                                      color: FlutterFlowTheme.of(
                                                                          context)
                                                                          .primary,
                                                                      borderRadius:
                                                                      BorderRadius.all(
                                                                          Radius.circular(10.0)),
                                                                    ),
                                                                    child:
                                                                    Center(
                                                                      child: Text(
                                                                          "Share",
                                                                          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                                                                              color: Constants.secondary,
                                                                              overflow: TextOverflow.ellipsis,
                                                                              fontWeight: FontWeight.bold)),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                            ),

                                                            // Add more Positioned widgets for additional images
                                                          ),
                                                        ]),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              );
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                );
              } catch (e) {
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Center(
                    child: Text("Problem in Adding Pricing Details..."),
                  ),
                );
              }
            }
          } else {
            isReffererPricingPresent = false;
            return Container(
              color: Constants.secondary,
              height: 100.h,
              child: Stack(
                children: [
                  // Portion A (Background)
                  Container(
                      height: 60.h,
                      child: Stack(
                        children: [
                          RefreshIndicator(
                            onRefresh: _handleRefresh,
                            child: CustomScrollView(
                              slivers: [
                                SliverToBoxAdapter(
                                  child: Center(
                                    child: Container(
                                      height: 10.h,
                                      width: 100.w,
                                      decoration: BoxDecoration(
                                        color: Constants.secondary,
                                        borderRadius: BorderRadius.only(
                                          bottomLeft: Radius.circular(0),
                                          bottomRight: Radius.circular(0),
                                        ),
                                      ),
                                      child: Stack(children: [
                                        Positioned.fill(
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                left: 10.0, right: 0),
                                            child: Align(
                                              alignment: Alignment.centerLeft,
                                              child: Consumer(builder:
                                                  (context, ref, child) {
                                                double? getNetBals =
                                                ref.watch(getUserNetBal);

                                                // getNetBals = 0;

                                                return Container(
                                                  width: 100.w,
                                                  child: SingleChildScrollView(
                                                    child: Column(
                                                      mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                      crossAxisAlignment:
                                                      CrossAxisAlignment
                                                          .start,
                                                      children: [
                                                        // Consumer(builder:
                                                        //     (context, ref,
                                                        //         child) {
                                                        //   double? getNetBals =
                                                        //       ref.watch(
                                                        //           getUserNetBal);
                                                        //
                                                        //   getNetBals = 0;

                                                        // return
                                                        Text(
                                                            '₹' +
                                                                getNetBals
                                                                    .toString(),
                                                            textAlign:
                                                            TextAlign.start,
                                                            style: Theme.of(
                                                                context)
                                                                .textTheme
                                                                .headlineLarge),
                                                        // }),
                                                        Text(
                                                          getNetBals.toString() ==
                                                              "0.0"
                                                              ? "Lets Start Earning"
                                                              : "Is your Saved Earnings",
                                                          textAlign:
                                                          TextAlign.start,
                                                          style:
                                                          Theme.of(context)
                                                              .textTheme
                                                              .titleSmall,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                );
                                              }),
                                            ),
                                          ),

                                          // Add more Positioned widgets for additional images
                                        ),
                                      ]),
                                    ),
                                  ),
                                ),
                                makeTitleHeader('My Goals', true, 0),

                                SliverToBoxAdapter(
                                  child: StreamBuilder<QuerySnapshot>(
                                    stream: firestore
                                        .collection('users')
                                        .doc(ref
                                        .read(UserDashListProvider.notifier)
                                        .getDocId)
                                        .collection('goals')
                                        .snapshots(),
                                    builder: (BuildContext context,
                                        AsyncSnapshot<QuerySnapshot> snapshot) {
                                      if (snapshot.hasError) {
                                        return Center(
                                          child:
                                          Text('Error: ${snapshot.error}'),
                                        );
                                      }

                                      if (snapshot.connectionState ==
                                          ConnectionState.waiting) {
                                        return Center(
                                          child: SizedBox(
                                            child: CircularProgressIndicator(),
                                            height: 20,
                                            width: 20,
                                          ),
                                        );
                                      }

                                      ref
                                          .read(UserDashListProvider.notifier)
                                          .goalDocuments = snapshot.data!.docs;

                                      //todo:- adding goal details to model class ,for combining trans and goal model class to get to sum of each achieved goal amount from transactions

                                      //---------------------

                                      goalList = snapshot.data!.docs
                                          .map((doc) {
                                        final data = doc.data()
                                        as Map<String, dynamic>;
                                        final goalTitle = data['goalTitle'];
                                        final goalTarget =
                                        data['goalTarget'];
                                        final goalPriority =
                                        data['goalPriority'];
                                        final goalToDelete =
                                        data['goalToDelete'];
                                        // final goalIconName = data['goalIcon'];

                                        return Goal(
                                            goalTitle,
                                            goalPriority,
                                            goalTarget,
                                            0.0,
                                            "",
                                            goalToDelete,
                                            doc.id,
                                            Colors.transparent,
                                            Icons.add);
                                      })
                                          .whereType<Goal>()
                                          .toList();

                                      //----------------------------------

                                      print("goals stream build called");
                                      return Container(
                                        child: HorizontalGridView1(
                                          data: snapshot.data!.docs,
                                          getMobile: widget.getMobile,
                                          dataList: dataList,
                                          isAdmin: false,
                                        ),
                                      );
                                    },
                                  ),
                                ),
                                (isShowMeatSection ?? true)
                                    ? makeTitleHeader('Meat Basket', false, 1)
                                    : SliverToBoxAdapter(
                                    child: SizedBox(
                                      height: 0,
                                    )),
                                (isShowMeatSection ?? true)
                                    ? SliverToBoxAdapter(
                                  child: Container(
                                    color: Constants.secondary,
                                    height: 22.h,
                                    child: Padding(
                                      padding: const EdgeInsets.all(0.0),
                                      child: SingleChildScrollView(
                                        child: Column(
                                          children: [
                                            Row(
                                              children: [
                                                Expanded(
                                                  child: GestureDetector(
                                                    child: Card(
                                                      color: Constants
                                                          .secondary2,
                                                      elevation: 4,
                                                      shape:
                                                      RoundedRectangleBorder(
                                                        borderRadius:
                                                        BorderRadius
                                                            .circular(
                                                            12),
                                                      ),
                                                      child: Column(
                                                        mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .center,
                                                        children: [
                                                          ClipOval(
                                                            child: Image
                                                                .asset(
                                                              items[0][
                                                              'image']!,
                                                              height: 80,
                                                              width: 80,
                                                              fit: BoxFit
                                                                  .cover,
                                                            ),
                                                          ),
                                                          SizedBox(
                                                              height: 10),
                                                          Text(
                                                            items[0][
                                                            'title']!,
                                                            style:
                                                            TextStyle(
                                                              fontSize:
                                                              15,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold,
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    onTap: () {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) => DetailScreen(
                                                              title: items[0]
                                                              [
                                                              'title'] ??
                                                                  "",
                                                              isReffererPricingPresent:
                                                              isReffererPricingPresent ??
                                                                  false),
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                ),
                                                Expanded(
                                                  child: GestureDetector(
                                                    onTap: () {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) => DetailScreen(
                                                              title: items[
                                                              1][
                                                              'title']!,
                                                              isReffererPricingPresent:
                                                              isReffererPricingPresent ??
                                                                  false),
                                                        ),
                                                      );
                                                    },
                                                    child: Card(
                                                      color: Constants
                                                          .secondary2,
                                                      elevation: 4,
                                                      shape:
                                                      RoundedRectangleBorder(
                                                        borderRadius:
                                                        BorderRadius
                                                            .circular(
                                                            12),
                                                      ),
                                                      child: Column(
                                                        mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .center,
                                                        children: [
                                                          ClipOval(
                                                            child: Image
                                                                .asset(
                                                              items[1][
                                                              'image']!,
                                                              height: 80,
                                                              width: 80,
                                                              fit: BoxFit
                                                                  .cover,
                                                            ),
                                                          ),
                                                          SizedBox(
                                                              height: 10),
                                                          Text(
                                                            items[1][
                                                            'title']!,
                                                            style:
                                                            TextStyle(
                                                              fontSize:
                                                              15,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold,
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                            Row(
                                              mainAxisAlignment:
                                              MainAxisAlignment
                                                  .spaceEvenly,
                                              children: [
                                                Expanded(
                                                  child: Padding(
                                                    padding:
                                                    const EdgeInsets
                                                        .only(
                                                        top: 8.0,
                                                        left: 8.0,
                                                        right: 8.0),
                                                    child: Container(
                                                      decoration:
                                                      BoxDecoration(
                                                        gradient:
                                                        LinearGradient(
                                                          colors: [
                                                            Constants
                                                                .primary1,
                                                            Constants
                                                                .secondary4
                                                          ],
                                                          begin: Alignment
                                                              .topLeft,
                                                          end: Alignment
                                                              .bottomRight,
                                                        ),
                                                        borderRadius:
                                                        BorderRadius
                                                            .circular(
                                                            8.0),
                                                      ),
                                                      child:
                                                      ElevatedButton(
                                                        style:
                                                        ElevatedButton
                                                            .styleFrom(
                                                          backgroundColor:
                                                          Colors
                                                              .transparent,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                10.0), // Set the border radius here
                                                          ), // Set the background color here
                                                        ),
                                                        onPressed: () {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder:
                                                                  (context) =>
                                                                  OrderedMeatList(
                                                                    getReffererType:
                                                                    ref.read(UserDashListProvider.notifier).getReffererType ??
                                                                        "0",
                                                                  ),
                                                            ),
                                                          ).then((value) {
                                                            //todo:- below code refresh firebase records automatically when come back to same screen
                                                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          });
                                                        },
                                                        child: Text(
                                                            "My Orders",
                                                            style: Theme.of(
                                                                context)
                                                                .textTheme
                                                                .bodyMedium
                                                                ?.copyWith(
                                                                color: Constants
                                                                    .secondary,
                                                                overflow: TextOverflow
                                                                    .ellipsis,
                                                                fontWeight:
                                                                FontWeight.bold)

                                                          // TextStyle(
                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ],
                                        ),
                                      ),
                                    ),
                                  ),
                                )
                                    : SliverToBoxAdapter(
                                    child: SizedBox(
                                      height: 0,
                                    )),

                                makeTitleHeader('Recent Transactions', true, 2),

                                //todo:- 26.1.24 second approach
                                SliverToBoxAdapter(
                                  child: StreamBuilder<List<Transactionss>>(
                                    stream: ref
                                        .read(UserDashListProvider.notifier)
                                        .transactionsStream,
                                    builder: (context, snapshot) {
                                      if (snapshot.connectionState ==
                                          ConnectionState.waiting) {
                                        return Center(
                                            child: SizedBox(
                                              child: CircularProgressIndicator(),
                                              height: 20,
                                              width: 20,
                                            ));
                                      } else if (snapshot.hasError) {
                                        return Text('Error: ${snapshot.error}');
                                      } else {
                                        // Use the snapshot.data to build your UI
                                        dataList = snapshot.data;

                                        // If dataList is null or empty, you can handle it accordingly
                                        if (dataList == null ||
                                            dataList!.isEmpty) {
                                          return Center(
                                            child: Column(
                                              mainAxisAlignment:
                                              MainAxisAlignment.center,
                                              crossAxisAlignment:
                                              CrossAxisAlignment.center,
                                              children: [
                                                InkWell(
                                                  child: Image.asset(
                                                    'images/final/SecurityCode/MPin.png',
                                                    width: 150,
                                                    height: 150,
                                                  ),
                                                  onTap: () {
                                                    Navigator.push(
                                                      context,
                                                      PageRouteBuilder(
                                                        transitionDuration:
                                                        Duration(
                                                            milliseconds:
                                                            400),
                                                        pageBuilder:
                                                            (_, __, ___) =>
                                                            SaveMoney(
                                                              getMobile:
                                                              widget.getMobile,
                                                              getUserName: ref
                                                                  .read(
                                                                  UserDashListProvider
                                                                      .notifier)
                                                                  .getUser,
                                                              getGoalDocId: "",
                                                              getTransData:
                                                              dataList,
                                                              getPaymentService:
                                                              PaymentService
                                                                  .maakaMoney,
                                                            ),
                                                        transitionsBuilder: (_,
                                                            animation,
                                                            __,
                                                            child) {
                                                          return SlideTransition(
                                                            position:
                                                            Tween<Offset>(
                                                              begin:
                                                              Offset(0, 1),
                                                              // You can adjust the start position
                                                              end: Offset
                                                                  .zero, // You can adjust the end position
                                                            ).animate(
                                                                animation),
                                                            child: child,
                                                          );
                                                        },
                                                      ),
                                                    );
                                                  },
                                                ),
                                                SizedBox(height: 16),
                                                Text(
                                                  "Tap to Start Saving Money!",
                                                  style: TextStyle(
                                                      fontSize: 20,
                                                      fontWeight:
                                                      FontWeight.bold),
                                                  textAlign: TextAlign.center,
                                                ),
                                                SizedBox(height: 16),
                                                Text(
                                                  "Cheers to Smart financial moves and Savings Plans.",
                                                  textAlign: TextAlign.center,
                                                ),
                                              ],
                                            ),
                                          );
                                        }

                                        // Your logic to build the UI using the dataList
                                        // ...
                                        print(
                                            "transaction stream build called");
                                        return ListView.builder(
                                          shrinkWrap: true,
                                          physics:
                                          NeverScrollableScrollPhysics(),
                                          itemCount: dataList?.length,
                                          itemBuilder: (context, index) {
                                            if (index > 2) {
                                              return SizedBox
                                                  .shrink(); // Return an empty widget for transactions beyond the last three
                                            }

                                            final document = dataList?[index];

                                            final amount = document?.amount;
                                            final transType =
                                                document?.isDeposit;

                                            final date = document?.date;
                                            final mobile = document?.mobile;
                                            final docId = document?.docId;
                                            final interest = document?.interest;
                                            final timeStamp =
                                                document?.timmeStamp;

                                            // Replace this with your Timestamp object
                                            Timestamp timestamp = timeStamp ??
                                                Timestamp(000, 000);
                                            // Convert Timestamp to DateTime
                                            DateTime dateTime =
                                            timestamp.toDate();

                                            // Format date and time
                                            String formattedDateTime =
                                            DateFormat('dd-MM-yyyy h:mm a')
                                                .format(dateTime);

                                            //todo:-  adding estimated time for withdrawal request from current time

                                            if (transType == false &&
                                                amount == 0) {
                                              DateTime estimatedDateTime =
                                              dateTime.add(
                                                  Duration(minutes: 20));
                                              formattedDateTime =
                                                  DateFormat('h:mm a').format(
                                                      estimatedDateTime);
                                            }

                                            String getFinInt = interest == null
                                                ? 0.0.toString()
                                                : interest.toStringAsFixed(2);

                                            return Container(
                                              color: Constants.secondary
                                                  .withOpacity(0.95),
                                              child: Padding(
                                                padding:
                                                const EdgeInsets.all(5),
                                                child: Card(
                                                  shape: RoundedRectangleBorder(
                                                    borderRadius:
                                                    BorderRadius.circular(
                                                        6.0),
                                                  ),
                                                  color: amount == 0
                                                      ? Constants.secondary
                                                      : Constants.secondary,
                                                  elevation: 4.0,
                                                  child: ListTile(
                                                    leading: Card(
                                                      color: transType == true
                                                          ? FlutterFlowTheme.of(
                                                          context)
                                                          .primary
                                                          : FlutterFlowTheme.of(
                                                          context)
                                                          .secondary1,
                                                      clipBehavior: Clip
                                                          .antiAliasWithSaveLayer,
                                                      elevation: 5.0,
                                                      shape:
                                                      RoundedRectangleBorder(
                                                        borderRadius:
                                                        BorderRadius
                                                            .circular(8.0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                        const EdgeInsets
                                                            .all(8.0),
                                                        child: Icon(
                                                          transType == true
                                                              ? amount == 0
                                                              ? Icons
                                                              .lock_clock
                                                              : Icons
                                                              .arrow_forward
                                                              : amount == 0
                                                              ? Icons
                                                              .lock_clock
                                                              : Icons
                                                              .arrow_back,
                                                          color: Constants
                                                              .secondary,
                                                          size: 24.0,
                                                        ),
                                                      ),
                                                    ),
                                                    title: Text(
                                                      transType == true
                                                          ? amount == 0
                                                          ? "Processing Payment"
                                                          : "Deposit"
                                                          : amount == 0
                                                          ? "Processing Request"
                                                          : "Withdrawn",
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .bodyLarge
                                                          ?.copyWith(
                                                          color: amount == 0
                                                              ? Constants
                                                              .primary
                                                              : Constants
                                                              .primary,
                                                          fontWeight:
                                                          FontWeight
                                                              .bold,
                                                          overflow:
                                                          TextOverflow
                                                              .ellipsis),
                                                    ),
                                                    subtitle: Text(
                                                      transType == true
                                                          ? amount == 0
                                                          ? formattedDateTime
                                                          .toString()
                                                          .toUpperCase()
                                                          : formattedDateTime
                                                          .toString()
                                                          .toUpperCase()
                                                          : amount == 0
                                                          ? "Receive Money before - $formattedDateTime"
                                                          : formattedDateTime
                                                          .toString()
                                                          .toUpperCase(),
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .bodyMedium
                                                          ?.copyWith(
                                                          color: amount == 0
                                                              ? Constants
                                                              .secondary3
                                                              : Colors
                                                              .black,
                                                          fontWeight:
                                                          FontWeight
                                                              .bold,
                                                          overflow:
                                                          TextOverflow
                                                              .ellipsis),
                                                    ),
                                                    trailing: Container(
                                                      child: Column(
                                                        mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                        crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .end,
                                                        children: [
                                                          amount == 0
                                                              ? Text("")
                                                              : Text(
                                                            transType ==
                                                                true
                                                                ? "+" +
                                                                '$amount' +
                                                                ' ₹'
                                                                : "" +
                                                                '$amount' +
                                                                ' ₹',
                                                            style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                color: transType ==
                                                                    true
                                                                    ? Constants
                                                                    .deposite
                                                                    : Constants
                                                                    .withdrawal,
                                                                overflow:
                                                                TextOverflow
                                                                    .ellipsis,
                                                                fontWeight:
                                                                FontWeight
                                                                    .bold),
                                                          ),
                                                          amount == 0
                                                              ? Text("")
                                                              : Visibility(
                                                            visible:
                                                            transType ==
                                                                true
                                                                ? true
                                                                : false,
                                                            child: Text(
                                                              transType ==
                                                                  true
                                                                  ? "+" +
                                                                  '$getFinInt' +
                                                                  ' ₹'
                                                                  : '',
                                                              style: Theme.of(context).textTheme.titleSmall?.copyWith(
                                                                  color: transType ==
                                                                      true
                                                                      ? Colors
                                                                      .grey
                                                                      : Colors
                                                                      .red,
                                                                  overflow:
                                                                  TextOverflow
                                                                      .ellipsis,
                                                                  fontWeight:
                                                                  FontWeight.bold),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    onTap: () {},
                                                  ),
                                                ),
                                              ),
                                            );
                                          },
                                        );
                                      }
                                    },
                                  ),
                                ),
                              ],
                            ),
                          ),
                          (isLoading ?? false)
                              ? isRefresh == true
                              ? Container()
                              : Container(
                            color: Colors.transparent,
                            child: Center(
                                child: CircularProgressIndicator(
                                  color: isRefresh == true
                                      ? Colors.transparent
                                      : FlutterFlowTheme.of(context)
                                      .primary,
                                )),
                          )
                              : Container()
                        ],
                      )),
                  // Portion B (Overlay)
                  Positioned(
                    bottom: 0,
                    left: 0,
                    right: 0,
                    child: GestureDetector(
                      onVerticalDragUpdate: _onVerticalDragUpdate,
                      onVerticalDragEnd: _onVerticalDragEnd,
                      behavior: HitTestBehavior.translucent,
                      child: ValueListenableBuilder<double>(
                        valueListenable: portionBHeightNotifier,
                        builder: (context, portionBHeight, child) {
                          return Container(
                            height: portionBHeight,
                            decoration: BoxDecoration(
                              color: Colors.lightBlue.withOpacity(0.15),
                              borderRadius: new BorderRadius.only(
                                topLeft: Radius.circular(35),
                                topRight: Radius.circular(35),
                              ),
                            ), // Replace with your overlay color
                            child: Column(
                              children: [
                                SizedBox(
                                  height: 1.h,
                                ),
                                Container(
                                  height: 1.h,
                                  width: 15.w,
                                  decoration: BoxDecoration(
                                    color: Constants.secondary,
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                ),
                                Expanded(
                                  child: Padding(
                                    padding: const EdgeInsets.only(top: 20.0),
                                    child: CustomScrollView(
                                      // physics: portionBHeight == MediaQuery.of(context).size.height
                                      //     ? AlwaysScrollableScrollPhysics()
                                      //     : NeverScrollableScrollPhysics(),
                                      physics: NeverScrollableScrollPhysics(),
                                      slivers: [
                                        makeTitleHeader('Shopify', false, 4),
                                        SliverToBoxAdapter(
                                          child: Center(
                                            child: Container(
                                              alignment: Alignment.center,
                                              height: 17.h,
                                              width: 100.w,
                                              decoration: BoxDecoration(
                                                color:
                                                FlutterFlowTheme.of(context)
                                                    .secondary,
                                                borderRadius: BorderRadius.only(
                                                  bottomLeft:
                                                  Radius.circular(0),
                                                  bottomRight:
                                                  Radius.circular(0),
                                                ),
                                              ),
                                              child: StreamBuilder(
                                                stream: FirebaseFirestore
                                                    .instance
                                                    .collection('banners')
                                                    .snapshots(),
                                                builder: (context,
                                                    AsyncSnapshot<QuerySnapshot>
                                                    snapshot) {
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                        child:
                                                        CircularProgressIndicator());
                                                  }

                                                  if (snapshot.data!.docs ==
                                                      null ||
                                                      snapshot
                                                          .data!.docs.isEmpty) {
                                                    return Center(
                                                      child: Column(
                                                        mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                        crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .center,
                                                        children: [
                                                          InkWell(
                                                            child: Image.asset(
                                                              'images/final/SecurityCode/MPin.png',
                                                              width: 80,
                                                              height: 80,
                                                            ),
                                                            onTap: () {},
                                                          ),
                                                          Text(
                                                            "New Offers are About to Load!",
                                                            style: TextStyle(
                                                                fontSize: 20,
                                                                fontWeight:
                                                                FontWeight
                                                                    .bold),
                                                            textAlign: TextAlign
                                                                .center,
                                                          ),
                                                          Text(
                                                            "Cheers to Smart Buying Plans.",
                                                            textAlign: TextAlign
                                                                .center,
                                                          ),
                                                        ],
                                                      ),
                                                    );
                                                  }

                                                  return GridView.builder(
                                                    physics:
                                                    NeverScrollableScrollPhysics(),
                                                    padding:
                                                    const EdgeInsets.all(
                                                        8.0),
                                                    gridDelegate:
                                                    SliverGridDelegateWithFixedCrossAxisCount(
                                                      crossAxisCount: 3,
                                                      crossAxisSpacing: 8.0,
                                                      mainAxisSpacing: 8.0,
                                                      childAspectRatio:
                                                      1.0, // Adjust this to change item size ratio
                                                    ),
                                                    itemCount: snapshot
                                                        .data!.docs.length,
                                                    itemBuilder:
                                                        (context, index) {
                                                      if (index > 2) {
                                                        isProductCountExceeds =
                                                        true;
                                                        return SizedBox
                                                            .shrink(); // Return an empty widget for transactions beyond the last three
                                                      } else {
                                                        isProductCountExceeds =
                                                        false;
                                                      }

                                                      var doc = snapshot
                                                          .data!.docs[index];
                                                      List<
                                                          dynamic> imageUrls = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'fileUrls') ??
                                                          false
                                                          ? doc['fileUrls']
                                                          : [];

                                                      String getTitle = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'title') ??
                                                          false
                                                          ? doc['title']
                                                          : "";

                                                      String getDescription = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'description') ??
                                                          false
                                                          ? doc['description']
                                                          : "";

                                                      String getAmount = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'amount') ??
                                                          false
                                                          ? doc['amount']
                                                          : "";

                                                      String getMinBargainAmount = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'minBargainAmount') ??
                                                          false
                                                          ? doc[
                                                      'minBargainAmount']
                                                          : "";

                                                      String getProdDetails = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'productDetails') ??
                                                          false
                                                          ? doc[
                                                      'productDetails']
                                                          : "";

                                                      String getProdSpec = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'productSpec') ??
                                                          false
                                                          ? doc['productSpec']
                                                          : "";

                                                      String getAffiliate = (doc
                                                          .data()
                                                      as Map<
                                                          String,
                                                          dynamic>?)
                                                          ?.containsKey(
                                                          'affiliateLink') ??
                                                          false
                                                          ? doc['affiliateLink']
                                                          : "";

                                                      return GridTile(
                                                        child: GestureDetector(
                                                          onTap: () {
                                                            Navigator.push(
                                                              context,
                                                              MaterialPageRoute(
                                                                builder:
                                                                    (context) =>
                                                                    ProductDetailScreen(
                                                                      title:
                                                                      getTitle,
                                                                      description:
                                                                      getDescription,
                                                                      affiliateLink:
                                                                      getAffiliate,
                                                                      prodDetails:
                                                                      getProdDetails,
                                                                      prodSpec:
                                                                      getProdSpec,
                                                                      imageUrls:
                                                                      imageUrls,
                                                                      amount:
                                                                      getAmount,
                                                                      userName: ref
                                                                          .read(
                                                                          UserDashListProvider.notifier)
                                                                          .getUser ??
                                                                          "",
                                                                      getAdminType: ref
                                                                          .read(
                                                                          UserDashListProvider.notifier)
                                                                          .getAdminType ??
                                                                          "",
                                                                      minBargainAmount:
                                                                      getMinBargainAmount,
                                                                      getHeroTag:
                                                                      'imageHero$index',
                                                                    ),
                                                              ),
                                                            );
                                                          },
                                                          child: Container(
                                                            decoration:
                                                            BoxDecoration(
                                                              color: FlutterFlowTheme
                                                                  .of(
                                                                  context)
                                                                  .secondary
                                                                  .withOpacity(
                                                                  0.4),
                                                              borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                  15.0),
                                                            ),
                                                            child: Column(
                                                              mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .spaceEvenly,
                                                              crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                              children: [
                                                                Expanded(
                                                                  flex: 5,
                                                                  child:
                                                                  Container(
                                                                    // Adjust the height to make it smaller
                                                                    width:
                                                                    100.w,
                                                                    // Adjust the width to make it smaller
                                                                    child:
                                                                    ClipRRect(
                                                                      borderRadius: BorderRadius.only(
                                                                          topLeft: Radius.circular(
                                                                              15),
                                                                          topRight: Radius.circular(
                                                                              15),
                                                                          bottomLeft: Radius.circular(
                                                                              15),
                                                                          bottomRight:
                                                                          Radius.circular(15)),
                                                                      child: imageUrls
                                                                          .isNotEmpty
                                                                          ? Hero(
                                                                        tag: 'imageHero$index',
                                                                        child: Image.network(
                                                                          imageUrls[0],
                                                                          fit: BoxFit.fitWidth,
                                                                          loadingBuilder: (BuildContext context, Widget child, ImageChunkEvent? loadingProgress) {
                                                                            if (loadingProgress == null) {
                                                                              return child;
                                                                            } else {
                                                                              return Center(
                                                                                child: CircularProgressIndicator(
                                                                                  value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                                                                ),
                                                                              );
                                                                            }
                                                                          },
                                                                        ),
                                                                      )
                                                                          : Container(
                                                                          color: Colors.grey),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  flex: 3,
                                                                  child: Column(
                                                                    mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .center,
                                                                    children: [
                                                                      Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                            8.0),
                                                                        child:
                                                                        Row(
                                                                          mainAxisAlignment:
                                                                          MainAxisAlignment.start,
                                                                          children: [
                                                                            Expanded(
                                                                              child: Text(doc['title'], style: Theme.of(context).textTheme.bodyMedium?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Padding(
                                                                        padding: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                            8.0),
                                                                        child:
                                                                        Row(
                                                                          mainAxisAlignment:
                                                                          MainAxisAlignment.start,
                                                                          children: [
                                                                            Expanded(
                                                                              child: Text(doc['description'], style: Theme.of(context).textTheme.bodySmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        ),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            height: 10.h,
                                            width: 100.w,
                                            decoration: BoxDecoration(
                                              color:
                                              FlutterFlowTheme.of(context)
                                                  .secondary,
                                              borderRadius: BorderRadius.only(
                                                bottomLeft: Radius.circular(0),
                                                bottomRight: Radius.circular(0),
                                              ),
                                            ),
                                            child: Padding(
                                              padding:
                                              const EdgeInsets.all(8.0),
                                              child: Row(
                                                mainAxisAlignment:
                                                MainAxisAlignment
                                                    .spaceEvenly,
                                                children: [
                                                  Expanded(
                                                    child: Container(
                                                      child: ElevatedButton(
                                                        style: ElevatedButton
                                                            .styleFrom(
                                                          backgroundColor:
                                                          Constants.primary,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                10.0), // Set the border radius here
                                                          ), // Set the background color here
                                                        ),
                                                        onPressed: () async {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  ProductListScreen(
                                                                    userName: ref
                                                                        .read(UserDashListProvider
                                                                        .notifier)
                                                                        .getUser ??
                                                                        "",
                                                                  ),
                                                            ),
                                                          ).then((value) {
                                                            //todo:- below code refresh firebase records automatically when come back to same screen
                                                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          });
                                                        },
                                                        child: Text('More',
                                                            style: Theme.of(
                                                                context)
                                                                .textTheme
                                                                .bodyMedium
                                                                ?.copyWith(
                                                                color: Constants
                                                                    .secondary,
                                                                overflow:
                                                                TextOverflow
                                                                    .ellipsis,
                                                                fontWeight:
                                                                FontWeight
                                                                    .bold)),
                                                      ),
                                                      height: 5.h,
                                                      width: 50.w,
                                                    ),
                                                  ),
                                                  SizedBox(
                                                    width: 10,
                                                  ),
                                                  Expanded(
                                                    child: Container(
                                                      child: ElevatedButton(
                                                        style: ElevatedButton
                                                            .styleFrom(
                                                          backgroundColor:
                                                          Constants.primary,
                                                          shape:
                                                          RoundedRectangleBorder(
                                                            borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                10.0), // Set the border radius here
                                                          ), // Set the background color here
                                                        ),
                                                        onPressed: () async {
                                                          // Navigator.push(
                                                          //   context,
                                                          //   MaterialPageRoute(
                                                          //     builder: (context) =>
                                                          //         ProductListScreen(
                                                          //       userName: ref
                                                          //               .read(
                                                          //                   UserDashListProvider
                                                          //                       .notifier)
                                                          //               .getUser ??
                                                          //           "",
                                                          //     ),
                                                          //   ),
                                                          // ).then((value) {
                                                          //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                          //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          // });

                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  AffiliateListScreen(
                                                                      userName:
                                                                      ref.read(UserDashListProvider.notifier).getUser ??
                                                                          ""),
                                                            ),
                                                          ).then((value) {
                                                            //todo:- below code refresh firebase records automatically when come back to same screen
                                                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                          });
                                                        },
                                                        child: Text(
                                                          'Shop Now',
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                              color: Constants
                                                                  .secondary,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold),
                                                        ),
                                                      ),
                                                      height: 5.h,
                                                      width: 50.w,
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'Quick Access', false, 1),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            color: Constants.secondary,
                                            height: 15.h,
                                            child: Padding(
                                              padding:
                                              const EdgeInsets.all(0.0),
                                              child: Card(
                                                color: Constants.secondary,
                                                elevation: 0,
                                                shape: RoundedRectangleBorder(
                                                  borderRadius:
                                                  BorderRadius.circular(0),
                                                  side: BorderSide(
                                                      color: Colors.transparent,
                                                      width: 1),
                                                ),
                                                child: Row(
                                                  mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceAround,
                                                  children: [
                                                    ReusableCertificateSection(
                                                      getText: "Save ₹",
                                                      getImage: "saveMoney",
                                                      getTextColor:
                                                      FlutterFlowTheme.of(
                                                          context)
                                                          .primary,
                                                      getIconColor:
                                                      Constants.secondary,
                                                      getBackgroundColor:
                                                      Constants.primary,
                                                      onTap: () {
                                                        // Navigator.push(
                                                        //   context,
                                                        //   PageRouteBuilder(
                                                        //     transitionDuration:
                                                        //         Duration(milliseconds: 400),
                                                        //     pageBuilder: (_, __, ___) =>
                                                        //         SaveMoney(
                                                        //       getMobile: widget.getMobile,
                                                        //       getUserName: ref
                                                        //           .read(UserDashListProvider
                                                        //               .notifier)
                                                        //           .getUser,
                                                        //       getGoalDocId: "",
                                                        //       getTransData: dataList,
                                                        //     ),
                                                        //     transitionsBuilder:
                                                        //         (_, animation, __, child) {
                                                        //       return SlideTransition(
                                                        //         position: Tween<Offset>(
                                                        //           begin: Offset(0, 1),
                                                        //           // You can adjust the start position
                                                        //           end: Offset
                                                        //               .zero, // You can adjust the end position
                                                        //         ).animate(animation),
                                                        //         child: child,
                                                        //       );
                                                        //     },
                                                        //   ),
                                                        // );

                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                400),
                                                            pageBuilder: (_, __,
                                                                ___) =>
                                                                GoalsHistory1(
                                                                  getDocId: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getDocId,
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  dataList:
                                                                  dataList ??
                                                                      [],
                                                                ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Request",
                                                      getImage: "moneyReq",
                                                      getTextColor:
                                                      FlutterFlowTheme.of(
                                                          context)
                                                          .primary,
                                                      getIconColor:
                                                      Colors.black,
                                                      getBackgroundColor:
                                                      Constants.secondary1,
                                                      onTap: () {
                                                        double?
                                                        getFinalGoalAchievedAmount =
                                                        findGoalAchievedAmount();

                                                        isSavAmntReq = true;
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                400),
                                                            pageBuilder: (_, __,
                                                                ___) =>
                                                                RequestMoney(
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  isSavingReq:
                                                                  isSavAmntReq,
                                                                  getUserName: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getUser,
                                                                  getReqAmnt: "",
                                                                  getGoalDocId: "",
                                                                  getGoalTargetAmnt:
                                                                  "",
                                                                  goalAmount:
                                                                  getFinalGoalAchievedAmount ??
                                                                      0.0,
                                                                ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Goals",

                                                      ///Offers
                                                      getImage: "Goal",
                                                      getTextColor:
                                                      FlutterFlowTheme.of(
                                                          context)
                                                          .primary,
                                                      getIconColor: Colors.red,
                                                      getBackgroundColor:
                                                      Constants.primary,
                                                      onTap: () async {
                                                        //todo:- 13.1.24 - imp - sending goals data fetched from stream builder and updating details in user screen notifier - goals1z
                                                        // Tuple2<List<Goal>, String>
                                                        //     getGoalDetails =
                                                        //     await updateGoalProvider();

                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                400),
                                                            pageBuilder: (_, __,
                                                                ___) =>
                                                                GoalsHistory1(
                                                                  getDocId: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getDocId,
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  dataList:
                                                                  dataList ??
                                                                      [],
                                                                ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );

                                                        // Navigator.push(
                                                        //   context,
                                                        //   MaterialPageRoute(
                                                        //     builder: (context) =>  ProductListScreen(userName: ref.read(UserDashListProvider.notifier).getUser ?? "",),
                                                        //   ),
                                                        // ).then((value) {
                                                        //   //todo:- below code refresh firebase records automatically when come back to same screen
                                                        //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        // });
                                                      },
                                                    ),
                                                    ReusableCertificateSection(
                                                      getText: "Rewards",
                                                      getImage: "cashback",
                                                      getTextColor:
                                                      FlutterFlowTheme.of(
                                                          context)
                                                          .primary,
                                                      getIconColor:
                                                      Colors.black,
                                                      getBackgroundColor:
                                                      Constants.secondary1,
                                                      onTap: () {
                                                        isSavAmntReq = false;
                                                        Navigator.push(
                                                          context,
                                                          PageRouteBuilder(
                                                            transitionDuration:
                                                            Duration(
                                                                milliseconds:
                                                                400),
                                                            pageBuilder: (_, __,
                                                                ___) =>
                                                                CashbackDetails(
                                                                  getMobile: widget
                                                                      .getMobile,
                                                                  isSavingReq:
                                                                  isSavAmntReq,
                                                                ),
                                                            transitionsBuilder:
                                                                (_, animation,
                                                                __, child) {
                                                              return SlideTransition(
                                                                position: Tween<
                                                                    Offset>(
                                                                  begin: Offset(
                                                                      0, 1),
                                                                  // You can adjust the start position
                                                                  end: Offset
                                                                      .zero, // You can adjust the end position
                                                                ).animate(
                                                                    animation),
                                                                child: child,
                                                              );
                                                            },
                                                          ),
                                                        );
                                                      },
                                                    ),
                                                    // Add more ReusableCertificateSection widgets as needed
                                                  ],
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'Shop and Earn', true, 3),
                                        SliverToBoxAdapter(
                                          child: LayoutBuilder(
                                            builder: (context, constraints) {
                                              return Stack(
                                                alignment: Alignment.center,
                                                children: [
                                                  Center(
                                                    child: Container(
                                                      width: double.infinity,
                                                      // Take full width
                                                      decoration: BoxDecoration(
                                                        color:
                                                        FlutterFlowTheme.of(
                                                            context)
                                                            .secondary,
                                                        borderRadius:
                                                        BorderRadius.only(
                                                          bottomLeft:
                                                          Radius.circular(
                                                              0),
                                                          bottomRight:
                                                          Radius.circular(
                                                              0),
                                                        ),
                                                      ),
                                                      child: GridView.builder(
                                                        gridDelegate:
                                                        SliverGridDelegateWithFixedCrossAxisCount(
                                                          crossAxisCount: 2,
                                                          crossAxisSpacing: 10,
                                                          mainAxisSpacing: 10,
                                                          childAspectRatio:
                                                          3 / 2,
                                                        ),
                                                        padding:
                                                        EdgeInsets.all(10),
                                                        itemCount: _singleton
                                                            .shopNowItems
                                                            .length,
                                                        itemBuilder:
                                                            (context, index) {
                                                          return GestureDetector(
                                                            child:
                                                            GridItemWidget(
                                                              item: _singleton
                                                                  .shopNowItems[
                                                              index],
                                                              showRandomColor:
                                                              false,
                                                            ),
                                                            onTap: () async {
                                                              _isTappingAffiliateApp
                                                                  .value = true;
                                                              String? getApp =
                                                                  _singleton
                                                                      .shopNowItems[
                                                                  index]
                                                                      .title;
                                                              String getUser =
                                                                  getUserName ??
                                                                      "";

                                                              String? token =
                                                              await NotificationService
                                                                  .getDocumentIDsAndData();

                                                              if (await canLaunch(_singleton
                                                                  .shopNowItems[
                                                              index]
                                                                  .affiliateLink ??
                                                                  "")) {
                                                                await NotificationService
                                                                    .postNotificationRequest(
                                                                    token ??
                                                                        "",
                                                                    "Hi Admin,\n$getUser Started Shopping 😍😍😍",
                                                                    "Interested on Shopping\nIts Affiliate Shopping\nStarted Shopping using $getApp!");
                                                                _isTappingAffiliateApp
                                                                    .value =
                                                                false;
                                                                await launch(_singleton
                                                                    .shopNowItems[
                                                                index]
                                                                    .affiliateLink ??
                                                                    "");
                                                              } else {
                                                                Constants.showToast(
                                                                    "Try Again After SomeTimes",
                                                                    ToastGravity
                                                                        .BOTTOM);
                                                                _isTappingAffiliateApp
                                                                    .value =
                                                                false;
                                                                await NotificationService
                                                                    .postNotificationRequest(
                                                                    token ??
                                                                        "",
                                                                    "Hi Admin,\n$getUser facing Issue 😖🙁🤯",
                                                                    "Trying for Shopping\nProblem in opening $getApp Affiliate App!");
                                                                throw 'Could not launch $getApp';
                                                              }
                                                            },
                                                          );
                                                        },
                                                        physics:
                                                        NeverScrollableScrollPhysics(),
                                                        shrinkWrap:
                                                        true, // Important to wrap in a SingleChildScrollView
                                                      ),
                                                    ),
                                                  ),
                                                  ValueListenableBuilder<bool>(
                                                    valueListenable:
                                                    _isTappingAffiliateApp,
                                                    builder: (context,
                                                        isCreating, child) {
                                                      if (isCreating) {
                                                        return Container(
                                                          // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                          child: Center(
                                                            child:
                                                            CircularProgressIndicator(),
                                                          ),
                                                        );
                                                      }
                                                      return SizedBox.shrink();
                                                    },
                                                  ),
                                                ],
                                              );
                                            },
                                          ),
                                        ),
                                        makeTitleHeader(
                                            'News For You', false, 3),
                                        SliverToBoxAdapter(
                                          child: Container(
                                            height: 40.h,
                                            width: 100.w,
                                            decoration: BoxDecoration(
                                              color:
                                              FlutterFlowTheme.of(context)
                                                  .secondary,
                                              borderRadius: BorderRadius.only(
                                                bottomLeft: Radius.circular(0),
                                                bottomRight: Radius.circular(0),
                                              ),
                                            ),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Container(
                                                    height: 10.h,
                                                    width: 90.w,
                                                    decoration: BoxDecoration(
                                                      color:
                                                      FlutterFlowTheme.of(
                                                          context)
                                                          .secondary1
                                                          .withOpacity(0.6),
                                                      borderRadius:
                                                      BorderRadius.all(
                                                          Radius.circular(
                                                              10.0)),
                                                    ),
                                                    child: Stack(children: [
                                                      Positioned.fill(
                                                        child: Align(
                                                          alignment: Alignment
                                                              .bottomLeft,
                                                          child: Image.asset(
                                                            'images/final/Dashboard/addvertisement1.png',
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .only(
                                                              top: 0.0,
                                                              right: 10),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .centerRight,
                                                            child: Container(
                                                              height: 10.h,
                                                              width: 50.w,
                                                              child: Column(
                                                                mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceAround,
                                                                children: [
                                                                  Text(
                                                                      "Get Instant",
                                                                      style: Theme.of(
                                                                          context)
                                                                          .textTheme
                                                                          .titleLarge
                                                                          ?.copyWith(
                                                                          color: Constants.secondary,
                                                                          fontWeight: FontWeight.bold)),
                                                                  Text(
                                                                      "Cashback!",
                                                                      style: Theme.of(
                                                                          context)
                                                                          .textTheme
                                                                          .titleLarge
                                                                          ?.copyWith(
                                                                          color: Constants.secondary,
                                                                          fontWeight: FontWeight.bold)),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                    ]),
                                                  ),
                                                  Container(
                                                    height: 20.h,
                                                    width: 90.w,
                                                    child: Stack(children: [
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .only(
                                                            top: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .topLeft,
                                                            child: Text(
                                                                "Invite Friends & Earn",
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .titleSmall
                                                                    ?.copyWith(
                                                                    color: Constants
                                                                        .primary,
                                                                    fontWeight:
                                                                    FontWeight.bold)),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .only(
                                                            bottom: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .centerLeft,
                                                            child: RichText(
                                                              text: TextSpan(
                                                                text:
                                                                "For every user you invite and signs up, you can Earn Upto ",
                                                                style: Theme.of(
                                                                    context)
                                                                    .textTheme
                                                                    .titleSmall
                                                                    ?.copyWith(
                                                                    color: Constants
                                                                        .primary,
                                                                    fontWeight:
                                                                    FontWeight.bold),
                                                                children: [
                                                                  TextSpan(
                                                                    text:
                                                                    "₹100",
                                                                    style:
                                                                    TextStyle(
                                                                      fontWeight:
                                                                      FontWeight
                                                                          .bold,
                                                                    ),
                                                                  ),
                                                                  TextSpan(
                                                                    text: ".",
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                      Positioned.fill(
                                                        child: Padding(
                                                          padding:
                                                          const EdgeInsets
                                                              .only(
                                                            top: 10.0,
                                                          ),
                                                          child: Align(
                                                            alignment: Alignment
                                                                .bottomLeft,
                                                            child: InkWell(
                                                              splashColor:
                                                              FlutterFlowTheme.of(
                                                                  context)
                                                                  .secondary,
                                                              onTap: () {
                                                                shareApp(
                                                                    context);
                                                              },
                                                              child: Container(
                                                                height: 5.h,
                                                                width: 40.w,
                                                                decoration:
                                                                BoxDecoration(
                                                                  color: FlutterFlowTheme.of(
                                                                      context)
                                                                      .primary,
                                                                  borderRadius:
                                                                  BorderRadius.all(
                                                                      Radius.circular(
                                                                          10.0)),
                                                                ),
                                                                child: Center(
                                                                  child: Text(
                                                                      "Share",
                                                                      style: Theme.of(
                                                                          context)
                                                                          .textTheme
                                                                          .bodyMedium
                                                                          ?.copyWith(
                                                                          color: Constants.secondary,
                                                                          overflow: TextOverflow.ellipsis,
                                                                          fontWeight: FontWeight.bold)),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ),

                                                        // Add more Positioned widgets for additional images
                                                      ),
                                                    ]),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          }
        } catch (e) {
          return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Center(
              child: Text("Error Fetching Data..."),
            ),
          );
        }
      } else {
        isReffererPricingPresent = false;
        return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Center(
                child: Text(
              "Loading...",
              style: TextStyle(
                  letterSpacing: 2.5,
                  fontSize: 20,
                  fontWeight: FontWeight.bold),
            )));
      }
    } else if (getToggleUserType == "1") {
      // todo:- when toggle switched to business then find user business and show ui accordingly

      if ((ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "1") {
        //todo:- meat shop owner

        String documentId = Constants.getUserMobile ?? "9941445471";
        DocumentReference docRef = FirebaseFirestore.instance
            .collection('AreaMeatPrices')
            .doc(documentId);

        try {
          DocumentSnapshot docSnapshot = await docRef.get();

          if (docSnapshot.exists &&
              docSnapshot.data() is Map<String, dynamic>) {
            Map<String, dynamic> data =
                docSnapshot.data() as Map<String, dynamic>;

            if (data.containsKey(documentId)) {
              return Container(
                color: Constants.secondary,
                height: 100.h,
                child: Stack(
                  children: [
                    Container(
                        height: 100.h,
                        child: Stack(
                          children: [
                            RefreshIndicator(
                              onRefresh: _handleRefresh,
                              child: CustomScrollView(
                                slivers: [
                                  SliverToBoxAdapter(
                                    child: Center(
                                      child: Container(
                                        height: 10.h,
                                        width: 100.w,
                                        decoration: BoxDecoration(
                                          color: Constants.secondary,
                                          borderRadius: BorderRadius.only(
                                            bottomLeft: Radius.circular(0),
                                            bottomRight: Radius.circular(0),
                                          ),
                                        ),
                                        child: Stack(children: [
                                          Positioned.fill(
                                            child: Padding(
                                              padding: const EdgeInsets.only(
                                                  left: 10.0, right: 0),
                                              child: Align(
                                                alignment: Alignment.centerLeft,
                                                child: Container(
                                                  width: 100.w,
                                                  child: SingleChildScrollView(
                                                    child: Column(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceEvenly,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        // Consumer(builder:
                                                        //     (context, ref,
                                                        //         child) {
                                                        //   double? getNetBals =
                                                        //       ref.watch(
                                                        //           getUserNetBal);
                                                        //
                                                        //   getNetBals = 0;

                                                        // return
                                                        Text("Welcome Back",
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: Theme.of(
                                                                    context)
                                                                .textTheme
                                                                .headlineLarge),
                                                        // }),
                                                        Text(
                                                          "Lets Earn Together!",
                                                          textAlign:
                                                              TextAlign.start,
                                                          style:
                                                              Theme.of(context)
                                                                  .textTheme
                                                                  .titleSmall,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),

                                            // Add more Positioned widgets for additional images
                                          ),
                                        ]),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader('My Users', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          BudgetCopyWidget(
                                                                    getUserType:
                                                                        ref.read(UserDashListProvider.notifier).getUserType ??
                                                                            "0",
                                                                    getAdminMobileNo:
                                                                        Constants.getUserMobile ??
                                                                            "",
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                            child: Text(
                                                                "My Users",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader('My Orders', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          OrdersScreen(
                                                                    getUserType:
                                                                        ref.read(UserDashListProvider.notifier).getUserType ??
                                                                            "0",
                                                                    getAdminMobileNo:
                                                                        Constants.getUserMobile ??
                                                                            "",
                                                                  ),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                                "My Orders",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader(
                                      'Update Pricing Details', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder: (context) => AreaList(
                                                                      getUserType:
                                                                          ref.read(UserDashListProvider.notifier).getUserType ??
                                                                              "0",
                                                                      getAdminMobileNo:
                                                                          Constants.getUserMobile ??
                                                                              ""),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                                "Update Price",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            (isLoading ?? false)
                                ? isRefresh == true
                                    ? Container()
                                    : Container(
                                        color: Colors.transparent,
                                        child: Center(
                                            child: CircularProgressIndicator(
                                          color: isRefresh == true
                                              ? Colors.transparent
                                              : FlutterFlowTheme.of(context)
                                                  .primary,
                                        )),
                                      )
                                : Container()
                          ],
                        ))
                  ],
                ),
              );
            } else {
              //todo:-add area price details for meat shop owner when no details existed and also handle  error message if set method fails
              try {
                await docRef.set({
                  documentId ?? "9941445471": {
                    'Chicken': {
                      'AreaPrice': {
                        'WithSkin': "230" ?? 0,
                        'WithoutSkin': "260" ?? 0,
                      },
                      'OurPrice': {
                        'WithSkin': "230" ?? 0,
                        'WithoutSkin': "260" ?? 0,
                      },
                    },
                    'Mutton': {
                      'AreaPrice': "900" ?? 0,
                      'OurPrice': "900" ?? 0,
                    },
                  }
                });

                print("Data successfully saved!");
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Stack(
                    children: [
                      Container(
                          height: 100.h,
                          child: Stack(
                            children: [
                              RefreshIndicator(
                                onRefresh: _handleRefresh,
                                child: CustomScrollView(
                                  slivers: [
                                    SliverToBoxAdapter(
                                      child: Center(
                                        child: Container(
                                          height: 10.h,
                                          width: 100.w,
                                          decoration: BoxDecoration(
                                            color: Constants.secondary,
                                            borderRadius: BorderRadius.only(
                                              bottomLeft: Radius.circular(0),
                                              bottomRight: Radius.circular(0),
                                            ),
                                          ),
                                          child: Stack(children: [
                                            Positioned.fill(
                                              child: Padding(
                                                padding: const EdgeInsets.only(
                                                    left: 10.0, right: 0),
                                                child: Align(
                                                  alignment:
                                                      Alignment.centerLeft,
                                                  child: Container(
                                                    width: 100.w,
                                                    child:
                                                        SingleChildScrollView(
                                                      child: Column(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceEvenly,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          // Consumer(builder:
                                                          //     (context, ref,
                                                          //         child) {
                                                          //   double? getNetBals =
                                                          //       ref.watch(
                                                          //           getUserNetBal);
                                                          //
                                                          //   getNetBals = 0;

                                                          // return
                                                          Text("Welcome Back",
                                                              textAlign:
                                                                  TextAlign
                                                                      .start,
                                                              style: Theme.of(
                                                                      context)
                                                                  .textTheme
                                                                  .headlineLarge),
                                                          // }),
                                                          Text(
                                                            "Lets Earn Together!",
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: Theme.of(
                                                                    context)
                                                                .textTheme
                                                                .titleSmall,
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),

                                              // Add more Positioned widgets for additional images
                                            ),
                                          ]),
                                        ),
                                      ),
                                    ),
                                    makeTitleHeader('My Users', false, 1),
                                    SliverToBoxAdapter(
                                      child: Container(
                                        color: Constants.secondary,
                                        height: 10.h,
                                        child: Center(
                                          child: Padding(
                                            padding: const EdgeInsets.all(0.0),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 8.0,
                                                                  left: 8.0,
                                                                  right: 8.0),
                                                          child: Container(
                                                            decoration:
                                                                BoxDecoration(
                                                              gradient:
                                                                  LinearGradient(
                                                                colors: [
                                                                  Constants
                                                                      .primary1,
                                                                  Constants
                                                                      .secondary4
                                                                ],
                                                                begin: Alignment
                                                                    .topLeft,
                                                                end: Alignment
                                                                    .bottomRight,
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            child:
                                                                ElevatedButton(
                                                              style:
                                                                  ElevatedButton
                                                                      .styleFrom(
                                                                backgroundColor:
                                                                    Colors
                                                                        .transparent,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              10.0), // Set the border radius here
                                                                ), // Set the background color here
                                                              ),
                                                              onPressed: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                            BudgetCopyWidget(
                                                                      getUserType:
                                                                          ref.read(UserDashListProvider.notifier).getUserType ??
                                                                              "0",
                                                                      getAdminMobileNo:
                                                                          Constants.getUserMobile ??
                                                                              "",
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                              child: Text(
                                                                  "My Users",
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          color: Constants
                                                                              .secondary,
                                                                          overflow: TextOverflow
                                                                              .ellipsis,
                                                                          fontWeight:
                                                                              FontWeight.bold)

                                                                  // TextStyle(
                                                                  //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                  ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    makeTitleHeader('My Orders', false, 1),
                                    SliverToBoxAdapter(
                                      child: Container(
                                        color: Constants.secondary,
                                        height: 10.h,
                                        child: Center(
                                          child: Padding(
                                            padding: const EdgeInsets.all(0.0),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 8.0,
                                                                  left: 8.0,
                                                                  right: 8.0),
                                                          child: Container(
                                                            decoration:
                                                                BoxDecoration(
                                                              gradient:
                                                                  LinearGradient(
                                                                colors: [
                                                                  Constants
                                                                      .primary1,
                                                                  Constants
                                                                      .secondary4
                                                                ],
                                                                begin: Alignment
                                                                    .topLeft,
                                                                end: Alignment
                                                                    .bottomRight,
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            child:
                                                                ElevatedButton(
                                                              style:
                                                                  ElevatedButton
                                                                      .styleFrom(
                                                                backgroundColor:
                                                                    Colors
                                                                        .transparent,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              10.0), // Set the border radius here
                                                                ), // Set the background color here
                                                              ),
                                                              onPressed: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder:
                                                                        (context) =>
                                                                            OrdersScreen(
                                                                      getUserType:
                                                                          ref.read(UserDashListProvider.notifier).getUserType ??
                                                                              "0",
                                                                      getAdminMobileNo:
                                                                          Constants.getUserMobile ??
                                                                              "",
                                                                    ),
                                                                  ),
                                                                ).then((value) {
                                                                  //todo:- below code refresh firebase records automatically when come back to same screen
                                                                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                });
                                                              },
                                                              child: Text(
                                                                  "My Orders",
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          color: Constants
                                                                              .secondary,
                                                                          overflow: TextOverflow
                                                                              .ellipsis,
                                                                          fontWeight:
                                                                              FontWeight.bold)

                                                                  // TextStyle(
                                                                  //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                  ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    makeTitleHeader(
                                        'Update Pricing Details', false, 1),
                                    SliverToBoxAdapter(
                                      child: Container(
                                        color: Constants.secondary,
                                        height: 10.h,
                                        child: Center(
                                          child: Padding(
                                            padding: const EdgeInsets.all(0.0),
                                            child: SingleChildScrollView(
                                              child: Column(
                                                children: [
                                                  Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      Expanded(
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 8.0,
                                                                  left: 8.0,
                                                                  right: 8.0),
                                                          child: Container(
                                                            decoration:
                                                                BoxDecoration(
                                                              gradient:
                                                                  LinearGradient(
                                                                colors: [
                                                                  Constants
                                                                      .primary1,
                                                                  Constants
                                                                      .secondary4
                                                                ],
                                                                begin: Alignment
                                                                    .topLeft,
                                                                end: Alignment
                                                                    .bottomRight,
                                                              ),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          8.0),
                                                            ),
                                                            child:
                                                                ElevatedButton(
                                                              style:
                                                                  ElevatedButton
                                                                      .styleFrom(
                                                                backgroundColor:
                                                                    Colors
                                                                        .transparent,
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              10.0), // Set the border radius here
                                                                ), // Set the background color here
                                                              ),
                                                              onPressed: () {
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder: (context) => AreaList(
                                                                        getUserType:
                                                                            ref.read(UserDashListProvider.notifier).getUserType ??
                                                                                "0",
                                                                        getAdminMobileNo:
                                                                            Constants.getUserMobile ??
                                                                                ""),
                                                                  ),
                                                                ).then((value) {
                                                                  //todo:- below code refresh firebase records automatically when come back to same screen
                                                                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                });
                                                              },
                                                              child: Text(
                                                                  "Update Price",
                                                                  style: Theme.of(
                                                                          context)
                                                                      .textTheme
                                                                      .bodyMedium
                                                                      ?.copyWith(
                                                                          color: Constants
                                                                              .secondary,
                                                                          overflow: TextOverflow
                                                                              .ellipsis,
                                                                          fontWeight:
                                                                              FontWeight.bold)

                                                                  // TextStyle(
                                                                  //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                  ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              (isLoading ?? false)
                                  ? isRefresh == true
                                      ? Container()
                                      : Container(
                                          color: Colors.transparent,
                                          child: Center(
                                              child: CircularProgressIndicator(
                                            color: isRefresh == true
                                                ? Colors.transparent
                                                : FlutterFlowTheme.of(context)
                                                    .primary,
                                          )),
                                        )
                                  : Container()
                            ],
                          ))
                    ],
                  ),
                );
              } catch (e) {
                return Container(
                  color: Constants.secondary,
                  height: 100.h,
                  child: Center(
                    child: Text("Problem in Adding Pricing Details..."),
                  ),
                );
              }
            }
          } else {
            //todo:-add area price details for meat shop owner when no details existed and also handle  error message if set method fails
            try {
              await docRef.set({
                documentId ?? "9941445471": {
                  'Chicken': {
                    'AreaPrice': {
                      'WithSkin': "230" ?? 0,
                      'WithoutSkin': "260" ?? 0,
                    },
                    'OurPrice': {
                      'WithSkin': "230" ?? 0,
                      'WithoutSkin': "260" ?? 0,
                    },
                  },
                  'Mutton': {
                    'AreaPrice': "900" ?? 0,
                    'OurPrice': "900" ?? 0,
                  },
                }
              });

              return Container(
                color: Constants.secondary,
                height: 100.h,
                child: Stack(
                  children: [
                    Container(
                        height: 100.h,
                        child: Stack(
                          children: [
                            RefreshIndicator(
                              onRefresh: _handleRefresh,
                              child: CustomScrollView(
                                slivers: [
                                  SliverToBoxAdapter(
                                    child: Center(
                                      child: Container(
                                        height: 10.h,
                                        width: 100.w,
                                        decoration: BoxDecoration(
                                          color: Constants.secondary,
                                          borderRadius: BorderRadius.only(
                                            bottomLeft: Radius.circular(0),
                                            bottomRight: Radius.circular(0),
                                          ),
                                        ),
                                        child: Stack(children: [
                                          Positioned.fill(
                                            child: Padding(
                                              padding: const EdgeInsets.only(
                                                  left: 10.0, right: 0),
                                              child: Align(
                                                alignment: Alignment.centerLeft,
                                                child: Container(
                                                  width: 100.w,
                                                  child: SingleChildScrollView(
                                                    child: Column(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceEvenly,
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        // Consumer(builder:
                                                        //     (context, ref,
                                                        //         child) {
                                                        //   double? getNetBals =
                                                        //       ref.watch(
                                                        //           getUserNetBal);
                                                        //
                                                        //   getNetBals = 0;

                                                        // return
                                                        Text("Welcome Back",
                                                            textAlign:
                                                                TextAlign.start,
                                                            style: Theme.of(
                                                                    context)
                                                                .textTheme
                                                                .headlineLarge),
                                                        // }),
                                                        Text(
                                                          "Lets Earn Together!",
                                                          textAlign:
                                                              TextAlign.start,
                                                          style:
                                                              Theme.of(context)
                                                                  .textTheme
                                                                  .titleSmall,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),

                                            // Add more Positioned widgets for additional images
                                          ),
                                        ]),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader('My Users', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          BudgetCopyWidget(
                                                                    getUserType:
                                                                        ref.read(UserDashListProvider.notifier).getUserType ??
                                                                            "0",
                                                                    getAdminMobileNo:
                                                                        Constants.getUserMobile ??
                                                                            "",
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                            child: Text(
                                                                "My Users",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader('My Orders', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          OrdersScreen(
                                                                    getUserType:
                                                                        ref.read(UserDashListProvider.notifier).getUserType ??
                                                                            "0",
                                                                    getAdminMobileNo:
                                                                        Constants.getUserMobile ??
                                                                            "",
                                                                  ),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                                "My Orders",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  makeTitleHeader(
                                      'Update Pricing Details', false, 1),
                                  SliverToBoxAdapter(
                                    child: Container(
                                      color: Constants.secondary,
                                      height: 10.h,
                                      child: Center(
                                        child: Padding(
                                          padding: const EdgeInsets.all(0.0),
                                          child: SingleChildScrollView(
                                            child: Column(
                                              children: [
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceEvenly,
                                                  children: [
                                                    Expanded(
                                                      child: Padding(
                                                        padding:
                                                            const EdgeInsets
                                                                .only(
                                                                top: 8.0,
                                                                left: 8.0,
                                                                right: 8.0),
                                                        child: Container(
                                                          decoration:
                                                              BoxDecoration(
                                                            gradient:
                                                                LinearGradient(
                                                              colors: [
                                                                Constants
                                                                    .primary1,
                                                                Constants
                                                                    .secondary4
                                                              ],
                                                              begin: Alignment
                                                                  .topLeft,
                                                              end: Alignment
                                                                  .bottomRight,
                                                            ),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        8.0),
                                                          ),
                                                          child: ElevatedButton(
                                                            style:
                                                                ElevatedButton
                                                                    .styleFrom(
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              shape:
                                                                  RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            10.0), // Set the border radius here
                                                              ), // Set the background color here
                                                            ),
                                                            onPressed: () {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder: (context) => AreaList(
                                                                      getUserType:
                                                                          ref.read(UserDashListProvider.notifier).getUserType ??
                                                                              "0",
                                                                      getAdminMobileNo:
                                                                          Constants.getUserMobile ??
                                                                              ""),
                                                                ),
                                                              ).then((value) {
                                                                //todo:- below code refresh firebase records automatically when come back to same screen
                                                                // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                              });
                                                            },
                                                            child: Text(
                                                                "Update Price",
                                                                style: Theme.of(
                                                                        context)
                                                                    .textTheme
                                                                    .bodyMedium
                                                                    ?.copyWith(
                                                                        color: Constants
                                                                            .secondary,
                                                                        overflow:
                                                                            TextOverflow
                                                                                .ellipsis,
                                                                        fontWeight:
                                                                            FontWeight.bold)

                                                                // TextStyle(
                                                                //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            (isLoading ?? false)
                                ? isRefresh == true
                                    ? Container()
                                    : Container(
                                        color: Colors.transparent,
                                        child: Center(
                                            child: CircularProgressIndicator(
                                          color: isRefresh == true
                                              ? Colors.transparent
                                              : FlutterFlowTheme.of(context)
                                                  .primary,
                                        )),
                                      )
                                : Container()
                          ],
                        ))
                  ],
                ),
              );
            } catch (e) {
              return Container(
                color: Constants.secondary,
                height: 100.h,
                child: Center(
                  child: Text("Problem in Adding Pricing Details..."),
                ),
              );
            }
          }
        } catch (e) {
          return Container(
            color: Constants.secondary,
            height: 100.h,
            child: Center(
              child: Text("Error Fetching Data..."),
            ),
          );
        }
      } else if ((ref.read(UserDashListProvider.notifier).getUserType ?? "0") ==
          "2") {
        //todo:- Cloud Kitchen owner

        return Container(
          color: Constants.secondary,
          height: 100.h,
          child: Stack(
            children: [
              Container(
                  height: 100.h,
                  child: Stack(
                    children: [
                      RefreshIndicator(
                        onRefresh: _handleRefresh,
                        child: CustomScrollView(
                          slivers: [
                            SliverToBoxAdapter(
                              child: Center(
                                child: Container(
                                  height: 10.h,
                                  width: 100.w,
                                  decoration: BoxDecoration(
                                    color: Constants.secondary,
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(0),
                                      bottomRight: Radius.circular(0),
                                    ),
                                  ),
                                  child: Stack(children: [
                                    Positioned.fill(
                                      child: Padding(
                                        padding: const EdgeInsets.only(
                                            left: 10.0, right: 0),
                                        child: Align(
                                          alignment: Alignment.centerLeft,
                                          child: Container(
                                            width: 100.w,
                                            child: SingleChildScrollView(
                                              child: Column(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceEvenly,
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  // Consumer(builder:
                                                  //     (context, ref,
                                                  //         child) {
                                                  //   double? getNetBals =
                                                  //       ref.watch(
                                                  //           getUserNetBal);
                                                  //
                                                  //   getNetBals = 0;

                                                  // return
                                                  Text("Welcome Back",
                                                      textAlign:
                                                          TextAlign.start,
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .headlineLarge),
                                                  // }),
                                                  Text(
                                                    "Lets Earn Together!",
                                                    textAlign: TextAlign.start,
                                                    style: Theme.of(context)
                                                        .textTheme
                                                        .titleSmall,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),

                                      // Add more Positioned widgets for additional images
                                    ),
                                  ]),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Users', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                                MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 8.0,
                                                          left: 8.0,
                                                          right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                            Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                            Colors.transparent,
                                                        shape:
                                                            RoundedRectangleBorder(
                                                          borderRadius:
                                                              BorderRadius.circular(
                                                                  10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                BudgetCopyWidget(
                                                              getUserType: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getUserType ??
                                                                  "0",
                                                              getAdminMobileNo:
                                                                  Constants
                                                                          .getUserMobile ??
                                                                      "",
                                                            ),
                                                          ),
                                                        );
                                                      },
                                                      child: Text("My Users",
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold)

                                                          // TextStyle(
                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                          ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Orders', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                                MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 8.0,
                                                          left: 8.0,
                                                          right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                            Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                            Colors.transparent,
                                                        shape:
                                                            RoundedRectangleBorder(
                                                          borderRadius:
                                                              BorderRadius.circular(
                                                                  10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                OrdersScreen(
                                                              getUserType: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getUserType ??
                                                                  "0",
                                                              getAdminMobileNo:
                                                                  Constants
                                                                          .getUserMobile ??
                                                                      "",
                                                            ),
                                                          ),
                                                        ).then((value) {
                                                          //todo:- below code refresh firebase records automatically when come back to same screen
                                                          // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        });
                                                      },
                                                      child: Text("My Orders",
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold)

                                                          // TextStyle(
                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                          ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('Create Food', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                                MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 8.0,
                                                          left: 8.0,
                                                          right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                            Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                            Colors.transparent,
                                                        shape:
                                                            RoundedRectangleBorder(
                                                          borderRadius:
                                                              BorderRadius.circular(
                                                                  10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) => CreateNewFood(
                                                                getMobNo: widget
                                                                        .getMobile ??
                                                                    "+919941445471",
                                                                getDocId: "",
                                                                getTitle: "",
                                                                getDescription:
                                                                    "",
                                                                getAmount: "",
                                                                getIsUpdatingFoodPrice:
                                                                    false),
                                                          ),
                                                        ).then((value) {
                                                          //todo:- below code refresh firebase records automatically when come back to same screen
                                                          // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        }).then((value) {
                                                          // setState(() {
                                                          _handleRefresh();
                                                          // });
                                                        });
                                                      },
                                                      child: Text("Create Food",
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold)

                                                          // TextStyle(
                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                          ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('My foods', false, 1),
                            SliverToBoxAdapter(
                              child: Center(
                                child: Container(
                                  alignment: Alignment.center,
                                  height: 100.h,
                                  width: 100.w,
                                  decoration: BoxDecoration(
                                    color:
                                        FlutterFlowTheme.of(context).secondary,
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(0),
                                      bottomRight: Radius.circular(0),
                                    ),
                                  ),
                                  child: Padding(
                                    padding: const EdgeInsets.only(top: 10.0),
                                    child: ValueListenableBuilder<String>(
                                      valueListenable: _searchQuery,
                                      builder: (context, query, child) {
                                        return ValueListenableBuilder<int>(
                                          valueListenable:
                                              _selectedCategoryIndex,
                                          builder:
                                              (context, selectedIndex, child) {
                                            // List<FoodList> filteredItems =
                                            //     _getFilteredItems();

                                            List<FoodList>? filteredItems =
                                                query.isNotEmpty
                                                    ? ref
                                                        .read(
                                                            UserDashListProvider
                                                                .notifier)
                                                        .categoryProducts
                                                        ?.where((item) => (item
                                                                    .title ??
                                                                "")
                                                            .toLowerCase()
                                                            .contains(query
                                                                .toLowerCase()))
                                                        .toList()
                                                    : _getFoodItemsByProdCode(
                                                        _categoryMapping.keys
                                                                .toList()[
                                                            selectedIndex]);

                                            return ListView.builder(
                                              itemCount:
                                                  _categoryMapping.length,
                                              itemBuilder:
                                                  (context, sectionIndex) {
                                                var categoryKeys =
                                                    _categoryMapping.keys
                                                        .toList();
                                                String prodCode =
                                                    categoryKeys[sectionIndex];

                                                print(ref
                                                    .read(UserDashListProvider
                                                        .notifier)
                                                    .categoryProducts);

                                                // categoryProducts = ref
                                                //     .read(adminDashListProvider
                                                //     .notifier)
                                                //     .foodList;

                                                // List<FoodList>? sectionItems =
                                                // _getFoodItemsByProdCode(
                                                //     prodCode);
                                                // if ((sectionItems ?? []).isEmpty)
                                                //   return const SizedBox.shrink();

                                                List<FoodList> sectionItems =
                                                    (filteredItems ?? [])
                                                        .where((item) =>
                                                            item.productCategory ==
                                                            prodCode)
                                                        .toList();
                                                if (sectionItems.isEmpty)
                                                  return const SizedBox
                                                      .shrink();

                                                return Column(
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                          const EdgeInsets.all(
                                                              8.0),
                                                      child: Text(
                                                        '${_categoryMapping[prodCode]} ',
                                                        style: const TextStyle(
                                                            fontFamily:
                                                                'Encode Sans Condensed',
                                                            fontSize: 20,
                                                            fontWeight:
                                                                FontWeight
                                                                    .bold),
                                                      ),
                                                    ),
                                                    SizedBox(
                                                      height: 300,
                                                      child: ListView.builder(
                                                        controller:
                                                            _scrollControllers[
                                                                sectionIndex],
                                                        scrollDirection:
                                                            Axis.horizontal,
                                                        itemCount: sectionItems
                                                            ?.length,
                                                        padding:
                                                            const EdgeInsets
                                                                .symmetric(
                                                                horizontal: 80),
                                                        itemBuilder:
                                                            (context, index) {
                                                          return Center(
                                                            child:
                                                                GestureDetector(
                                                              onTap: () {
                                                                _selectedIndexNotifiers[
                                                                        sectionIndex]!
                                                                    .value = index;
                                                                _scrollToIndex(
                                                                    sectionIndex,
                                                                    index);

                                                                FoodList?
                                                                    product =
                                                                    sectionItems?[
                                                                        index];

                                                                String?
                                                                    getAmount =
                                                                    product?.amount ??
                                                                        "";
                                                                String?
                                                                    getTitle =
                                                                    product?.title ??
                                                                        "";
                                                                String?
                                                                    getDocId =
                                                                    product?.docID ??
                                                                        "";
                                                                String?
                                                                    getDescription =
                                                                    product?.description ??
                                                                        "";

                                                                String?
                                                                    getFoodAdminNo =
                                                                    product?.getFoodAdminNo ??
                                                                        "";

                                                                final List<
                                                                        dynamic>
                                                                    imageUrls =
                                                                    product?.fileUrls ??
                                                                        [];
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder: (context) => CreateNewFood(
                                                                        getMobNo:
                                                                            getFoodAdminNo,
                                                                        getDocId:
                                                                            getDocId,
                                                                        getTitle:
                                                                            getTitle,
                                                                        getDescription:
                                                                            getDescription,
                                                                        getAmount:
                                                                            getAmount,
                                                                        getIsUpdatingFoodPrice:
                                                                            true),
                                                                  ),
                                                                ).then((value) {
                                                                  //todo:- below code refresh firebase records automatically when come back to same screen
                                                                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                });
                                                              },
                                                              child:
                                                                  ValueListenableBuilder<
                                                                      int>(
                                                                valueListenable:
                                                                    _selectedIndexNotifiers[
                                                                        sectionIndex]!,
                                                                builder: (context,
                                                                    selectedIndex,
                                                                    child) {
                                                                  bool
                                                                      isSelected =
                                                                      index ==
                                                                          selectedIndex;
                                                                  return AnimatedContainer(
                                                                    duration: const Duration(
                                                                        milliseconds:
                                                                            300),
                                                                    curve: Curves
                                                                        .easeInOut,
                                                                    child:
                                                                        Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              10.0,
                                                                          right:
                                                                              10),
                                                                      child: Transform
                                                                          .scale(
                                                                        scale: isSelected
                                                                            ? 1.2
                                                                            : 0.9,
                                                                        child:
                                                                            Opacity(
                                                                          opacity: isSelected
                                                                              ? 1.0
                                                                              : 0.6,
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                160,
                                                                            height:
                                                                                220,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: Colors.white,
                                                                              borderRadius: BorderRadius.circular(12),
                                                                              boxShadow: [
                                                                                BoxShadow(
                                                                                  color: Colors.grey.withOpacity(0.4),
                                                                                  blurRadius: 10,
                                                                                  spreadRadius: 3,
                                                                                )
                                                                              ],
                                                                            ),
                                                                            child:
                                                                                Stack(
                                                                              children: [
                                                                                Padding(
                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                  child: Column(
                                                                                    mainAxisAlignment: MainAxisAlignment.end,
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          color: Colors.white,
                                                                                          child: Center(
                                                                                            child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                ? Hero(
                                                                                                    tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                                    child: FutureBuilder(
                                                                                                      future: precacheImage(
                                                                                                        NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                        context,
                                                                                                      ),
                                                                                                      builder: (context, snapshot) {
                                                                                                        if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundColor: Colors.white,
                                                                                                            child: CircularProgressIndicator(),
                                                                                                          );
                                                                                                        } else {
                                                                                                          return CircleAvatar(
                                                                                                            radius: 80,
                                                                                                            backgroundImage: NetworkImage(
                                                                                                              sectionItems?[index].fileUrls[0] ?? '',
                                                                                                            ),
                                                                                                            backgroundColor: Colors.white,
                                                                                                          );
                                                                                                        }
                                                                                                      },
                                                                                                    ),
                                                                                                  )
                                                                                                : CircleAvatar(
                                                                                                    radius: 80,
                                                                                                    backgroundColor: Colors.grey,
                                                                                                  ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      Text(
                                                                                        sectionItems?[index].title ?? "",
                                                                                        style: TextStyle(
                                                                                          color: isSelected ? Colors.black : Colors.grey,
                                                                                          fontSize: isSelected ? 18 : 14,
                                                                                          fontWeight: FontWeight.w900,
                                                                                          fontFamily: 'Encode Sans Condensed',
                                                                                        ),
                                                                                      ),
                                                                                      Text(
                                                                                        '₹${sectionItems?[index].amount}',
                                                                                        style: TextStyle(
                                                                                          fontSize: 16,
                                                                                          color: Constants.colorFoodCPrimary,
                                                                                          fontWeight: FontWeight.bold,
                                                                                        ),
                                                                                      ),
                                                                                      Row(mainAxisAlignment: MainAxisAlignment.center, children: [
                                                                                        IconButton(
                                                                                          onPressed: () {
                                                                                            _singleton.showAlertDialog(
                                                                                              context: context,
                                                                                              title: "Are you sure?",
                                                                                              message: "Do you want to Delete this Food Item?",
                                                                                              onCancelPressed: () {},
                                                                                              onOkPressed: () async {
                                                                                                _deleteTicket(sectionItems?[index].docID ?? "", sectionItems?[index].fileUrls ?? []);
                                                                                              },
                                                                                            );
                                                                                          },
                                                                                          icon: Icon(
                                                                                            Icons.delete,
                                                                                            color: Constants.colorFoodCPrimary,
                                                                                            size: 20,
                                                                                          ),
                                                                                        ),
                                                                                      ])
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                // Heart Icon in Top-Right
                                                                                Positioned(
                                                                                  top: 8,
                                                                                  right: 8,
                                                                                  child: Container(
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                      border: Border.all(color: Colors.transparent, width: 2),
                                                                                      color: Colors.white.withOpacity(0.1),
                                                                                    ),
                                                                                    padding: EdgeInsets.all(4),
                                                                                    child: Icon(
                                                                                      isSelected ? Icons.favorite : null,
                                                                                      color: isSelected ? Colors.redAccent : null,
                                                                                      size: 20,
                                                                                    ),
                                                                                  ),
                                                                                ),

                                                                                ValueListenableBuilder<bool>(
                                                                                  valueListenable: _isDeleting,
                                                                                  builder: (context, isCreating, child) {
                                                                                    if (isCreating) {
                                                                                      return Container(
                                                                                        // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                                                        child: Center(
                                                                                          child: CircularProgressIndicator(),
                                                                                        ),
                                                                                      );
                                                                                    }
                                                                                    return SizedBox.shrink();
                                                                                  },
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                  ],
                                                );
                                              },
                                              physics: BouncingScrollPhysics(),
                                            );
                                          },
                                        );
                                      },
                                    ),
                                  ),

                                  //  ListView.builder(
                                  //
                                  //   scrollDirection: Axis.vertical,
                                  //   itemCount: _categories.length,
                                  //   itemBuilder: (context, index) {
                                  //     String category =
                                  //         _categories[index];
                                  //     String categoryId =
                                  //         _categoryMapping.entries
                                  //             .firstWhere((element) =>
                                  //                 element.value ==
                                  //                 category)
                                  //             .key;
                                  //
                                  //      categoryProducts =
                                  //         ref
                                  //             .read(
                                  //                 adminDashListProvider
                                  //                     .notifier)
                                  //             .foodList
                                  //             ?.where((product) =>
                                  //                 product
                                  //                     .productCategory ==
                                  //                 categoryId)
                                  //             .toList();
                                  //
                                  //     if (categoryProducts == null) {
                                  //       return Container();
                                  //     }
                                  //
                                  //     return Column(
                                  //       crossAxisAlignment:
                                  //           CrossAxisAlignment.start,
                                  //       children: [
                                  //         (categoryProducts ?? []).isEmpty
                                  //             ? Container()
                                  //             : Column(
                                  //                 crossAxisAlignment:
                                  //                     CrossAxisAlignment
                                  //                         .start,
                                  //                 children: [
                                  //                   Padding(
                                  //                     padding:
                                  //                         const EdgeInsets
                                  //                             .only(
                                  //                             left:
                                  //                                 8.0),
                                  //                     child: Text(
                                  //                         category,
                                  //                         style: Theme.of(
                                  //                                 context)
                                  //                             .textTheme
                                  //                             .titleLarge),
                                  //                   ),
                                  //                   SizedBox(
                                  //                     height: 30.h,
                                  //                     // Set static height for the GridView
                                  //                     child: GridView
                                  //                         .builder(
                                  //                       shrinkWrap:
                                  //                           true,
                                  //                       physics:
                                  //                           NeverScrollableScrollPhysics(),
                                  //                       padding:
                                  //                           const EdgeInsets
                                  //                               .all(
                                  //                               8.0),
                                  //                       gridDelegate:
                                  //                           SliverGridDelegateWithFixedCrossAxisCount(
                                  //                         crossAxisCount:
                                  //                             2,
                                  //                         crossAxisSpacing:
                                  //                             8.0,
                                  //                         mainAxisSpacing:
                                  //                             8.0,
                                  //                         childAspectRatio:
                                  //                             0.8, // Adjust ratio as needed
                                  //                       ),
                                  //                       itemCount:
                                  //                           categoryProducts
                                  //                               ?.length,
                                  //                       itemBuilder:
                                  //                           (context,
                                  //                               index) {
                                  //                         FoodList?
                                  //                             product =
                                  //                             categoryProducts?[
                                  //                                 index];
                                  //
                                  //                         String?
                                  //                             getAmount =
                                  //                             product?.amount ??
                                  //                                 "";
                                  //                         String?
                                  //                             getTitle =
                                  //                             product?.title ??
                                  //                                 "";
                                  //                         String?
                                  //                             getDocId =
                                  //                             product?.docID ??
                                  //                                 "";
                                  //                         String?
                                  //                             getDescription =
                                  //                             product?.description ??
                                  //                                 "";
                                  //                         final List<
                                  //                                 dynamic>
                                  //                             imageUrls =
                                  //                             (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A"))
                                  //                                 .fileUrls ?? [];
                                  //
                                  //                         return SizedBox(
                                  //                           height: 250,
                                  //                           // Set a fixed height for each grid item
                                  //                           child:
                                  //                               GridTile(
                                  //                             child:
                                  //                                 GestureDetector(
                                  //                               onTap:
                                  //                                   () {
                                  //                                 Navigator
                                  //                                     .push(
                                  //                                   context,
                                  //                                   MaterialPageRoute(
                                  //                                     builder: (context) => FoodDetailScreen(
                                  //                                       title: getTitle,
                                  //                                       description: getDescription,
                                  //                                       affiliateLink: "",
                                  //                                       prodDetails: "getProdDetails",
                                  //                                       prodSpec: "getProdSpec",
                                  //                                       imageUrls: imageUrls,
                                  //                                       amount: getAmount,
                                  //                                       userName: ref.read(UserDashListProvider.notifier).getUser ?? "",
                                  //                                       getAdminType: ref.read(UserDashListProvider.notifier).getAdminType ?? "",
                                  //                                       minBargainAmount: "",
                                  //                                       getHeroTag: 'imageHero$index',
                                  //                                     ),
                                  //                                   ),
                                  //                                 );
                                  //                               },
                                  //                               child:
                                  //                                   Container(
                                  //                                 decoration:
                                  //                                     BoxDecoration(
                                  //                                   color:
                                  //                                       _singleton.lighten(
                                  //                                     Constants.secondary2,
                                  //                                     amount: _singleton.generateRandomColorDouble(),
                                  //                                   ),
                                  //                                   borderRadius:
                                  //                                       BorderRadius.circular(15.0),
                                  //                                 ),
                                  //                                 child:
                                  //                                     Column(
                                  //                                   mainAxisAlignment:
                                  //                                       MainAxisAlignment.spaceBetween,
                                  //                                   crossAxisAlignment:
                                  //                                       CrossAxisAlignment.start,
                                  //                                   children: [
                                  //                                     Expanded(
                                  //                                       flex: 3,
                                  //                                       child: ClipRRect(
                                  //                                         borderRadius: const BorderRadius.only(
                                  //                                           topLeft: Radius.circular(15),
                                  //                                           topRight: Radius.circular(15),
                                  //                                         ),
                                  //                                         child:  (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls.isNotEmpty
                                  //                                             ? Hero(
                                  //                                                 tag: 'imageHero$index$getTitle$getAmount',
                                  //                                                 child: Image.network(
                                  //                                                   (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0],
                                  //                                                   fit: BoxFit.cover,
                                  //                                                   width: double.infinity,
                                  //                                                   height: double.infinity,
                                  //                                                   loadingBuilder: (context, child, loadingProgress) {
                                  //                                                     if (loadingProgress == null) return child;
                                  //                                                     return Center(
                                  //                                                       child: CircularProgressIndicator(
                                  //                                                         value: loadingProgress.expectedTotalBytes != null ? loadingProgress.cumulativeBytesLoaded / loadingProgress.expectedTotalBytes! : null,
                                  //                                                       ),
                                  //                                                     );
                                  //                                                   },
                                  //                                                 ),
                                  //                                               )
                                  //                                             : Container(color: Colors.grey),
                                  //                                       ),
                                  //                                     ),
                                  //                                     Padding(
                                  //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 5.0),
                                  //                                       child: Text(
                                  //                                         product?.title ?? "",
                                  //                                         style: Theme.of(context).textTheme.titleSmall?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                  //                                       ),
                                  //                                     ),
                                  //                                     Padding(
                                  //                                       padding: const EdgeInsets.symmetric(horizontal: 5.0, vertical: 2.0),
                                  //                                       child: Text(
                                  //                                         "Rs. $getAmount",
                                  //                                         style: Theme.of(context).textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.bold, overflow: TextOverflow.ellipsis),
                                  //                                       ),
                                  //                                     ),
                                  //                                     Visibility(
                                  //                                       visible: Constants.isAdmin,
                                  //                                       child: Padding(
                                  //                                         padding: const EdgeInsets.only(top: 8.0),
                                  //                                         child: Row(
                                  //                                           children: [
                                  //                                             IconButton(
                                  //                                               icon: Icon(Icons.delete, color: Constants.secondary3),
                                  //                                               onPressed: () {
                                  //                                                 // Delete action
                                  //                                               },
                                  //                                             ),
                                  //                                             IconButton(
                                  //                                               onPressed: () async {
                                  //                                                 _singleton.showAlertDialog(
                                  //                                                   context: context,
                                  //                                                   title: "Are you sure?",
                                  //                                                   message: "Do you want to Post Notification for this Product?",
                                  //                                                   onCancelPressed: () {},
                                  //                                                   onOkPressed: () async {
                                  //                                                     Response? getResult = await NotificationService.postNotificationWithImage(
                                  //                                                       "Get $getTitle for Rs.$getAmount ✨",
                                  //                                                       "Try bargaining for the best prices on your favorite products 🪑💰🔦🛵⚽️",
                                  //                                                       (product ?? FoodList(amount: "N/A", description: "N/A", fileUrls: [], minBargainAmount: "N/A", productCategory: "N/A", productDetails: "N/A", productSpec: "N/A", title: "N/A", docID: "N/A")).fileUrls[0] ?? null,
                                  //                                                     );
                                  //
                                  //                                                     getResult?.statusCode == 200 ? Constants.showToast("Posted Notification to Maaka Users", ToastGravity.BOTTOM) : Constants.showToast("Problem in sending Notification!", ToastGravity.BOTTOM);
                                  //                                                   },
                                  //                                                 );
                                  //                                               },
                                  //                                               icon: Icon(Icons.notification_add, color: Constants.secondary3),
                                  //                                             ),
                                  //                                           ],
                                  //                                         ),
                                  //                                       ),
                                  //                                     ),
                                  //                                   ],
                                  //                                 ),
                                  //                               ),
                                  //                             ),
                                  //                           ),
                                  //                         );
                                  //                       },
                                  //                     ),
                                  //                   ),
                                  //                 ],
                                  //               ),
                                  //       ],
                                  //     );
                                  //
                                  //     //todo:- food section
                                  //    // return Center(
                                  //    //    child: GestureDetector(
                                  //    //      onTap: () {
                                  //    //        _selectedIndexNotifier.value = index;
                                  //    //        _scrollToIndex(index);
                                  //    //      },
                                  //    //      child: ValueListenableBuilder<int>(
                                  //    //        valueListenable: _selectedIndexNotifier,
                                  //    //        builder: (context, selectedIndex, child) {
                                  //    //          bool isSelected = index == selectedIndex;
                                  //    //          return AnimatedContainer(
                                  //    //            duration: const Duration(milliseconds: 300),
                                  //    //            curve: Curves.easeInOut,
                                  //    //            child: Padding(
                                  //    //              padding: const EdgeInsets.only(left: 10.0, right: 10),
                                  //    //              child: Transform.scale(
                                  //    //                scale: isSelected ? 1.2 : 0.9,
                                  //    //                child: Opacity(
                                  //    //                  opacity: isSelected ? 1.0 : 0.6,
                                  //    //                  child: Stack(
                                  //    //                    clipBehavior: Clip.none,
                                  //    //                    children: [
                                  //    //                      Container(
                                  //    //                        width: 160,
                                  //    //                        height: 220,
                                  //    //                        decoration: BoxDecoration(
                                  //    //                          color: Colors.white,
                                  //    //                          borderRadius: BorderRadius.circular(12),
                                  //    //                          boxShadow: [
                                  //    //                            BoxShadow(
                                  //    //                              color: Colors.grey.withOpacity(0.4),
                                  //    //                              blurRadius: 10,
                                  //    //                              spreadRadius: 3,
                                  //    //                            )
                                  //    //                          ],
                                  //    //                        ),
                                  //    //                        child: Padding(
                                  //    //                          padding: const EdgeInsets.only(top: 0.0),
                                  //    //                          child: Column(
                                  //    //                            mainAxisAlignment: MainAxisAlignment.end,
                                  //    //                            children: [
                                  //    //                              Text(
                                  //    //                                "name",
                                  //    //                                style: TextStyle(
                                  //    //                                  color: isSelected ? Colors.black : Colors.grey,
                                  //    //                                  fontSize: isSelected ? 18 : 14,
                                  //    //                                  fontWeight: FontWeight.bold,
                                  //    //                                ),
                                  //    //                              ),
                                  //    //                              const SizedBox(height: 4),
                                  //    //                              Text(
                                  //    //                                '₹400',
                                  //    //                                style: const TextStyle(
                                  //    //                                  fontSize: 16,
                                  //    //                                  fontWeight: FontWeight.bold,
                                  //    //                                  color: Colors.green,
                                  //    //                                ),
                                  //    //                              ),
                                  //    //                              Text(
                                  //    //                                '₹550',
                                  //    //                                style: const TextStyle(
                                  //    //                                  fontSize: 14,
                                  //    //                                  color: Colors.red,
                                  //    //                                  decoration: TextDecoration.lineThrough,
                                  //    //                                ),
                                  //    //                              ),
                                  //    //                              const SizedBox(height: 10),
                                  //    //                            ],
                                  //    //                          ),
                                  //    //                        ),
                                  //    //                      ),
                                  //    //                      Positioned(
                                  //    //                        top: -20,
                                  //    //                        left: 20,
                                  //    //                        child: Container(
                                  //    //                          width: 100,
                                  //    //                          height: 100,
                                  //    //                          decoration: BoxDecoration(
                                  //    //                            boxShadow: [
                                  //    //                              BoxShadow(
                                  //    //                                color: Colors.grey.withOpacity(0.3),
                                  //    //                                blurRadius: 10,
                                  //    //                                spreadRadius: 2,
                                  //    //                              ),
                                  //    //                            ],
                                  //    //                          ),
                                  //    //                          child: ClipRRect(
                                  //    //                            borderRadius: BorderRadius.circular(50),
                                  //    //                            child: Image.asset(
                                  //    //                              "foodItems[index].imagePath",
                                  //    //                              fit: BoxFit.cover,
                                  //    //                            ),
                                  //    //                          ),
                                  //    //                        ),
                                  //    //                      ),
                                  //    //                    ],
                                  //    //                  ),
                                  //    //                ),
                                  //    //              ),
                                  //    //            ),
                                  //    //          );
                                  //    //        },
                                  //    //      ),
                                  //    //    ),
                                  //    //  );
                                  //   },
                                  // )
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      (isLoading ?? false)
                          ? isRefresh == true
                              ? Container()
                              : Container(
                                  color: Colors.transparent,
                                  child: Center(
                                      child: CircularProgressIndicator(
                                    color: isRefresh == true
                                        ? Colors.transparent
                                        : FlutterFlowTheme.of(context).primary,
                                  )),
                                )
                          : Container()
                    ],
                  ))
            ],
          ),
        );
      } else if ((ref.read(UserDashListProvider.notifier).getUserType ?? "0") ==
          "6") {
        //todo:- Grocery owner

        return Container(
          color: Constants.secondary,
          height: 100.h,
          child: Stack(
            children: [
              Container(
                  height: 100.h,
                  child: Stack(
                    children: [
                      RefreshIndicator(
                        onRefresh: _handleRefresh,
                        child: CustomScrollView(
                          slivers: [
                            SliverToBoxAdapter(
                              child: Center(
                                child: Container(
                                  height: 10.h,
                                  width: 100.w,
                                  decoration: BoxDecoration(
                                    color: Constants.secondary,
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(0),
                                      bottomRight: Radius.circular(0),
                                    ),
                                  ),
                                  child: Stack(children: [
                                    Positioned.fill(
                                      child: Padding(
                                        padding: const EdgeInsets.only(
                                            left: 10.0, right: 0),
                                        child: Align(
                                          alignment: Alignment.centerLeft,
                                          child: Container(
                                            width: 100.w,
                                            child: SingleChildScrollView(
                                              child: Column(
                                                mainAxisAlignment:
                                                MainAxisAlignment
                                                    .spaceEvenly,
                                                crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                                children: [
                                                  // Consumer(builder:
                                                  //     (context, ref,
                                                  //         child) {
                                                  //   double? getNetBals =
                                                  //       ref.watch(
                                                  //           getUserNetBal);
                                                  //
                                                  //   getNetBals = 0;

                                                  // return
                                                  Text("Welcome Back",
                                                      textAlign:
                                                      TextAlign.start,
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .headlineLarge),
                                                  // }),
                                                  Text(
                                                    "Lets Earn Together!",
                                                    textAlign: TextAlign.start,
                                                    style: Theme.of(context)
                                                        .textTheme
                                                        .titleSmall,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),

                                      // Add more Positioned widgets for additional images
                                    ),
                                  ]),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Users', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                            MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets.only(
                                                      top: 8.0,
                                                      left: 8.0,
                                                      right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                        Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                      BorderRadius.circular(
                                                          8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                        Colors.transparent,
                                                        shape:
                                                        RoundedRectangleBorder(
                                                          borderRadius:
                                                          BorderRadius.circular(
                                                              10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                BudgetCopyWidget(
                                                                  getUserType: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getUserType ??
                                                                      "0",
                                                                  getAdminMobileNo:
                                                                  Constants
                                                                      .getUserMobile ??
                                                                      "",
                                                                ),
                                                          ),
                                                        );
                                                      },
                                                      child: Text("My Users",
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                              color: Constants
                                                                  .secondary,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold)

                                                        // TextStyle(
                                                        //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Orders', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                            MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets.only(
                                                      top: 8.0,
                                                      left: 8.0,
                                                      right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                        Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                      BorderRadius.circular(
                                                          8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                        Colors.transparent,
                                                        shape:
                                                        RoundedRectangleBorder(
                                                          borderRadius:
                                                          BorderRadius.circular(
                                                              10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                OrdersScreen(
                                                                  getUserType: ref
                                                                      .read(UserDashListProvider
                                                                      .notifier)
                                                                      .getUserType ??
                                                                      "0",
                                                                  getAdminMobileNo:
                                                                  Constants
                                                                      .getUserMobile ??
                                                                      "",
                                                                ),
                                                          ),
                                                        ).then((value) {
                                                          //todo:- below code refresh firebase records automatically when come back to same screen
                                                          // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        });
                                                      },
                                                      child: Text("My Orders",
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                              color: Constants
                                                                  .secondary,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold)

                                                        // TextStyle(
                                                        //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('Create Grocery', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                            MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                  const EdgeInsets.only(
                                                      top: 8.0,
                                                      left: 8.0,
                                                      right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                        Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                      BorderRadius.circular(
                                                          8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                        Colors.transparent,
                                                        shape:
                                                        RoundedRectangleBorder(
                                                          borderRadius:
                                                          BorderRadius.circular(
                                                              10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) => CreateNewGrocery(
                                                                getMobNo: widget
                                                                    .getMobile ??
                                                                    "+919941445471",
                                                                getDocId: "",
                                                                getTitle: "",
                                                                getDescription:
                                                                "",
                                                                getAmount: "",
                                                                getIsUpdatingGroceryPrice:
                                                                false),
                                                          ),
                                                        ).then((value) {
                                                          //todo:- below code refresh firebase records automatically when come back to same screen
                                                          // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                        }).then((value) {
                                                          // setState(() {
                                                          _handleRefresh();
                                                          // });
                                                        });
                                                      },
                                                      child: Text("Create Grocery",
                                                          style: Theme.of(
                                                              context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                              color: Constants
                                                                  .secondary,
                                                              overflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                              fontWeight:
                                                              FontWeight
                                                                  .bold)

                                                        // TextStyle(
                                                        //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Grocery', false, 1),
                            SliverToBoxAdapter(
                              child: Center(
                                child: Container(
                                  alignment: Alignment.center,
                                  height: 100.h,
                                  width: 100.w,
                                  decoration: BoxDecoration(
                                    color:
                                    FlutterFlowTheme.of(context).secondary,
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(0),
                                      bottomRight: Radius.circular(0),
                                    ),
                                  ),
                                  child: Padding(
                                    padding: const EdgeInsets.only(top: 10.0),
                                    child: ValueListenableBuilder<String>(
                                      valueListenable: _searchQuery,
                                      builder: (context, query, child) {
                                        return ValueListenableBuilder<int>(
                                          valueListenable:
                                          _selectedGroceryCategoryIndex,
                                          builder:
                                              (context, selectedIndex, child) {
                                            // List<FoodList> filteredItems =
                                            //     _getFilteredItems();

                                            List<GroceryList>? filteredItems =
                                            query.isNotEmpty
                                                ? ref
                                                .read(
                                                UserDashListProvider
                                                    .notifier)
                                                .categoryGroceryProducts
                                                ?.where((item) => (item
                                                .title ??
                                                "")
                                                .toLowerCase()
                                                .contains(query
                                                .toLowerCase()))
                                                .toList()
                                                : _getGroceryItemsByProdCode(
                                                _groceryCategoryMapping.keys
                                                    .toList()[
                                                selectedIndex]);

                                            return ListView.builder(
                                              itemCount:
                                              _groceryCategoryMapping.length,
                                              itemBuilder:
                                                  (context, sectionIndex) {
                                                var categoryKeys =
                                                _groceryCategoryMapping.keys
                                                    .toList();
                                                String prodCode =
                                                categoryKeys[sectionIndex];

                                                print(ref
                                                    .read(UserDashListProvider
                                                    .notifier)
                                                    .categoryGroceryProducts);

                                                // categoryProducts = ref
                                                //     .read(adminDashListProvider
                                                //     .notifier)
                                                //     .foodList;

                                                // List<FoodList>? sectionItems =
                                                // _getFoodItemsByProdCode(
                                                //     prodCode);
                                                // if ((sectionItems ?? []).isEmpty)
                                                //   return const SizedBox.shrink();

                                                List<GroceryList> sectionItems =
                                                (filteredItems ?? [])
                                                    .where((item) =>
                                                item.productCategory ==
                                                    prodCode)
                                                    .toList();
                                                if (sectionItems.isEmpty)
                                                  return const SizedBox
                                                      .shrink();

                                                return Column(
                                                  crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                                  children: [
                                                    Padding(
                                                      padding:
                                                      const EdgeInsets.all(
                                                          8.0),
                                                      child: Text(
                                                        '${_groceryCategoryMapping[prodCode]} ',
                                                        style: const TextStyle(
                                                            fontFamily:
                                                            'Encode Sans Condensed',
                                                            fontSize: 20,
                                                            fontWeight:
                                                            FontWeight
                                                                .bold),
                                                      ),
                                                    ),
                                                    SizedBox(
                                                      height: 300,
                                                      child: ListView.builder(
                                                        controller:
                                                        _scrollControllers[
                                                        sectionIndex],
                                                        scrollDirection:
                                                        Axis.horizontal,
                                                        itemCount: sectionItems
                                                            ?.length,
                                                        padding:
                                                        const EdgeInsets
                                                            .symmetric(
                                                            horizontal: 80),
                                                        itemBuilder:
                                                            (context, index) {
                                                          return Center(
                                                            child:
                                                            GestureDetector(
                                                              onTap: () {
                                                                _selectedIndexNotifiers[
                                                                sectionIndex]!
                                                                    .value = index;
                                                                _scrollToIndex(
                                                                    sectionIndex,
                                                                    index);

                                                                GroceryList?
                                                                product =
                                                                sectionItems?[
                                                                index];

                                                                String?
                                                                getAmount =
                                                                    product?.amount ??
                                                                        "";
                                                                String?
                                                                getTitle =
                                                                    product?.title ??
                                                                        "";
                                                                String?
                                                                getDocId =
                                                                    product?.docID ??
                                                                        "";
                                                                String?
                                                                getDescription =
                                                                    product?.description ??
                                                                        "";

                                                                String?
                                                                getFoodAdminNo =
                                                                    product?.getGroceryAdminNo ??
                                                                        "";

                                                                final List<
                                                                    dynamic>
                                                                imageUrls =
                                                                    product?.fileUrls ??
                                                                        [];
                                                                Navigator.push(
                                                                  context,
                                                                  MaterialPageRoute(
                                                                    builder: (context) => CreateNewGrocery(
                                                                        getMobNo:
                                                                        getFoodAdminNo,
                                                                        getDocId:
                                                                        getDocId,
                                                                        getTitle:
                                                                        getTitle,
                                                                        getDescription:
                                                                        getDescription,
                                                                        getAmount:
                                                                        getAmount,
                                                                        getIsUpdatingGroceryPrice:
                                                                        true),
                                                                  ),
                                                                ).then((value) {
                                                                  //todo:- below code refresh firebase records automatically when come back to same screen
                                                                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                                                                });
                                                              },
                                                              child:
                                                              ValueListenableBuilder<
                                                                  int>(
                                                                valueListenable:
                                                                _selectedIndexNotifiers[
                                                                sectionIndex]!,
                                                                builder: (context,
                                                                    selectedIndex,
                                                                    child) {
                                                                  bool
                                                                  isSelected =
                                                                      index ==
                                                                          selectedIndex;
                                                                  return AnimatedContainer(
                                                                    duration: const Duration(
                                                                        milliseconds:
                                                                        300),
                                                                    curve: Curves
                                                                        .easeInOut,
                                                                    child:
                                                                    Padding(
                                                                      padding: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                          10.0,
                                                                          right:
                                                                          10),
                                                                      child: Transform
                                                                          .scale(
                                                                        scale: isSelected
                                                                            ? 1.2
                                                                            : 0.9,
                                                                        child:
                                                                        Opacity(
                                                                          opacity: isSelected
                                                                              ? 1.0
                                                                              : 0.6,
                                                                          child:
                                                                          Container(
                                                                            width:
                                                                            160,
                                                                            height:
                                                                            220,
                                                                            decoration:
                                                                            BoxDecoration(
                                                                              color: Colors.white,
                                                                              borderRadius: BorderRadius.circular(12),
                                                                              boxShadow: [
                                                                                BoxShadow(
                                                                                  color: Colors.grey.withOpacity(0.4),
                                                                                  blurRadius: 10,
                                                                                  spreadRadius: 3,
                                                                                )
                                                                              ],
                                                                            ),
                                                                            child:
                                                                            Stack(
                                                                              children: [
                                                                                Padding(
                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                  child: Column(
                                                                                    mainAxisAlignment: MainAxisAlignment.end,
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          color: Colors.white,
                                                                                          child: Center(
                                                                                            child: (sectionItems ?? [])[index].fileUrls.isNotEmpty
                                                                                                ? Hero(
                                                                                              tag: 'imageHero$index${sectionItems?[index].title}${sectionItems?[index].amount}',
                                                                                              child: FutureBuilder(
                                                                                                future: precacheImage(
                                                                                                  NetworkImage(sectionItems?[index].fileUrls[0] ?? ''),
                                                                                                  context,
                                                                                                ),
                                                                                                builder: (context, snapshot) {
                                                                                                  if (snapshot.connectionState == ConnectionState.waiting) {
                                                                                                    return CircleAvatar(
                                                                                                      radius: 80,
                                                                                                      backgroundColor: Colors.white,
                                                                                                      child: CircularProgressIndicator(),
                                                                                                    );
                                                                                                  } else {
                                                                                                    return CircleAvatar(
                                                                                                      radius: 80,
                                                                                                      backgroundImage: NetworkImage(
                                                                                                        sectionItems?[index].fileUrls[0] ?? '',
                                                                                                      ),
                                                                                                      backgroundColor: Colors.white,
                                                                                                    );
                                                                                                  }
                                                                                                },
                                                                                              ),
                                                                                            )
                                                                                                : CircleAvatar(
                                                                                              radius: 80,
                                                                                              backgroundColor: Colors.grey,
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      Text(
                                                                                        sectionItems?[index].title ?? "",
                                                                                        style: TextStyle(
                                                                                          color: isSelected ? Colors.black : Colors.grey,
                                                                                          fontSize: isSelected ? 18 : 14,
                                                                                          fontWeight: FontWeight.w900,
                                                                                          fontFamily: 'Encode Sans Condensed',
                                                                                        ),
                                                                                      ),
                                                                                      Text(
                                                                                        '₹${sectionItems?[index].amount}',
                                                                                        style: TextStyle(
                                                                                          fontSize: 16,
                                                                                          color: Constants.colorFoodCPrimary,
                                                                                          fontWeight: FontWeight.bold,
                                                                                        ),
                                                                                      ),
                                                                                      Row(mainAxisAlignment: MainAxisAlignment.center, children: [
                                                                                        IconButton(
                                                                                          onPressed: () {
                                                                                            _singleton.showAlertDialog(
                                                                                              context: context,
                                                                                              title: "Are you sure?",
                                                                                              message: "Do you want to Delete this Grocery Item?",
                                                                                              onCancelPressed: () {},
                                                                                              onOkPressed: () async {
                                                                                                _deleteGroceryTicket(sectionItems?[index].docID ?? "", sectionItems?[index].fileUrls ?? []);
                                                                                              },
                                                                                            );
                                                                                          },
                                                                                          icon: Icon(
                                                                                            Icons.delete,
                                                                                            color: Constants.colorFoodCPrimary,
                                                                                            size: 20,
                                                                                          ),
                                                                                        ),
                                                                                      ])
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                // Heart Icon in Top-Right
                                                                                Positioned(
                                                                                  top: 8,
                                                                                  right: 8,
                                                                                  child: Container(
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                      border: Border.all(color: Colors.transparent, width: 2),
                                                                                      color: Colors.white.withOpacity(0.1),
                                                                                    ),
                                                                                    padding: EdgeInsets.all(4),
                                                                                    child: Icon(
                                                                                      isSelected ? Icons.favorite : null,
                                                                                      color: isSelected ? Colors.redAccent : null,
                                                                                      size: 20,
                                                                                    ),
                                                                                  ),
                                                                                ),

                                                                                ValueListenableBuilder<bool>(
                                                                                  valueListenable: _isDeleting,
                                                                                  builder: (context, isCreating, child) {
                                                                                    if (isCreating) {
                                                                                      return Container(
                                                                                        // color: Colors.black.withOpacity(0.5), // Semi-transparent overlay
                                                                                        child: Center(
                                                                                          child: CircularProgressIndicator(),
                                                                                        ),
                                                                                      );
                                                                                    }
                                                                                    return SizedBox.shrink();
                                                                                  },
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  );
                                                                },
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                  ],
                                                );
                                              },
                                              physics: BouncingScrollPhysics(),
                                            );
                                          },
                                        );
                                      },
                                    ),
                                  ),


                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      (isLoading ?? false)
                          ? isRefresh == true
                          ? Container()
                          : Container(
                        color: Colors.transparent,
                        child: Center(
                            child: CircularProgressIndicator(
                              color: isRefresh == true
                                  ? Colors.transparent
                                  : FlutterFlowTheme.of(context).primary,
                            )),
                      )
                          : Container()
                    ],
                  ))
            ],
          ),
        );
      } else {
        return Container(
          color: Constants.secondary,
          height: 100.h,
          child: Stack(
            children: [
              Container(
                  height: 100.h,
                  child: Stack(
                    children: [
                      RefreshIndicator(
                        onRefresh: _handleRefresh,
                        child: CustomScrollView(
                          slivers: [
                            SliverToBoxAdapter(
                              child: Center(
                                child: Container(
                                  height: 10.h,
                                  width: 100.w,
                                  decoration: BoxDecoration(
                                    color: Constants.secondary,
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(0),
                                      bottomRight: Radius.circular(0),
                                    ),
                                  ),
                                  child: Stack(children: [
                                    Positioned.fill(
                                      child: Padding(
                                        padding: const EdgeInsets.only(
                                            left: 10.0, right: 0),
                                        child: Align(
                                          alignment: Alignment.centerLeft,
                                          child: Container(
                                            width: 100.w,
                                            child: SingleChildScrollView(
                                              child: Column(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceEvenly,
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  // Consumer(builder:
                                                  //     (context, ref,
                                                  //         child) {
                                                  //   double? getNetBals =
                                                  //       ref.watch(
                                                  //           getUserNetBal);
                                                  //
                                                  //   getNetBals = 0;

                                                  // return
                                                  Text("Welcome Back",
                                                      textAlign:
                                                          TextAlign.start,
                                                      style: Theme.of(context)
                                                          .textTheme
                                                          .headlineLarge),
                                                  // }),
                                                  Text(
                                                    "Lets Earn Together!",
                                                    textAlign: TextAlign.start,
                                                    style: Theme.of(context)
                                                        .textTheme
                                                        .titleSmall,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),

                                      // Add more Positioned widgets for additional images
                                    ),
                                  ]),
                                ),
                              ),
                            ),
                            makeTitleHeader('My Users', false, 1),
                            SliverToBoxAdapter(
                              child: Container(
                                color: Constants.secondary,
                                height: 10.h,
                                child: Center(
                                  child: Padding(
                                    padding: const EdgeInsets.all(0.0),
                                    child: SingleChildScrollView(
                                      child: Column(
                                        children: [
                                          Row(
                                            mainAxisAlignment:
                                                MainAxisAlignment.spaceEvenly,
                                            children: [
                                              Expanded(
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          top: 8.0,
                                                          left: 8.0,
                                                          right: 8.0),
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      gradient: LinearGradient(
                                                        colors: [
                                                          Constants.primary1,
                                                          Constants.secondary4
                                                        ],
                                                        begin:
                                                            Alignment.topLeft,
                                                        end: Alignment
                                                            .bottomRight,
                                                      ),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              8.0),
                                                    ),
                                                    child: ElevatedButton(
                                                      style: ElevatedButton
                                                          .styleFrom(
                                                        backgroundColor:
                                                            Colors.transparent,
                                                        shape:
                                                            RoundedRectangleBorder(
                                                          borderRadius:
                                                              BorderRadius.circular(
                                                                  10.0), // Set the border radius here
                                                        ), // Set the background color here
                                                      ),
                                                      onPressed: () {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                BudgetCopyWidget(
                                                              getUserType: ref
                                                                      .read(UserDashListProvider
                                                                          .notifier)
                                                                      .getUserType ??
                                                                  "0",
                                                              getAdminMobileNo:
                                                                  Constants
                                                                          .getUserMobile ??
                                                                      "",
                                                            ),
                                                          ),
                                                        );
                                                      },
                                                      child: Text("My Users",
                                                          style: Theme.of(
                                                                  context)
                                                              .textTheme
                                                              .bodyMedium
                                                              ?.copyWith(
                                                                  color: Constants
                                                                      .secondary,
                                                                  overflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .bold)

                                                          // TextStyle(
                                                          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
                                                          ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      (isLoading ?? false)
                          ? isRefresh == true
                              ? Container()
                              : Container(
                                  color: Colors.transparent,
                                  child: Center(
                                      child: CircularProgressIndicator(
                                    color: isRefresh == true
                                        ? Colors.transparent
                                        : FlutterFlowTheme.of(context).primary,
                                  )),
                                )
                          : Container()
                    ],
                  ))
            ],
          ),
        );
      }
    } else {
      return Container(
        color: Constants.secondary,
        height: 100.h,
        child: Center(
          child: Text("Loading..."),
        ),
      );
    }
  }

  Future<void> _deleteTicket(String docId, List<dynamic> fileUrls) async {
    _isDeleting.value = true;

    try {
      // Delete the files from Firebase Storage if they exist
      for (String fileUrl in fileUrls) {
        FirebaseStorage storage = FirebaseStorage.instance;
        Reference ref = storage.refFromURL(fileUrl);
        await ref.delete();
      }

      // Delete the document from Firestore
      await FirebaseFirestore.instance
          .collection('AreaFoodPrices')
          .doc(widget.getMobile)
          .collection("Foods")
          .doc(docId ?? "")
          .delete();
    } catch (e) {
      // Handle any errors here
      print('Error deleting ticket: $e');
      _singleton.showAlertDialog(
        context: context,
        title: "Message",
        message: "Unable To Delete!",
        onCancelPressed: () {},
        onOkPressed: () async {
          _isDeleting.value = false;
        },
      );
    } finally {
      _isDeleting.value = false;
      // setState(() {
      _handleRefresh();
      // });
    }
  }

  Future<void> _deleteGroceryTicket(String docId, List<dynamic> fileUrls) async {
    _isDeleting.value = true;

    try {
      // Delete the files from Firebase Storage if they exist
      for (String fileUrl in fileUrls) {
        FirebaseStorage storage = FirebaseStorage.instance;
        Reference ref = storage.refFromURL(fileUrl);
        await ref.delete();
      }

      // Delete the document from Firestore
      await FirebaseFirestore.instance
          .collection('AreaGroceryPrices')
          .doc(widget.getMobile)
          .collection("Grocery")
          .doc(docId ?? "")
          .delete();
    } catch (e) {
      // Handle any errors here
      print('Error deleting ticket: $e');
      _singleton.showAlertDialog(
        context: context,
        title: "Message",
        message: "Unable To Delete!",
        onCancelPressed: () {},
        onOkPressed: () async {
          _isDeleting.value = false;
        },
      );
    } finally {
      _isDeleting.value = false;
      // setState(() {
      _handleRefresh();
      // });
    }
  }

  Future<Widget> _DrawerScreen(BuildContext context, String getUserType,
      bool? isRefresh, bool? isLoading) async {
    if ((ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "1" ||
        (ref.read(UserDashListProvider.notifier).getUserType ?? "0") == "2") {
      return Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: <Widget>[
            DrawerHeader(
              decoration: BoxDecoration(
                color: Constants.primary,
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                      child: Container(
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            GestureDetector(
                              onTap: () {},
                              child: Container(
                                width: 60,
                                height: 60,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  color: FlutterFlowTheme.of(context)
                                      .secondary, // You can set your desired color here
                                ),
                                child: Center(
                                    child: Text(
                                        ref
                                                .read(UserDashListProvider
                                                    .notifier)
                                                .getUserInitial ??
                                            "HI",
                                        textAlign: TextAlign.start,
                                        style: Theme.of(context)
                                            .textTheme
                                            .headlineLarge
                                            ?.copyWith(
                                              color: Constants.primary,
                                            ))),
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                    Expanded(
                      child: Container(
                        child: Row(
                          children: [
                            Expanded(
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Hi," + (getUserName ?? ""),
                                    style: Theme.of(context)
                                        .textTheme
                                        .headlineSmall
                                        ?.copyWith(
                                          color: Constants.secondary,
                                        ),
                                  ),
                                  Text(
                                    "Lets Earn Together!",
                                    style: Theme.of(context)
                                        .textTheme
                                        .titleSmall
                                        ?.copyWith(
                                            color: Constants.secondary,
                                            overflow: TextOverflow.ellipsis,
                                            fontWeight: FontWeight.normal),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 10.0),
              child: Text(
                "My Achievement",
                style: Theme.of(context)
                    .textTheme
                    .titleSmall
                    ?.copyWith(color: Constants.primary),
              ),
            ),
            ListTile(
              leading: Icon(
                Icons.person,
                color: Constants.primary,
              ),
              title: Text(
                'My Profile',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);

                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ProfileScreen(
                      userName: ref.read(UserDashListProvider.notifier).getUser,
                      cashBack: ref
                          .read(UserDashListProvider.notifier)
                          .getNetIntbalance
                          .toStringAsFixed(2),
                      netBalance: ref
                          .read(UserDashListProvider.notifier)
                          .getNetbalance
                          .toStringAsFixed(2),
                      userNomName: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNominee,
                      userNomMob: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNomineeMob,
                      getTotalCredit: ref
                          .read(getUserCreditBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalDebit: ref
                          .read(getUserDebitBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalIntCredit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntCredit
                          .toStringAsFixed(2),
                      getTotalIntDebit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntDebit
                          .toStringAsFixed(2),
                      userAddress: ref
                          .read(UserDashListProvider.notifier)
                          .getUserAddress,
                    ),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            Divider(),
            Padding(
              padding: const EdgeInsets.only(top: 0),
              child: Align(
                alignment: Alignment.center,
                child: SizedBox(
                  width: 50.w,
                  height: 5.h,
                  child: FFButtonWidget(
                    onPressed: () async {
                      showDialog(
                          barrierDismissible: false,
                          context: context,
                          builder: (BuildContext context) {
                            return CustomDialogBox(
                              title: "Hi $getUserName",
                              descriptions:
                                  "Are you sure, Do you want to logout",
                              text: "Ok",
                              isCancel: true,
                              onTap: () async {
                                SharedPreferences prefs =
                                    await SharedPreferences.getInstance();
                                loginKey = prefs.getString("LoginSuccessuser1");

                                if (loginKey == null ||
                                    loginKey == "" ||
                                    loginKey!.isEmpty) {
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MyPhone()),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                } else {
                                  SharedPreferences prefs =
                                      await SharedPreferences.getInstance();
                                  String? mPin = prefs.getString("Mpin");
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MpinPageWidget(
                                            getMobileNo: loginKey ?? "",
                                            getMpin: mPin)),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                }
                              },
                            );
                          });
                    },
                    text: "Logout",
                    options: FFButtonOptions(
                      padding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      iconPadding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      color: FlutterFlowTheme.of(context).primary,
                      textStyle: GlobalTextStyles.secondaryText2(
                          txtWeight: FontWeight.bold,
                          txtSize: 16,
                          textColor: FlutterFlowTheme.of(context).secondary),
                      elevation: 2.0,
                      borderSide: const BorderSide(
                        color: Colors.transparent,
                        width: 1.0,
                      ),
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      );
    }

    if ((ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
            "2" ||
        (ref.read(UserDashListProvider.notifier).getReffererType ?? "0") ==
            "1") {
      return Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: <Widget>[
            DrawerHeader(
              decoration: BoxDecoration(
                color: Constants.primary,
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                      child: Container(
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            GestureDetector(
                              onTap: () {},
                              child: Container(
                                width: 60,
                                height: 60,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  color: FlutterFlowTheme.of(context)
                                      .secondary, // You can set your desired color here
                                ),
                                child: Center(
                                    child: Text(
                                        ref
                                                .read(UserDashListProvider
                                                    .notifier)
                                                .getUserInitial ??
                                            "HI",
                                        textAlign: TextAlign.start,
                                        style: Theme.of(context)
                                            .textTheme
                                            .headlineLarge
                                            ?.copyWith(
                                              color: Constants.primary,
                                            ))),
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                    Expanded(
                      child: Container(
                        child: Row(
                          children: [
                            Expanded(
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Hi," + (getUserName ?? ""),
                                    style: Theme.of(context)
                                        .textTheme
                                        .headlineSmall
                                        ?.copyWith(
                                          color: Constants.secondary,
                                        ),
                                  ),
                                  Text(
                                    "Lets Earn Together!",
                                    style: Theme.of(context)
                                        .textTheme
                                        .titleSmall
                                        ?.copyWith(
                                            color: Constants.secondary,
                                            overflow: TextOverflow.ellipsis,
                                            fontWeight: FontWeight.normal),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 10.0),
              child: Text(
                "My Achievement",
                style: Theme.of(context)
                    .textTheme
                    .titleSmall
                    ?.copyWith(color: Constants.primary),
              ),
            ),
            ListTile(
              leading: Icon(
                Icons.person,
                color: Constants.primary,
              ),
              title: Text(
                'My Profile',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);

                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ProfileScreen(
                      userName: ref.read(UserDashListProvider.notifier).getUser,
                      cashBack: ref
                          .read(UserDashListProvider.notifier)
                          .getNetIntbalance
                          .toStringAsFixed(2),
                      netBalance: ref
                          .read(UserDashListProvider.notifier)
                          .getNetbalance
                          .toStringAsFixed(2),
                      userNomName: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNominee,
                      userNomMob: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNomineeMob,
                      getTotalCredit: ref
                          .read(getUserCreditBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalDebit: ref
                          .read(getUserDebitBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalIntCredit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntCredit
                          .toStringAsFixed(2),
                      getTotalIntDebit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntDebit
                          .toStringAsFixed(2),
                      userAddress: ref
                          .read(UserDashListProvider.notifier)
                          .getUserAddress,
                    ),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            Divider(),
            Padding(
              padding: const EdgeInsets.only(top: 0),
              child: Align(
                alignment: Alignment.center,
                child: SizedBox(
                  width: 50.w,
                  height: 5.h,
                  child: FFButtonWidget(
                    onPressed: () async {
                      showDialog(
                          barrierDismissible: false,
                          context: context,
                          builder: (BuildContext context) {
                            return CustomDialogBox(
                              title: "Hi $getUserName",
                              descriptions:
                                  "Are you sure, Do you want to logout",
                              text: "Ok",
                              isCancel: true,
                              onTap: () async {
                                SharedPreferences prefs =
                                    await SharedPreferences.getInstance();
                                loginKey = prefs.getString("LoginSuccessuser1");

                                if (loginKey == null ||
                                    loginKey == "" ||
                                    loginKey!.isEmpty) {
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MyPhone()),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                } else {
                                  SharedPreferences prefs =
                                      await SharedPreferences.getInstance();
                                  String? mPin = prefs.getString("Mpin");
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MpinPageWidget(
                                            getMobileNo: loginKey ?? "",
                                            getMpin: mPin)),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                }
                              },
                            );
                          });
                    },
                    text: "Logout",
                    options: FFButtonOptions(
                      padding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      iconPadding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      color: FlutterFlowTheme.of(context).primary,
                      textStyle: GlobalTextStyles.secondaryText2(
                          txtWeight: FontWeight.bold,
                          txtSize: 16,
                          textColor: FlutterFlowTheme.of(context).secondary),
                      elevation: 2.0,
                      borderSide: const BorderSide(
                        color: Colors.transparent,
                        width: 1.0,
                      ),
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      );
    } else {
      return Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: <Widget>[
            DrawerHeader(
              decoration: BoxDecoration(
                color: Constants.primary,
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                      child: Container(
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            GestureDetector(
                              onTap: () {},
                              child: Container(
                                width: 60,
                                height: 60,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  color: FlutterFlowTheme.of(context)
                                      .secondary, // You can set your desired color here
                                ),
                                child: Center(
                                    child: Text(
                                        ref
                                                .read(UserDashListProvider
                                                    .notifier)
                                                .getUserInitial ??
                                            "HI",
                                        textAlign: TextAlign.start,
                                        style: Theme.of(context)
                                            .textTheme
                                            .headlineLarge
                                            ?.copyWith(
                                              color: Constants.primary,
                                            ))),
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                    Expanded(
                      child: Container(
                        child: Row(
                          children: [
                            Expanded(
                              child: Column(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Hi," + (getUserName ?? ""),
                                    style: Theme.of(context)
                                        .textTheme
                                        .headlineSmall
                                        ?.copyWith(
                                          color: Constants.secondary,
                                        ),
                                  ),
                                  Text(
                                    "Save now, Achieve later, Enjoy always!",
                                    style: Theme.of(context)
                                        .textTheme
                                        .titleSmall
                                        ?.copyWith(
                                            color: Constants.secondary,
                                            overflow: TextOverflow.ellipsis,
                                            fontWeight: FontWeight.normal),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                        width: 100.w,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 10.0),
              child: Text(
                "My Achievement",
                style: Theme.of(context)
                    .textTheme
                    .titleSmall
                    ?.copyWith(color: Constants.primary),
              ),
            ),
            ListTile(
              leading: Icon(
                Icons.person,
                color: Constants.primary,
              ),
              title: Text(
                'My Profile',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);

                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ProfileScreen(
                      userName: ref.read(UserDashListProvider.notifier).getUser,
                      cashBack: ref
                          .read(UserDashListProvider.notifier)
                          .getNetIntbalance
                          .toStringAsFixed(2),
                      netBalance: ref
                          .read(UserDashListProvider.notifier)
                          .getNetbalance
                          .toStringAsFixed(2),
                      userNomName: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNominee,
                      userNomMob: ref
                          .read(UserDashListProvider.notifier)
                          .getUserNomineeMob,
                      getTotalCredit: ref
                          .read(getUserCreditBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalDebit: ref
                          .read(getUserDebitBal.notifier)
                          .state
                          ?.toStringAsFixed(2),
                      getTotalIntCredit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntCredit
                          .toStringAsFixed(2),
                      getTotalIntDebit: ref
                          .read(UserDashListProvider.notifier)
                          .getTotalIntDebit
                          .toStringAsFixed(2),
                      userAddress: ref
                          .read(UserDashListProvider.notifier)
                          .getUserAddress,
                    ),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            ListTile(
              leading: Icon(
                Icons.flag,
                color: Constants.primary,
              ),
              title: Text(
                'My Goals',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  PageRouteBuilder(
                    transitionDuration: Duration(milliseconds: 400),
                    pageBuilder: (_, __, ___) => GoalsHistory1(
                      getDocId:
                          ref.read(UserDashListProvider.notifier).getDocId,
                      getMobile: widget.getMobile,
                      dataList: dataList ?? [],
                    ),
                    transitionsBuilder: (_, animation, __, child) {
                      return SlideTransition(
                        position: Tween<Offset>(
                          begin: Offset(0, 1),
                          // You can adjust the start position
                          end: Offset.zero, // You can adjust the end position
                        ).animate(animation),
                        child: child,
                      );
                    },
                  ),
                );
              },
            ),
            Divider(),
            Padding(
              padding: const EdgeInsets.only(left: 10.0),
              child: Text(
                "My Profit",
                style: Theme.of(context)
                    .textTheme
                    .titleSmall
                    ?.copyWith(color: Constants.primary),
              ),
            ),
            ListTile(
              leading: Icon(
                Icons.currency_rupee,
                color: Constants.primary,
              ),
              title: Text(
                'Save Money',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  PageRouteBuilder(
                    transitionDuration: Duration(milliseconds: 400),
                    pageBuilder: (_, __, ___) => GoalsHistory1(
                      getDocId:
                          ref.read(UserDashListProvider.notifier).getDocId,
                      getMobile: widget.getMobile,
                      dataList: dataList ?? [],
                    ),
                    transitionsBuilder: (_, animation, __, child) {
                      return SlideTransition(
                        position: Tween<Offset>(
                          begin: Offset(0, 1),
                          // You can adjust the start position
                          end: Offset.zero, // You can adjust the end position
                        ).animate(animation),
                        child: child,
                      );
                    },
                  ),
                );
              },
            ),
            ListTile(
              leading: Icon(
                Icons.currency_rupee,
                color: Constants.primary,
              ),
              title: Text(
                'Request Money',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);

                double? getFinalGoalAchievedAmount = findGoalAchievedAmount();

                isSavAmntReq = true;
                Navigator.push(
                  context,
                  PageRouteBuilder(
                    transitionDuration: Duration(milliseconds: 400),
                    pageBuilder: (_, __, ___) => RequestMoney(
                      getMobile: widget.getMobile,
                      isSavingReq: isSavAmntReq,
                      getUserName:
                          ref.read(UserDashListProvider.notifier).getUser,
                      getReqAmnt: "",
                      getGoalDocId: "",
                      getGoalTargetAmnt: "",
                      goalAmount: getFinalGoalAchievedAmount ?? 0.0,
                    ),
                    transitionsBuilder: (_, animation, __, child) {
                      return SlideTransition(
                        position: Tween<Offset>(
                          begin: Offset(0, 1),
                          // You can adjust the start position
                          end: Offset.zero, // You can adjust the end position
                        ).animate(animation),
                        child: child,
                      );
                    },
                  ),
                );
              },
            ),
            ListTile(
              leading: Icon(
                Icons.card_giftcard,
                color: Constants.primary,
              ),
              title: Text(
                'My Rewards',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                isSavAmntReq = false;
                Navigator.push(
                  context,
                  PageRouteBuilder(
                    transitionDuration: Duration(milliseconds: 400),
                    pageBuilder: (_, __, ___) => CashbackDetails(
                      getMobile: widget.getMobile,
                      isSavingReq: isSavAmntReq,
                    ),
                    transitionsBuilder: (_, animation, __, child) {
                      return SlideTransition(
                        position: Tween<Offset>(
                          begin: Offset(0, 1),
                          // You can adjust the start position
                          end: Offset.zero, // You can adjust the end position
                        ).animate(animation),
                        child: child,
                      );
                    },
                  ),
                );
              },
            ),
            ListTile(
              leading: Icon(
                Icons.local_offer,
                color: Constants.primary,
              ),
              title: Text(
                'My Offers',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ProductListScreen(
                      userName:
                          ref.read(UserDashListProvider.notifier).getUser ?? "",
                    ),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            ListTile(
              leading: Icon(
                Icons.shopping_cart,
                color: Constants.primary,
              ),
              title: Text(
                'Shop and Earn',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => AffiliateListScreen(
                        userName:
                            ref.read(UserDashListProvider.notifier).getUser ??
                                ""),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            ListTile(
              leading: Icon(
                Icons.currency_rupee,
                color: Constants.primary,
              ),
              title: Text(
                'Request Shopping Commision',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);

                Navigator.push(
                  context,
                  PageRouteBuilder(
                    transitionDuration: Duration(milliseconds: 500),
                    pageBuilder: (_, __, ___) => UserShoppingCommision(
                      getDocId: widget.getDocId,
                      getMobile: widget.getMobile,
                    ),
                    transitionsBuilder: (_, animation, __, child) {
                      return ScaleTransition(
                        scale: Tween<double>(
                          begin: 0.0,
                          // You can adjust the start scale
                          end: 1.0, // You can adjust the end scale
                        ).animate(animation),
                        child: child,
                      );
                    },
                  ),
                ).then((value) {
                  if (value != null) {
                    if (value == true) {
                      CustomAlertDialog.showCommisionReqSuccessComDialog(
                          context, TextEditingController());
                    }
                  }
                });
              },
            ),
            ListTile(
              leading: Icon(
                Icons.share,
                color: Constants.primary,
              ),
              title: Text(
                'Share And Earn',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                shareApp(context);
              },
            ),
            Divider(),
            Padding(
              padding: const EdgeInsets.only(left: 10.0),
              child: Text(
                "Others",
                style: Theme.of(context)
                    .textTheme
                    .titleSmall
                    ?.copyWith(color: Constants.primary),
              ),
            ),
            ListTile(
              leading: Icon(
                Icons.help,
                color: Constants.primary,
              ),
              title: Text(
                'Ask Me',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => AssistanceScreen(),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            Consumer(builder: (context, ref, child) {
              int? isPendingRequest = ref.watch(isPendingReq);
              int? isPendingCshbckReq = ref.watch(isPendingCashbckReq);
              int? isPendingMessage = ref.watch(isPendingMessages);

              return ListTile(
                leading: Stack(alignment: Alignment.topRight, children: [
                  Icon(
                    Icons.message,
                    color: Constants.primary,
                    // You can set your desired color here
                    size: 25,
                  ),
                  Visibility(
                    visible: ref
                        .read(UserDashListProvider.notifier)
                        .isNotificationByAdmin,
                    child: Positioned(
                      right: -5,
                      top: -5,
                      child: Container(
                        padding: EdgeInsets.all(2),
                        decoration: BoxDecoration(
                          color: Colors.red,
                          shape: BoxShape.circle,
                        ),
                        constraints: BoxConstraints(
                          minWidth: 18,
                          minHeight: 18,
                        ),
                        child: Text(
                          "1",
                          style: TextStyle(
                            color: Constants.secondary,
                            fontSize: 12,
                          ),
                          textAlign: TextAlign.center,
                        ),
                      ),
                    ),
                  ),
                ]),
                title: Text(
                  'Message',
                  style: Theme.of(context).textTheme.bodyLarge,
                ),
                onTap: () {
                  Navigator.pop(context);
                  Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => ChatScreen(
                          userName: "Admin",
                          adminId: Constants.adminId,
                          userId: widget.getMobile,
                          callNo: Constants.adminNo1,
                          getDocId:
                              ref.read(UserDashListProvider.notifier).getDocId,
                        ),
                      )).then((value) {});
                },
              );
            }),
            // ListTile(
            //   leading: Icon(
            //     Icons.food_bank,
            //     color: Constants.primary,
            //   ),
            //   title: Text(
            //     'Meat Basket',
            //     style: Theme.of(context).textTheme.bodyLarge,
            //   ),
            //   onTap: () {
            //     Navigator.pop(context);
            //     Navigator.push(
            //       context,
            //       MaterialPageRoute(
            //         builder: (context) => SelectionScreen(),
            //       ),
            //     ).then((value) {
            //       //todo:- below code refresh firebase records automatically when come back to same screen
            //       // ref.read(adminDashListProvider.notifier).getDashboardDetails();
            //     });
            //   },
            // ),
            ListTile(
              leading: Icon(
                Icons.food_bank,
                color: Constants.primary,
              ),
              title: Text(
                'My Meat Orders',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              onTap: () {
                Navigator.pop(context);
                // addDummyOrder();

                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => OrderedMeatList(
                      getReffererType: ref
                              .read(UserDashListProvider.notifier)
                              .getReffererType ??
                          "0",
                    ),
                  ),
                ).then((value) {
                  //todo:- below code refresh firebase records automatically when come back to same screen
                  // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                });
              },
            ),
            Padding(
              padding: const EdgeInsets.only(top: 0),
              child: Align(
                alignment: Alignment.center,
                child: SizedBox(
                  width: 50.w,
                  height: 5.h,
                  child: FFButtonWidget(
                    onPressed: () async {
                      showDialog(
                          barrierDismissible: false,
                          context: context,
                          builder: (BuildContext context) {
                            return CustomDialogBox(
                              title: "Hi $getUserName",
                              descriptions:
                                  "Are you sure, Do you want to logout",
                              text: "Ok",
                              isCancel: true,
                              onTap: () async {
                                SharedPreferences prefs =
                                    await SharedPreferences.getInstance();
                                loginKey = prefs.getString("LoginSuccessuser1");

                                if (loginKey == null ||
                                    loginKey == "" ||
                                    loginKey!.isEmpty) {
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MyPhone()),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                } else {
                                  SharedPreferences prefs =
                                      await SharedPreferences.getInstance();
                                  String? mPin = prefs.getString("Mpin");
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => MpinPageWidget(
                                            getMobileNo: loginKey ?? "",
                                            getMpin: mPin)),
                                    (route) =>
                                        false, // Remove all routes from the stack
                                  );
                                }
                              },
                            );
                          });
                    },
                    text: "Logout",
                    options: FFButtonOptions(
                      padding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      iconPadding: const EdgeInsetsDirectional.fromSTEB(
                          0.0, 0.0, 0.0, 0.0),
                      color: FlutterFlowTheme.of(context).primary,
                      textStyle: GlobalTextStyles.secondaryText2(
                          txtWeight: FontWeight.bold,
                          txtSize: 16,
                          textColor: FlutterFlowTheme.of(context).secondary),
                      elevation: 2.0,
                      borderSide: const BorderSide(
                        color: Colors.transparent,
                        width: 1.0,
                      ),
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      );
    }
  }

  List<FoodList> _getFilteredItems() {
    String query = _searchQuery.value.toLowerCase();
    if (query.isEmpty) {
      return ref.read(UserDashListProvider.notifier).categoryProducts ?? [];
    }
    return ref
            .read(UserDashListProvider.notifier)
            .categoryProducts
            ?.where((item) => (item.title ?? "").toLowerCase().contains(query))
            .toList() ??
        [];
  }

  Future<void> _handleRefresh() async {
    ref.read(isUserRefreshIndicator.notifier).state = true;
    return ref.read(UserDashListProvider.notifier).getUserDetails(
        widget.getMobile,
        (ref.read(UserDashListProvider.notifier).getReffererType ?? "") == "2"
            ? ref.read(UserDashListProvider.notifier).getReffererMobileNo
            : "9941445471",
        (ref.read(UserDashListProvider.notifier).getReffererType ?? "") == "2"
            ? true
            : false);
  }

  //todo:-16.4.24 below function helps to find total achieved amount in goals list.

  double? findGoalAchievedAmount() {
    Map<String, double> goalAmountMap = {};

    // Initialize map with 0 for each goal
    for (var goal in goalList ?? []) {
      goalAmountMap[goal.goalDocId] = 0;
    }

    // // Calculate sum of amounts for each goal
    for (var transaction in dataList ?? []) {
      // if(transaction.goalDocId == "qvX5rwzYjQqJdcYPnJnb"){
      //   transaction.isDeposit == true ? print("deposited  " + transaction.amount.toString()) : print("withdrawn  " + transaction.amount.toString());
      // }

      if (transaction.isDeposit ?? false) {
        goalAmountMap[transaction.goalDocId] =
            (goalAmountMap[transaction.goalDocId] ?? 0) + transaction.amount;
      } else {
        goalAmountMap[transaction.goalDocId] =
            (goalAmountMap[transaction.goalDocId] ?? 0) - transaction.amount;
      }
    }

    getGoalTotalAmount = 0.0;
    for (var goal in goalList ?? []) {
      print(
          'Total amount for ${goal.name} ${goal.goalDocId}: \$${goalAmountMap[goal.goalDocId]}');
      getGoalTotalAmount = getGoalTotalAmount! + goalAmountMap[goal.goalDocId]!;
    }

    print("Total Goal Amount - $getGoalTotalAmount");
    return getGoalTotalAmount ?? 0.0;
  }

  SliverPersistentHeader makeTitleHeader(
      String headerText, bool isViewAll, int viewAllIndex) {
    return SliverPersistentHeader(
      pinned: true,
      delegate: _SliverAppBarDelegate(
        minHeight: 5.h,
        maxHeight: 5.h,
        child: Container(
            alignment: Alignment.centerLeft,
            color: Constants.secondary,
            child: Padding(
              padding: const EdgeInsets.only(left: 8.0, right: 8.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    headerText,
                    style: const TextStyle(
                        fontFamily: 'Encode Sans Condensed',
                        fontSize: 20,
                        fontWeight: FontWeight.bold),
                    maxLines: 2,
                  ),
                  Visibility(
                    visible: isViewAll,
                    child: InkWell(
                      onTap: () async {
                        if (viewAllIndex == 0) {
                          // Tuple2<List<Goal>, String> getGoalDetails =
                          //     await updateGoalProvider();

                          if (ref
                                  .read(UserDashListProvider.notifier)
                                  .goalDocuments!
                                  .length >=
                              3) {
                            Constants.showToast(
                                "Maximum Goal Reached, Delete Existing to add New Goal",
                                ToastGravity.CENTER);
                            return;
                          }

                          Navigator.push(
                            context,
                            PageRouteBuilder(
                              transitionDuration: Duration(milliseconds: 500),
                              pageBuilder: (_, __, ___) => AddGoalWidget(
                                getDocId: ref
                                    .read(UserDashListProvider.notifier)
                                    .getDocId,
                                getMobile: widget.getMobile,
                              ),
                              transitionsBuilder: (_, animation, __, child) {
                                return ScaleTransition(
                                  scale: Tween<double>(
                                    begin: 0.0,
                                    end: 1.0,
                                  ).animate(animation),
                                  child: child,
                                );
                              },
                            ),
                          ).then((value) {
                            // Handle navigation result if needed
                          });
                        } else if (viewAllIndex == 2) {
                          Navigator.push(
                            context,
                            PageRouteBuilder(
                              transitionDuration: Duration(milliseconds: 400),
                              pageBuilder: (_, __, ___) => TransactionHistory(
                                  getMobile: widget.getMobile,
                                  isSavingHis: true,
                                  isShowSavingsDetails: true),
                              transitionsBuilder: (_, animation, __, child) {
                                return SlideTransition(
                                  position: Tween<Offset>(
                                    begin: Offset(0,
                                        1), // You can adjust the start position
                                    end: Offset
                                        .zero, // You can adjust the end position
                                  ).animate(animation),
                                  child: child,
                                );
                              },
                            ),
                          );
                        } else if (viewAllIndex == 4) {
                          // Navigator.push(
                          //   context,
                          //   MaterialPageRoute(
                          //     builder: (context) => AffiliateListScreen(userName: ref
                          //         .read(
                          //         UserDashListProvider
                          //             .notifier)
                          //         .getUser ??
                          //         ""),
                          //   ),
                          // ).then((value) {
                          //   //todo:- below code refresh firebase records automatically when come back to same screen
                          //   // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                          // });

                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => ProductListScreen(
                                userName: ref
                                        .read(UserDashListProvider.notifier)
                                        .getUser ??
                                    "",
                              ),
                            ),
                          ).then((value) {
                            //todo:- below code refresh firebase records automatically when come back to same screen
                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                          });
                        } else if (viewAllIndex == 3) {
                          Navigator.push(
                            context,
                            PageRouteBuilder(
                              transitionDuration: Duration(milliseconds: 500),
                              pageBuilder: (_, __, ___) =>
                                  UserShoppingCommision(
                                getDocId: widget.getDocId,
                                getMobile: widget.getMobile,
                              ),
                              transitionsBuilder: (_, animation, __, child) {
                                return ScaleTransition(
                                  scale: Tween<double>(
                                    begin: 0.0,
                                    // You can adjust the start scale
                                    end: 1.0, // You can adjust the end scale
                                  ).animate(animation),
                                  child: child,
                                );
                              },
                            ),
                          ).then((value) {
                            if (value != null) {
                              if (value == true) {
                                CustomAlertDialog
                                    .showCommisionReqSuccessComDialog(
                                        context, TextEditingController());
                              }
                            }
                          });
                        } else if (viewAllIndex == 5) {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => OrderedFoodList(),
                            ),
                          ).then((value) {
                            //todo:- below code refresh firebase records automatically when come back to same screen
                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                          });
                        } else if (viewAllIndex == 6) {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => FoodListScreen(
                                userName: ref
                                        .read(UserDashListProvider.notifier)
                                        .getUser ??
                                    "",
                              ),
                            ),
                          ).then((value) {
                            //todo:- below code refresh firebase records automatically when come back to same screen
                            // ref.read(adminDashListProvider.notifier).getDashboardDetails();
                          });
                        }
                      },
                      child: Text(
                        viewAllIndex == 0
                            ? "Set Goal"
                            : viewAllIndex == 4
                                ? "Offers"
                                : viewAllIndex == 3
                                    ? "Request Commision"
                                    : viewAllIndex == 5
                                        ? "My Orders"
                                        : "View All",
                        // style: Theme.of(context)
                        //     .textTheme
                        //     .titleSmall
                        //     ?.copyWith(color: Constants.secondary1),

                        // GlobalTextStyles.secondaryText1(
                        //     txtSize: 16,
                        //     textColor: FlutterFlowTheme.of(context).secondary1,
                        //     txtWeight: FontWeight.bold),
                        style: TextStyle(
                            color: viewAllIndex == 5
                                ? Constants.secondary3
                                : Constants.secondary1,
                            fontFamily: 'Encode Sans Condensed',
                            fontSize: 20,
                            fontWeight: FontWeight.bold),
                      ),
                    ),
                  ),
                ],
              ),
            )),
      ),
    );
  }

  SliverPersistentHeader makeFoodCustTitleHeader(
      String headerText, bool isViewAll, int viewAllIndex) {
    return SliverPersistentHeader(
      pinned: true,
      delegate: _SliverAppBarDelegate(
        minHeight: 7.h,
        maxHeight: 7.h,
        child: Container(
            alignment: Alignment.centerLeft,
            color: Constants.secondary,
            child: Padding(
              padding: const EdgeInsets.only(top: 15, left: 8.0, right: 8.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Expanded(
                    child: Text(
                      headerText,

                      // style: Theme.of(context).textTheme.titleLarge,
                      style: TextStyle(
                        fontFamily: 'Allura',
                        // Apply Open Sans only for this Text widget
                        fontSize: 22,
                        fontWeight: FontWeight.bold,
                      ),
                      maxLines: 2,
                    ),
                  ),
                ],
              ),
            )),
      ),
    );
  }

  Color generateRandomDarkColor() {
    Random random = Random();

    // Generate random values for RGB components in the range 0-127
    int red = random.nextInt(128);
    int green = random.nextInt(128);
    int blue = random.nextInt(128);

    // Combine the values to create a dark color
    Color darkColor = Color.fromARGB(255, red, green, blue);

    return darkColor;
  }

  // Define a function to update the provider
  Future<Tuple2<List<Goal>, String>> updateGoalProvider() async {
    var goalDetails = await ref
        .read(UserDashListProvider.notifier)
        .updateGoalDetails(
            ref.read(UserDashListProvider.notifier).goalDocuments,
            ref.read(UserDashListProvider.notifier).iconOptions);

    return goalDetails;
  }

  ///new design implementation 15.7.24
  void _onVerticalDragUpdate(DragUpdateDetails details) {
    portionBHeightNotifier.value -= details.primaryDelta!;
    if (portionBHeightNotifier.value < minPortionBHeight) {
      portionBHeightNotifier.value = minPortionBHeight;
    } else if (portionBHeightNotifier.value >
        MediaQuery.of(context).size.height) {
      portionBHeightNotifier.value = MediaQuery.of(context).size.height;
    }
  }

  void _onVerticalDragEnd(DragEndDetails details) {
    // Calculate the nearest height value from heightValues array
    double nearestHeight = heightValues.first;
    double distance = (portionBHeightNotifier.value - heightValues.first).abs();
    for (double value in heightValues) {
      double currentDistance = (portionBHeightNotifier.value - value).abs();
      if (currentDistance < distance) {
        nearestHeight = value;
        distance = currentDistance;
      }
    }
    _animateTo(nearestHeight);
  }

  void _animateTo(double height) {
    _animation = Tween<double>(
      begin: portionBHeightNotifier.value,
      end: height,
    ).animate(_controller)
      ..addListener(() {
        portionBHeightNotifier.value = _animation.value;
      });

    _controller.forward(from: 0.0);
  }


  //business enquiry
  static Future<bool> isEnquiry(
      String? phoneNumber, FirebaseFirestore getFireStore) async {
    QuerySnapshot querySnapshot = await getFireStore
        .collection('Enquiry')
        .where('mobile', isEqualTo: phoneNumber)
        .get();

    return querySnapshot.docs.isEmpty;
  }
}

class RowData {
  final int id;
  final String title;
  final IconData icon;
  final String remarks;
  final double targetValue; // Add this
  final double achievedValue; // Add this

  RowData({
    required this.id,
    required this.title,
    required this.icon,
    required this.remarks,
    required this.targetValue, // Add this
    required this.achievedValue, // Add this
  });
}

class HorizontalGridView1 extends ConsumerStatefulWidget {
  HorizontalGridView1(
      {Key? key,
      required this.data,
      required this.getMobile,
      required this.dataList,
      required this.isAdmin})
      : super(key: key);
  final List<DocumentSnapshot>? data;
  String? getMobile;
  List<Transactionss>? dataList;
  bool? isAdmin;

  // List<QueryDocumentSnapshot<Object?>> data;
  @override
  HorizontalGridViewState createState() => HorizontalGridViewState();
}

class HorizontalGridViewState extends ConsumerState<HorizontalGridView1>
    with TickerProviderStateMixin {
  final List<Tuple3<IconData, String, String>> iconOptions = [
    Tuple3(Icons.sort_by_alpha, "warnunexpectedcarelesssdfsfsafs",
        "sort_by_alpha"),
    Tuple3(Icons.snowshoeing, "sandlesslippershoe", "snowshoeing"),
    Tuple3(Icons.camera, "cameravidbuygiftnew", "camera"),
    Tuple3(Icons.gamepad, "gamegiftbuy", "gamepad"),
    Tuple3(Icons.groups, "petpuppyparrotdog", "groups"),
    Tuple3(
        Icons.pets, "friendpeopleuncledadmomsisbrolovesondaugteraunty", "pets"),
    Tuple3(Icons.group, "friendpeopleuncledadmomsisbrolovesondaugteraunty",
        "group"),
    Tuple3(Icons.person, "friendpeopleuncledadmomsisbrolovesondaugteraunty",
        "person"),
    Tuple3(Icons.install_mobile, "mobilerechargebuynewsellmomdadsis",
        "install_mobile"),
    Tuple3(Icons.system_update, "warnunexpectedcarelesssdfasfasf",
        "system_update"),
    Tuple3(Icons.festival, "celebrationtourexploretravel", "festival"),
    Tuple3(Icons.tour, "celebrationtourexploretravel", "tour"),
    Tuple3(Icons.home, "househome", "home"),
    Tuple3(Icons.settings, "mechanic", "settings"),
    Tuple3(Icons.favorite, "favoritelovewifemomdadsisbroperson", "favorite"),
    Tuple3(Icons.star, "favoritelovewifemomdadsisbroperson", "star"),
    Tuple3(Icons.family_restroom_rounded, "favoritelovewifemomdadsisbroperson",
        "family_restroom_rounded"),
    Tuple3(Icons.autorenew, "loanpayment", "autorenew"),
    Tuple3(Icons.key, "carbikecycle", "key"),
    Tuple3(Icons.add_box, "medicalhospitalemergency", "add_box"),
    Tuple3(Icons.shopping_cart_checkout, "shoppingnewbuy",
        "shopping_cart_checkout"),
    Tuple3(Icons.school, "schoolcollegepgfeesphdhigherstudiesbook", "school"),
    Tuple3(Icons.cast_for_education, "schoolcollegepgfeesphdhigherstudiesbook",
        "cast_for_education"),
    Tuple3(Icons.reduce_capacity, "schoolcollegepgfeesphdhigherstudiesbook",
        "reduce_capacity"),
    Tuple3(Icons.menu_book, "schoolcollegepgfeesphdhigherstudiesbook",
        "menu_book"),
    Tuple3(Icons.group, "workbuisnessnew", "group"),
    Tuple3(Icons.work, "workbuisnessnew", "work"),
    Tuple3(Icons.group_add, "workbuisnessnew", "group_add"),
    Tuple3(Icons.engineering, "workbuisnessnew", "engineering"),
    Tuple3(Icons.diversity_3, "workbuisnessnew", "diversity_3"),
    Tuple3(Icons.travel_explore, "buisnesstravelexploretripinvest",
        "travel_explore"),
    Tuple3(Icons.business_center, "workbuisnessnewinvest", "business_center"),
    Tuple3(
        Icons.attach_money,
        "moneysavingsborrowemergencfinanceinvestgrowbanksellbuyrupeeemergen",
        "attach_money"),
    Tuple3(
        Icons.credit_card,
        "moneysavingsfinanceinvestgrowbanksellbuyrupeeemergency",
        "credit_card"),
    Tuple3(
        Icons.account_balance,
        "moneysavingsfinanceinvestgrowbanksellbuyrupeeemergency",
        "account_balance"),
    Tuple3(
        Icons.paid,
        "moneysavingsemergencyfinanceinvestgrowbanksellbuyrupeeemergency",
        "paid"),
    Tuple3(Icons.savings,
        "moneysavingsemergencyfinanceinvestgrowbanksellbuyrupee", "savings"),
    Tuple3(
        Icons.account_balance_wallet,
        "moneysavingsfinanceinvestgrowbanksellbuyrupee",
        "account_balance_wallet"),
    Tuple3(Icons.currency_rupee,
        "moneysavingsfinanceinvestgrowbanksellbuyrupee", "currency_rupee"),
    Tuple3(Icons.payment, "paymentfinancesavingloanjweleducationfeebuynew",
        "payment"),
    Tuple3(Icons.health_and_safety, "healthsafetyinsurancemedicalemergency",
        "health_and_safety"),
    Tuple3(Icons.monitor_heart, "healthsafetyinsurancemedicalemergency",
        "monitor_heart"),
    Tuple3(
        Icons.emergency, "healthsafetyinsurancemedicalemergency", "emergency"),
    Tuple3(Icons.medical_information, "healthsafetyinsurancemedicalemergency",
        "medical_information"),
    Tuple3(Icons.personal_injury, "healthsafetyinsurancemedicalemergency",
        "personal_injury"),
    Tuple3(
        Icons.fitness_center, "fitnessgymtrainingworkoutfee", "fitness_center"),
    Tuple3(
        Icons.monitor_weight, "fitnessgymtrainingworkoutfee", "monitor_weight"),
    Tuple3(Icons.chair, "sofachairbedhouse", "chair"),
    Tuple3(Icons.living, "sofachairbedhouse", "living"),
    Tuple3(Icons.bed, "sofachairbedhouse", "bed"),
    Tuple3(Icons.bedtime, "sofachairbedhouse", "bedtime"),
    Tuple3(Icons.redeem, "birthdayweddinganniversarysurprisegiftbuy", "redeem"),
    Tuple3(Icons.card_giftcard, "birthdayweddinganniversarysurprisegiftbuy",
        "card_giftcard"),
    Tuple3(Icons.directions_bike, "bikecyclebuyhelmescooternewbuytour",
        "directions_bike"),
    Tuple3(
        Icons.two_wheeler, "bikecyclebuyhelmescooternewbuytour", "two_wheeler"),
    Tuple3(Icons.sports_motorsports, "bikecyclebuyhelmescooternewbuytour",
        "sports_motorsports"),
    Tuple3(
        Icons.motorcycle, "bikecyclebuyhelmescooternewbuytour", "motorcycle"),
    Tuple3(Icons.electric_moped, "bikecyclebuyhelmescooternewbuytour",
        "electric_moped"),
    Tuple3(Icons.electric_scooter, "bikecyclebuyhelmescooternewbuytour",
        "electric_scooter"),
    Tuple3(Icons.electric_bike, "bikecyclebuyhelmescooternewbuytour",
        "electric_bike"),
    Tuple3(Icons.bike_scooter, "bikecyclebuyhelmescooternewbuytour",
        "bike_scooter"),
    Tuple3(Icons.directions_car, "carbuytraveltour", "directions_car"),
    Tuple3(Icons.airport_shuttle, "carbuytraveltour", "airport_shuttle"),
    Tuple3(Icons.local_gas_station, "petroltravelbikecar", "local_gas_station"),
    Tuple3(Icons.precision_manufacturing, "servicerepairbikecarmechanic",
        "precision_manufacturing"),
    Tuple3(Icons.settings, "servicerepairbikecarmechanic", "settings"),
    Tuple3(Icons.menu_book, "bookgiftbuyread", "menu_book"),
    Tuple3(Icons.restaurant, "foodfamilyoutingdinnerlunch", "restaurant"),
    Tuple3(Icons.apartment, "homeloanhousebuyinvestment", "apartment"),
    Tuple3(Icons.real_estate_agent, "buyhouseloan", "real_estate_agent"),
    Tuple3(Icons.call, "mobilerechargebuyphonemobilegiftbirthday", "call"),
    Tuple3(Icons.phone_iphone, "mobilerechargebuyphonemobilegiftbirthday",
        "phone_iphone"),
    Tuple3(Icons.smartphone, "mobilerechargebuyphonemobilegiftbirthday",
        "smartphone"),
    Tuple3(Icons.phone_android, "mobilerechargebuyphonemobilegiftbirthday",
        "phone_android"),
    Tuple3(
        Icons.tv,
        "mobilerechargebuyphonemobilegiftbirthdaytvremotecomputermonitor",
        "tv"),
    Tuple3(
        Icons.monitor,
        "mobilerechargebuyphonemobilegiftbirthdaytvremotecomputermonitor",
        "monitor"),
    Tuple3(
        Icons.settings_remote,
        "mobilerechargebuyphonemobilegiftbirthdaytvremotecomputermonitor",
        "settings_remote"),
    Tuple3(Icons.watch, "watchgiftbirthdaypresent", "watch"),
    Tuple3(Icons.wind_power, "acfanwindcooler", "wind_power"),
    Tuple3(Icons.print, "buyprinterscanner", "print"),
    Tuple3(Icons.scanner, "buyprinterscanner", "scanner"),
    Tuple3(Icons.blender, "mixyblender", "blender"),
    Tuple3(Icons.celebration, "celebrationgiftmomdadbrosissondaughter",
        "celebration"),
    Tuple3(Icons.cake, "celebrationgiftmomdadbrosissondaughter", "cake"),
    Tuple3(Icons.warning, "warnunexpectedcareless", "warning"),
  ];
  double remainingBalance = 0.0;

  // List<Goal> getGoalsList = [];

  @override
  void initState() {
    remainingBalance = ref.read(UserDashListProvider.notifier).getNetbalance;
    print(remainingBalance);
    super.initState();
    ref.read(getUserGoalBal.notifier).state = 0.0;
  }

  @override
  void dispose() {
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    remainingBalance = ref.read(UserDashListProvider.notifier).getNetbalance;

    return Container(
      child: widget.data?.isEmpty ?? true
          ? Center(
              child: InkWell(
                child: Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Image.asset(
                        'images/final/Dashboard/Goal.png',
                        width: 100,
                        height: 100,
                      ),
                      SizedBox(height: 16),
                      Text(
                        "Tap to Add Goals",
                        style: TextStyle(
                          fontSize: 20,
                          fontWeight: FontWeight.bold,
                        ),
                        textAlign: TextAlign.center,
                      ),
                      SizedBox(height: 16),
                      Text(
                        "Add Goals and Start Saving your Money!",
                        textAlign: TextAlign.center,
                      ),
                    ],
                  ),
                ),
                onTap: () async {
                  Navigator.push(
                    context,
                    PageRouteBuilder(
                      transitionDuration: Duration(milliseconds: 500),
                      pageBuilder: (_, __, ___) => AddGoalWidget(
                        getDocId:
                            ref.read(UserDashListProvider.notifier).getDocId,
                        getMobile: widget.getMobile,
                      ),
                      transitionsBuilder: (_, animation, __, child) {
                        return ScaleTransition(
                          scale: Tween<double>(
                            begin: 0.0,
                            end: 1.0,
                          ).animate(animation),
                          child: child,
                        );
                      },
                    ),
                  ).then((value) {
                    // Handle navigation result if needed
                  });
                },
              ),
            )
          : ListView.builder(
              shrinkWrap: true,
              physics: NeverScrollableScrollPhysics(),
              itemCount: widget.data?.length,
              itemBuilder: (context, index) {
                // ref.read(UserDashListProvider.notifier).totalSavedGoalAmount = 0.0;

                if (index > 2) {
                  return SizedBox
                      .shrink(); // Return an empty widget for transactions beyond the last three
                }

                var goalData =
                    widget.data?[index].data() as Map<String, dynamic>;
                var goalId = widget.data?[index].id as String;

                //todo:- 7.2.24 try calculating balance against goals

                return StreamBuilder<QuerySnapshot>(
                    stream: FirebaseFirestore.instance
                        .collection('users')
                        .doc(ref.read(UserDashListProvider.notifier).getDocId)
                        .collection('transaction')
                        .where('goalId', isEqualTo: goalId)
                        .snapshots(),
                    builder: (BuildContext context,
                        AsyncSnapshot<QuerySnapshot> snapshot) {
                      double totalSavedAmount = 0.0;

                      if (!snapshot.hasData) {
                        return CircularProgressIndicator(); // Loading indicator
                      }

                      List<DocumentSnapshot> transactions = snapshot.data!.docs;

                      // Calculate total saved amount for this goal
                      for (DocumentSnapshot transaction in transactions) {
                        int? getAmount = transaction['amount'];
                        bool? isDeposit = transaction['isDeposit'];

                        if (isDeposit ?? false) {
                          totalSavedAmount += getAmount ?? 0;
                          // ref.read(UserDashListProvider.notifier).totalSavedGoalAmount += totalSavedAmount;
                        } else {
                          totalSavedAmount -= getAmount ?? 0;
                          // ref.read(UserDashListProvider.notifier).totalSavedGoalAmount -= totalSavedAmount;
                        }
                      }

                      if (totalSavedAmount < 0) {
                        totalSavedAmount = 0;
                        // ref.read(UserDashListProvider.notifier).totalSavedGoalAmount = totalSavedAmount;
                      }

                      return buildRowWidget(
                          goalData,
                          context,
                          widget.getMobile,
                          goalId ?? "",
                          totalSavedAmount,
                          widget.dataList,
                          widget.isAdmin);
                    });
              },
            ),
    );
  }

  Future<Tuple2<List<Goal>, String>> updateGoalProvider() async {
    var goalDetails = await ref
        .read(UserDashListProvider.notifier)
        .updateGoalDetails(
            ref.read(UserDashListProvider.notifier).goalDocuments,
            ref.read(UserDashListProvider.notifier).iconOptions);

    return goalDetails;
  }

  Widget buildRowWidget(
      Map<String, dynamic> goalData,
      BuildContext context,
      String? getMobile,
      String? getGoalDocId,
      double? getTotalGoalAmount,
      List<Transactionss>? dataList,
      bool? isAdmin) {
    final data = goalData;
    final goalTitle = data['goalTitle'];
    final goalTarget = data['goalTarget'];
    final goalPriority = data['goalPriority'];
    final goalToDelete = data['goalToDelete'];
    // final goalIconName = data['goalIcon'];

    // Check if 'goalIcon' key is present in the data map
    IconData? goalIcon = Icons.error;
    if (data.containsKey('goalIcon')) {
      // Use null-aware operator to safely access 'goalIcon'
      String? getData = data['goalIcon'];

      //todo:- 10.1.24 ,finding matching icon from array
      Tuple3<IconData, String, String> defaultIcon =
          Tuple3(Icons.error, "default", "default");
      Tuple3<IconData, String, String>? matchingIcon = iconOptions.firstWhere(
        (tuple) => tuple.item3 == getData,
        orElse: () => defaultIcon,
      );

      if (matchingIcon != null) {
        goalIcon = matchingIcon.item1;
      } else {
        // Handle the case when no matching icon is found
        goalIcon = Icons
            .error; // You can set a default icon or handle it in any other way
      }
    } else {
      // Handle the case when 'goalIcon' key is not present
      // You can set a default icon or handle it in any other way
      goalIcon = Icons.flag;
    }

    double goalAllocation = getTotalGoalAmount ?? 0.0;
    double currentBalance = 0.0;
    String? currentStatus = "";
    Color? getColor = Colors.red;

    getColor = generateRandomDarkColor();
    currentBalance = goalAllocation;
    remainingBalance -= goalAllocation;
    print("current remaining bal is $remainingBalance");

    // ref.read(remainingBalProvider.notifier).state = remainingBalance;

    //todo;- chaging status of goal
    if (currentBalance! >= goalTarget!) {
      currentStatus = "Completed";
    } else {
      currentStatus = "In Progress";
    }

    return InkWell(
      onTap: () {
        if (currentBalance == 0.0) {
          return;
        }

        if (isAdmin) {
          return;
        }

        _showGoalSelectionBottomSheet(
            goalTitle,
            goalTarget,
            goalAllocation,
            goalIcon!,
            currentBalance.toString(),
            goalTarget!.round().toString(),
            widget.getMobile ?? "",
            ref.read(UserDashListProvider.notifier).getUser ?? "",
            ref.read(UserDashListProvider.notifier).getDocId ?? "",
            ((double.tryParse(currentBalance.toString()) ?? 0.0) /
                        (double.tryParse(goalTarget.toString()) ?? 1.0) *
                        100) <
                    100
                ? true
                : false,
            getGoalDocId ?? "",
            dataList);
      },
      child: Container(
        height: 15.h,
        child: Card(
          elevation: 4.0,
          margin: EdgeInsets.symmetric(horizontal: 8.0, vertical: 7.0),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.0),
          ),
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(20.0),
              gradient: LinearGradient(
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
                colors: [
                  Constants.secondary1.withOpacity(0.5),
                  Constants.secondary,
                ],
              ),
            ),
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Center(
                child: Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          width: 80,
                          height: 80,
                          decoration: BoxDecoration(
                            shape: BoxShape.circle,
                            color: Colors
                                .white60, // Set initial background color to blue
                          ),
                          child: CustomPaint(
                            painter: PieChartPainter(
                                currentSavedAmount: double.tryParse(
                                        currentBalance.toString()) ??
                                    0.0,
                                targetAmount:
                                    double.tryParse(goalTarget.toString()) ??
                                        1.0,
                                getColor: Colors.black),
                            child: Center(
                              child: Container(
                                height: 60,
                                width: 60,
                                decoration: const BoxDecoration(
                                  shape: BoxShape.circle,
                                  color: Colors
                                      .white, // Set initial background color to blue
                                ),
                                child: Center(
                                    child: Container(
                                  width: 50,
                                  height: 50,
                                  color: Colors.transparent,
                                  child: Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: FittedBox(
                                      fit: BoxFit.fitWidth,
                                      child:

                                          // SvgPicture.asset(() {
                                          //   return "images/sample.svg";
                                          // }(), color: generateRandomLightColor()),
                                          new Icon(
                                        goalIcon,
                                        color: Colors.black,
                                      ),
                                    ),
                                  ),
                                )),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                    SizedBox(width: 16.0),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Expanded(
                                child: Text(
                                  goalTitle,
                                  style: Theme.of(context)
                                      .textTheme
                                      .titleLarge
                                      ?.copyWith(
                                          overflow: TextOverflow.ellipsis),
                                ),
                              ),
                            ],
                          ),
                          Text('Target: $goalTarget',
                              style: Theme.of(context)
                                  .textTheme
                                  .bodyLarge
                                  ?.copyWith(overflow: TextOverflow.ellipsis)),
                          Text(
                            'Achieved: $getTotalGoalAmount',
                            style: Theme.of(context)
                                .textTheme
                                .bodyMedium
                                ?.copyWith(overflow: TextOverflow.ellipsis),
                          ),
                        ],
                      ),
                    ),
                    Column(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      crossAxisAlignment: CrossAxisAlignment.end,
                      children: [
                        Text(
                          ((double.tryParse(currentBalance.toString()) ?? 0.0) /
                                      (double.tryParse(goalTarget.toString()) ??
                                          1.0) *
                                      100) <
                                  100
                              ? "${((double.tryParse(currentBalance.toString()) ?? 0.0) / (double.tryParse(goalTarget.toString()) ?? 1.0) * 100).toStringAsFixed(2)}%"
                              : "100%",
                          style: Theme.of(context)
                              .textTheme
                              .titleSmall
                              ?.copyWith(
                                  color: currentStatus == 'Completed'
                                      ? Colors.green
                                      : Colors.red,
                                  overflow: TextOverflow.ellipsis),
                          textAlign: TextAlign.end,
                        ),
                        Visibility(
                          visible: !isAdmin!,
                          child: CustomButton(
                            getReqAmount: goalTarget!.round().toString(),
                            getTargetAmount: goalAllocation.round().toString(),
                            getMobile: widget.getMobile,
                            getUser:
                                ref.read(UserDashListProvider.notifier).getUser,
                            getDocId: ref
                                .read(UserDashListProvider.notifier)
                                .getDocId,
                            isSaveMoney:
                                ((double.tryParse(currentBalance.toString()) ??
                                                0.0) /
                                            (double.tryParse(
                                                    goalTarget.toString()) ??
                                                1.0) *
                                            100) <
                                        100
                                    ? true
                                    : false,
                            getGoalDocId: getGoalDocId,
                            dataList: dataList,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }

  //todo:- 19.2.24 ,showing bottom sheet
  Future<void> _showGoalSelectionBottomSheet(
      String goalTitle,
      int goalTarget,
      double goalAchieved,
      IconData goalIcon,
      String getCurrentBal,
      String btnReqAmount,
      String btnGetMobile,
      String btnGetUser,
      String btnDocId,
      bool btnIsSaveMoney,
      String btnGoalDocId,
      List<Transactionss>? dataList) async {
    // IconData? selectedIcon

    await showModalBottomSheet(
      context: context,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(50.0), // Adjust the radius as needed
          topRight: Radius.circular(50.0), // Adjust the radius as needed
        ),
      ),
      builder: (BuildContext context) {
        return IconSelectionBottomSheet(
          goalTitle: goalTitle,
          goalTarget: goalTarget,
          goalAchieved: goalAchieved,
          goalIcon: goalIcon,
          getCurrentBalance: getCurrentBal,
          btnReqAmount: btnReqAmount,
          btnGetMobile: btnGetMobile,
          btnGetUser: btnGetUser,
          btnDocId: btnDocId,
          btnIsSaveMoney: btnIsSaveMoney,
          btnGoalDocId: btnGoalDocId,
          dataList: dataList,
        );
      },
    );
  }
}

//todo:-
class CustomButton extends StatelessWidget {
  final String? getReqAmount;
  final String? getTargetAmount;
  final String? getMobile;
  final String? getUser;
  final String? getDocId;
  final bool? isSaveMoney;
  final String? getGoalDocId;
  final List<Transactionss>? dataList;

  CustomButton(
      {required this.getReqAmount,
      required this.getTargetAmount,
      required this.getMobile,
      required this.getUser,
      required this.getDocId,
      required this.isSaveMoney,
      required this.getGoalDocId,
      required this.dataList});

  @override
  Widget build(BuildContext context) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
        backgroundColor: isSaveMoney!
            ? FlutterFlowTheme.of(context).primary
            : FlutterFlowTheme.of(context).primary1,
        shape: RoundedRectangleBorder(
          borderRadius:
              BorderRadius.circular(10.0), // Set the border radius here
        ), // Set the background color here
      ),
      onPressed: () {
        isSaveMoney!
            ? Navigator.push(
                context,
                PageRouteBuilder(
                  transitionDuration: Duration(milliseconds: 400),
                  pageBuilder: (_, __, ___) => SaveMoney(
                    getMobile: getMobile,
                    getUserName: getUser,
                    getGoalDocId: getGoalDocId,
                    getTransData: dataList,
                    getPaymentService: PaymentService.maakaMoney,
                  ),
                  transitionsBuilder: (_, animation, __, child) {
                    return SlideTransition(
                      position: Tween<Offset>(
                        begin: Offset(0, 1),
                        // You can adjust the start position
                        end: Offset.zero, // You can adjust the end position
                      ).animate(animation),
                      child: child,
                    );
                  },
                ),
              )
            : Navigator.push(
                context,
                PageRouteBuilder(
                  transitionDuration: Duration(milliseconds: 400),
                  pageBuilder: (_, __, ___) => RequestMoney(
                    getMobile: getMobile,
                    isSavingReq: true,
                    getUserName: getUser,
                    getDocId: getDocId,
                    getReqAmnt: getTargetAmount,
                    getGoalTargetAmnt: getReqAmount,
                    getGoalDocId: getGoalDocId,
                  ),
                  transitionsBuilder: (_, animation, __, child) {
                    return SlideTransition(
                      position: Tween<Offset>(
                        begin: Offset(0, 1),
                        // You can adjust the start position
                        end: Offset.zero, // You can adjust the end position
                      ).animate(animation),
                      child: child,
                    );
                  },
                ),
              );
      },
      child: Text(isSaveMoney! ? "Save Money" : 'Get Money',
          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
              color: Constants.secondary,
              overflow: TextOverflow.ellipsis,
              fontWeight: FontWeight.bold)

          // TextStyle(
          //     fontSize: 12, fontWeight: FontWeight.w700, color: Colors.white),
          ),
    );
  }
}

//todo:-19.2.24 showing bottom sheet
class IconSelectionBottomSheet extends StatefulWidget {
  IconSelectionBottomSheet({
    @required this.goalTitle,
    @required this.goalTarget,
    @required this.goalAchieved,
    @required this.goalIcon,
    @required this.getCurrentBalance,
    @required this.btnReqAmount,
    @required this.btnGetMobile,
    @required this.btnGetUser,
    @required this.btnDocId,
    @required this.btnIsSaveMoney,
    @required this.btnGoalDocId,
    @required this.dataList,
  });

  final String? goalTitle;
  int? goalTarget;
  double? goalAchieved;
  IconData? goalIcon;
  String? getCurrentBalance;

  String? btnReqAmount;
  String? btnGetMobile;
  String? btnGetUser;
  String? btnDocId;
  bool? btnIsSaveMoney;
  String? btnGoalDocId;

  List<Transactionss>? dataList;

  @override
  _IconSelectionBottomSheetState createState() =>
      _IconSelectionBottomSheetState();
}

class _IconSelectionBottomSheetState extends State<IconSelectionBottomSheet> {
  final FirebaseFirestore firestore = FirebaseFirestore.instance;

  final SingletonReusableCode _singleton = SingletonReusableCode();

  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      height: 25.h,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(30),
          topRight: Radius.circular(30),
        ),
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Constants.secondary1.withOpacity(0.5),
            Constants.secondary,
          ],
        ),
      ),
      child: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.only(top: 8.0),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      SingleChildScrollView(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Container(
                              width: 70,
                              height: 70,
                              decoration: BoxDecoration(
                                shape: BoxShape.circle,
                                color: Colors
                                    .white60, // Set initial background color to blue
                              ),
                              child: CustomPaint(
                                painter: PieChartPainter(
                                    currentSavedAmount: double.tryParse(widget
                                            .getCurrentBalance
                                            .toString()) ??
                                        0.0,
                                    targetAmount: double.tryParse(
                                            widget.goalTarget.toString()) ??
                                        1.0,
                                    getColor: Colors.black),
                                child: Center(
                                  child: Container(
                                    height: 50,
                                    width: 50,
                                    decoration: const BoxDecoration(
                                      shape: BoxShape.circle,
                                      color: Colors
                                          .white, // Set initial background color to blue
                                    ),
                                    child: Center(
                                        child: Container(
                                      width: 50,
                                      height: 50,
                                      color: Colors.transparent,
                                      child: Padding(
                                        padding: const EdgeInsets.all(8.0),
                                        child: FittedBox(
                                          fit: BoxFit.fitWidth,
                                          child: Icon(
                                            widget.goalIcon ?? Icons.flag,
                                            color: Colors.black,
                                          ),
                                        ),
                                      ),
                                    )),
                                  ),
                                ),
                              ),
                            ),
                            Text(
                                ((double.tryParse(widget.getCurrentBalance
                                                    .toString()) ??
                                                0.0) /
                                            (double.tryParse(widget.goalTarget
                                                    .toString()) ??
                                                1.0) *
                                            100) <
                                        100
                                    ? "${((double.tryParse(widget.getCurrentBalance.toString()) ?? 0.0) / (double.tryParse(widget.goalTarget.toString()) ?? 1.0) * 100).toStringAsFixed(2)}%"
                                    : "100%",
                                style: Theme.of(context)
                                    .textTheme
                                    .titleSmall
                                    ?.copyWith(
                                        color: Constants.secondary3,
                                        fontWeight: FontWeight.bold,
                                        overflow: TextOverflow.ellipsis)),
                          ],
                        ),
                      ),
                      SizedBox(width: 16.0),
                      Expanded(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Row(
                              children: [
                                Expanded(
                                  child: Text(
                                    widget.goalTitle ?? "",
                                    style: Theme.of(context)
                                        .textTheme
                                        .titleLarge
                                        ?.copyWith(
                                            overflow: TextOverflow.ellipsis),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              children: [
                                Text("Target:",
                                    style: Theme.of(context)
                                        .textTheme
                                        .bodyLarge
                                        ?.copyWith(
                                            overflow: TextOverflow.ellipsis)),
                                SizedBox(
                                  width: 10,
                                ),
                                Text(widget.goalTarget.toString() ?? "",
                                    style: Theme.of(context)
                                        .textTheme
                                        .bodyLarge
                                        ?.copyWith(
                                            overflow: TextOverflow.ellipsis)),
                              ],
                            ),
                            Row(
                              children: [
                                Text("Achieved:",
                                    style: Theme.of(context)
                                        .textTheme
                                        .bodyMedium
                                        ?.copyWith(
                                            overflow: TextOverflow.ellipsis)),
                                SizedBox(
                                  width: 10,
                                ),
                                Text(
                                  widget.goalAchieved.toString() ?? "",
                                  style: Theme.of(context)
                                      .textTheme
                                      .bodyMedium
                                      ?.copyWith(
                                          overflow: TextOverflow.ellipsis),
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                      Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.end,
                        children: [
                          InkWell(
                            child: Container(
                              decoration: BoxDecoration(
                                shape: BoxShape.circle,
                                color: Colors
                                    .transparent, // You can set your desired color here
                              ),
                              child: Icon(
                                Icons.delete,
                                color: Colors
                                    .black, // You can set your desired color here
                              ),
                            ),
                            onTap: () {
                              _singleton.showAlertDialog(
                                context: context,
                                title: "Are you sure?",
                                message: "Do you want to Delete this Goal?",
                                onCancelPressed: () {},
                                onOkPressed: () async {
                                  deleteGoal();
                                },
                              );
                            },
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
              Expanded(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: FlutterFlowTheme.of(context).primary1,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(
                              10.0), // Set the border radius here
                        ), // Set the background color here
                      ),
                      onPressed: () {
                        Navigator.pop(context);

                        Navigator.push(
                          context,
                          PageRouteBuilder(
                            transitionDuration: Duration(milliseconds: 400),
                            pageBuilder: (_, __, ___) => RequestMoney(
                              getMobile: widget.btnGetMobile,
                              isSavingReq: true,
                              getUserName: widget.btnGetUser,
                              getDocId: widget.btnDocId,
                              getReqAmnt: widget.goalAchieved.toString(),
                              getGoalTargetAmnt: widget.goalTarget.toString(),
                              getGoalDocId: widget.btnGoalDocId,
                            ),
                            transitionsBuilder: (_, animation, __, child) {
                              return SlideTransition(
                                position: Tween<Offset>(
                                  begin: Offset(0, 1),
                                  // You can adjust the start position
                                  end: Offset
                                      .zero, // You can adjust the end position
                                ).animate(animation),
                                child: child,
                              );
                            },
                          ),
                        );
                      },
                      child: Text(
                        'Get Money',
                        style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                            color: Constants.secondary,
                            overflow: TextOverflow.ellipsis,
                            fontWeight: FontWeight.bold),
                      ),
                    ),
                    ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: FlutterFlowTheme.of(context).primary,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(
                              10.0), // Set the border radius here
                        ), // Set the background color here
                      ),
                      onPressed: () {
                        Navigator.pop(context);

                        Navigator.push(
                          context,
                          PageRouteBuilder(
                            transitionDuration: Duration(milliseconds: 400),
                            pageBuilder: (_, __, ___) => SaveMoney(
                              getMobile: widget.btnGetMobile,
                              getUserName: widget.btnGetUser,
                              getGoalDocId: widget.btnGoalDocId,
                              getTransData: widget.dataList,
                              getPaymentService: PaymentService.maakaMoney,
                            ),
                            transitionsBuilder: (_, animation, __, child) {
                              return SlideTransition(
                                position: Tween<Offset>(
                                  begin: Offset(0, 1),
                                  // You can adjust the start position
                                  end: Offset
                                      .zero, // You can adjust the end position
                                ).animate(animation),
                                child: child,
                              );
                            },
                          ),
                        );
                      },
                      child: Text(
                        'Save Money',
                        style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                            color: Constants.secondary,
                            overflow: TextOverflow.ellipsis,
                            fontWeight: FontWeight.bold),
                      ),
                    )
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Color generateRandomDarkColor() {
    Random random = Random();

    // Generate random values for RGB components in the range 0-127
    int red = random.nextInt(128);
    int green = random.nextInt(128);
    int blue = random.nextInt(128);

    // Combine the values to create a dark color
    Color darkColor = Color.fromARGB(255, red, green, blue);

    return darkColor;
  }

  Future<void> deleteGoal() async {
    firestore
        .collection('users')
        .doc(widget.btnDocId)
        .collection('goals')
        .doc(widget.btnGoalDocId)
        .delete()
        .then((_) async {
      Constants.showToast("Goal Deleted Successfully", ToastGravity.CENTER);

      Navigator.pop(context);

      //todo:- 2.12.23 adding notification to let admin know payment initiated
      String? token = await NotificationService.getDocumentIDsAndData();
      if (token != null) {
        Response? response = await NotificationService.postNotificationRequest(
            token,
            "Hi Admin,\n${widget.btnGetUser}  Deleted Goal",
            "Hurry up, let's Check with Admin App.");
      }
    });
  }
}


